
floatwindow.c,562
static iWindowClass *parent_class = NULL;parent_class36,967
floatwindow_destroy( GtkObject *object )floatwindow_destroy39,1022
floatwindow_popdown( GtkWidget *widget )floatwindow_popdown59,1390
floatwindow_build( GtkWidget *widget )floatwindow_build86,2102
floatwindow_class_init( FloatwindowClass *class )floatwindow_class_init133,3525
floatwindow_init( Floatwindow *floatwindow )floatwindow_init161,4243
floatwindow_get_type( void )floatwindow_get_type167,4327
floatwindow_link( Floatwindow *floatwindow, Model *model )floatwindow_link192,4874

toolview.c,1064
static ViewClass *parent_class = NULL;parent_class36,952
static GQuark toolview_ws_quark = 0;toolview_ws_quark40,1035
toolview_destroy( GtkObject *object )toolview_destroy43,1086
toolview_finalize( GObject *gobject )toolview_finalize62,1433
toolview_activate_cb( GtkWidget *widget, Toolitem *toolitem )toolview_activate_cb72,1620
toolview_select_cb( GtkWidget *widget, Toolitem *toolitem )toolview_select_cb100,2269
toolview_refresh_sub( Toolitem *toolitem, Workspace *ws, GtkWidget *menu )toolview_refresh_sub112,2586
toolview_get_workspace( Toolview *tview )toolview_get_workspace187,4456
toolview_destroy_cb( GtkWidget *widget, Toolview *tview )toolview_destroy_cb202,4765
toolview_refresh( vObject *vobject )toolview_refresh212,4930
toolview_link( View *view, Model *model, View *parent )toolview_link242,5689
toolview_class_init( ToolviewClass *class )toolview_class_init258,6033
toolview_init( Toolview *toolview )toolview_init281,6578
toolview_get_type( void )toolview_get_type287,6658
toolview_new( void )toolview_new310,7128

spin.h,562
#define TYPE_SPIN TYPE_SPIN30,896
#define SPIN(SPIN31,932
#define SPIN_CLASS(SPIN_CLASS32,995
#define IS_SPIN(IS_SPIN34,1082
#define IS_SPIN_CLASS(IS_SPIN_CLASS35,1142
typedef struct _Spin {_Spin37,1219
	View view;view38,1242
	GtkWidget *up;				/* Arrow buttons */up42,1282
	GtkWidget *down;down43,1321
} Spin;Spin44,1339
typedef struct _SpinClass {_SpinClass46,1348
	ViewClass parent_class;parent_class47,1376
	void (*up_click)( Spin * );up_click49,1402
	void (*down_click)( Spin * );down_click50,1431
} SpinClass;SpinClass51,1462

filesel.h,1828
typedef struct _FileselFileType {_FileselFileType35,1145
  const char *name;name39,1270
  const char **suffixes;suffixes46,1464
} FileselFileType;FileselFileType47,1489
#define TYPE_FILESEL TYPE_FILESEL67,2080
#define FILESEL(FILESEL68,2122
#define FILESEL_CLASS(FILESEL_CLASS70,2197
#define IS_FILESEL(IS_FILESEL72,2293
#define IS_FILESEL_CLASS(IS_FILESEL_CLASS73,2359
#define FILESEL_MAX_FILTERS FILESEL_MAX_FILTERS78,2469
typedef struct _Filesel {_Filesel80,2504
	iDialog parent;parent81,2530
        GtkWidget *chooser;             /* Filechooser widget */chooser85,2580
        GtkWidget *space;               /* Space available */space86,2645
        GtkWidget *info;                /* File info */info87,2707
        Preview *preview;		/* Selected file preview */preview88,2763
	GtkFileFilter *filter[FILESEL_MAX_FILTERS];	filter89,2818
	gboolean incr;			/* True for increment filename */incr93,2882
	gboolean imls;			/* True if this is image load/save */imls94,2934
	gboolean save;			/* True if this is a save dialog */save95,2990
	gboolean multi;			/* Multiple-select */multi96,3044
	gboolean start_name;		/* True if we have a suggested name */start_name97,3085
	FileselFileType **type;		/* Allowable types for this filesel */type99,3148
	int ntypes;ntypes100,3213
	int default_type;default_type101,3226
	const char *type_pref;		/* Pref to set on type change */type_pref102,3245
	char *current_dir;current_dir107,3388
	iWindowFn done_cb;		/* On OK */done_cb109,3409
	void *client;client110,3442
} Filesel;Filesel111,3457
typedef struct _FileselClass {_FileselClass113,3469
	iDialogClass parent_class;parent_class114,3500
} FileselClass;FileselClass118,3550
typedef void *(*FileselMapFn)( Filesel *, const char *, void *, void * );FileselMapFn124,3675

toolkitview.h,691
#define TYPE_TOOLKITVIEW TYPE_TOOLKITVIEW30,891
#define TOOLKITVIEW(TOOLKITVIEW31,941
#define TOOLKITVIEW_CLASS(TOOLKITVIEW_CLASS33,1028
#define IS_TOOLKITVIEW(IS_TOOLKITVIEW35,1136
#define IS_TOOLKITVIEW_CLASS(IS_TOOLKITVIEW_CLASS36,1210
struct _Toolkitview {_Toolkitview39,1304
	View parent_class;parent_class40,1326
	Toolkitgroupview *kitgview;kitgview42,1347
	GtkWidget *menu;	/* Menu for this kit */menu44,1377
	GtkWidget *item;	/* Menu item in enclosing menu */item45,1419
	guint destroy_sid;destroy_sid46,1471
typedef struct _ToolkitviewClass {_ToolkitviewClass49,1495
	ViewClass parent_class;parent_class50,1530
} ToolkitviewClass;ToolkitviewClass54,1577

rhs.c,1374
static HeapmodelClass *parent_class = NULL;parent_class37,996
rhs_finalize( GObject *gobject )rhs_finalize40,1053
rhs_child_add( iContainer *parent, iContainer *child, int pos )rhs_child_add64,1515
rhs_child_remove( iContainer *parent, iContainer *child )rhs_child_remove85,1946
rhs_parent_add( iContainer *child )rhs_parent_add100,2326
rhs_view_new( Model *model, View *parent )rhs_view_new108,2476
rhs_load( Model *model, rhs_load114,2566
rhs_save( Model *model, xmlNode *xnode )rhs_save136,3053
	const char *name;name155,3442
	GType (*type)( void );type156,3461
} RhsGraphic;RhsGraphic157,3485
static RhsGraphic rhs_graphic[] = {rhs_graphic162,3590
rhs_refresh_graphic( Rhs *rhs, PElement *root )rhs_refresh_graphic187,4372
rhs_new_heap( Heapmodel *heapmodel, PElement *root )rhs_new_heap228,5218
rhs_set_vislevel( Rhs *rhs, int vislevel )rhs_set_vislevel283,6441
rhs_vislevel_up( Rhs *rhs )rhs_vislevel_up343,7536
rhs_vislevel_down( Rhs *rhs )rhs_vislevel_down349,7619
rhs_update_model( Heapmodel *heapmodel )rhs_update_model355,7713
rhs_class_init( RhsClass *class )rhs_class_init367,7943
rhs_init( Rhs *rhs )rhs_init400,8783
rhs_get_type( void )rhs_get_type417,9100
rhs_new( Row *row )rhs_new442,9602
rhs_child_edited_sub( Model *model )rhs_child_edited_sub458,9901
rhs_child_edited( Rhs *rhs )rhs_child_edited471,10150

iregionview.c,392
static iImageviewClass *parent_class = NULL;parent_class36,945
iregionview_destroy( GtkObject *object )iregionview_destroy39,1003
iregionview_class_init( iRegionviewClass *class )iregionview_class_init56,1334
iregionview_init( iRegionview *iregionview )iregionview_init72,1608
iregionview_get_type( void )iregionview_get_type80,1729
iregionview_new( void )iregionview_new103,2217

log.h,815
#define TYPE_LOG TYPE_LOG30,943
#define LOG(LOG31,977
#define LOG_CLASS(LOG_CLASS32,1049
#define IS_LOG(IS_LOG34,1135
#define IS_LOG_CLASS(IS_LOG_CLASS35,1205
#define LOG_GET_CLASS(LOG_GET_CLASS37,1285
struct _Log {_Log40,1375
	iWindow parent_class;parent_class41,1389
	GtkWidget *view;	/* The textview we use to show the log */view43,1413
typedef struct _LogClass {_LogClass46,1477
	iWindowClass parent_class;parent_class47,1504
	GtkActionEntry *actions;actions51,1574
	int n_actions;n_actions52,1600
	GtkToggleActionEntry *toggle_actions;toggle_actions53,1616
	int n_toggle_actions;n_toggle_actions54,1655
	const char *action_name;action_name55,1678
	const char *ui_description;ui_description56,1704
	const char *menu_bar_name;menu_bar_name57,1733
} LogClass;LogClass58,1761

iimage.h,1133
#define TYPE_IIMAGE TYPE_IIMAGE30,906
#define IIMAGE(IIMAGE31,946
#define IIMAGE_CLASS(IIMAGE_CLASS33,1030
#define IS_IIMAGE(IS_IIMAGE35,1125
#define IS_IIMAGE_CLASS(IS_IIMAGE_CLASS37,1204
#define IIMAGE_GET_CLASS(IIMAGE_GET_CLASS39,1290
struct _iImage {_iImage42,1389
	Classmodel parent_class;parent_class43,1406
	ImageValue value;value47,1456
	GSList *classmodels;	classmodels51,1531
	GSList *views;views55,1609
	int image_left, image_top;	/* Scroll position */image_left59,1669
	int image_left, image_top;	/* Scroll position */image_top59,1669
	int image_mag;			/* Scale */image_mag60,1719
	gboolean show_status;show_status64,1777
	gboolean show_paintbox;show_paintbox65,1800
	gboolean show_convert;show_convert66,1825
	gboolean show_rulers;	show_rulers67,1849
	double scale, offset;scale71,1909
	double scale, offset;offset71,1909
	gboolean falsecolour;falsecolour72,1932
	gboolean type;type73,1955
	VipsBuf caption_buffer;caption_buffer77,2021
typedef struct _iImageClass {_iImageClass80,2050
	ClassmodelClass parent_class;parent_class81,2080
} iImageClass;iImageClass85,2133

group.h,424
#define TYPE_GROUP TYPE_GROUP30,897
#define GROUP(GROUP31,935
#define GROUP_CLASS(GROUP_CLASS32,1001
#define IS_GROUP(IS_GROUP34,1091
#define IS_GROUP_CLASS(IS_GROUP_CLASS35,1153
typedef struct _Group {_Group38,1235
	Value parent_object;parent_object39,1259
} Group;Group41,1282
typedef struct _GroupClass {_GroupClass43,1292
	ValueClass parent_class;parent_class44,1321
} GroupClass;GroupClass48,1369

filemodel.c,4200
#define DEBUG_SAVEFILEDEBUG_SAVEFILE41,1122
static ModelClass *parent_class = NULL;parent_class45,1163
static GSList *filemodel_registered = NULL;filemodel_registered47,1204
filemodel_register( Filemodel *filemodel )filemodel_register53,1372
filemodel_unregister( Filemodel *filemodel )filemodel_unregister70,1738
filemodel_top_load( Filemodel *filemodel, filemodel_top_load89,2160
filemodel_set_modified( Filemodel *filemodel, gboolean modified )filemodel_set_modified114,2747
filemodel_set_window_hint( Filemodel *filemodel, iWindow *iwnd )filemodel_set_window_hint123,2988
filemodel_get_window_hint( Filemodel *filemodel )filemodel_get_window_hint129,3101
filemodel_save_all( Filemodel *filemodel, const char *filename )filemodel_save_all138,3277
filemodel_info( iObject *iobject, VipsBuf *buf )filemodel_info155,3718
filemodel_set_filename( Filemodel *filemodel, const char *filename )filemodel_set_filename173,4267
filemodel_finalize( GObject *gobject )filemodel_finalize182,4486
filemodel_save( Model *model, xmlNode *xnode )filemodel_save205,5000
filemodel_load( Model *model,filemodel_load220,5315
filemodel_real_top_load( Filemodel *filemodel,filemodel_real_top_load237,5704
filemodel_real_set_modified( Filemodel *filemodel, gboolean modified )filemodel_real_set_modified244,5842
filemodel_save_all_xml( Filemodel *filemodel, const char *filename )filemodel_save_all_xml264,6321
filemodel_save_all_text( Filemodel *filemodel, const char *filename )filemodel_save_all_text319,7721
filemodel_real_save_all( Filemodel *filemodel, const char *filename )filemodel_real_save_all337,8090
filemodel_class_init( FilemodelClass *class )filemodel_class_init368,8823
filemodel_init( Filemodel *filemodel )filemodel_init395,9542
filemodel_get_type( void )filemodel_get_type417,9993
filemodel_set_offset( Filemodel *filemodel, int x_off, int y_off )filemodel_set_offset442,10568
filemodel_load_all_xml( Filemodel *filemodel, filemodel_load_all_xml456,10886
filemodel_load_all_xml_file( Filemodel *filemodel, filemodel_load_all_xml_file507,12316
filemodel_load_all_xml_openfile( Filemodel *filemodel, filemodel_load_all_xml_openfile524,12694
filemodel_load_all_text( Filemodel *filemodel, filemodel_load_all_text541,13072
filemodel_load_all( Filemodel *filemodel, Model *parent, const char *filename )filemodel_load_all561,13472
filemodel_load_all_openfile( Filemodel *filemodel, Model *parent, filemodel_load_all_openfile601,14469
filemodel_inter_save_cb( iWindow *iwnd, filemodel_inter_save_cb643,15441
filemodel_inter_saveas_cb( iWindow *iwnd, void *client, filemodel_inter_saveas_cb667,15980
filemodel_inter_saveas( iWindow *parent, Filemodel *filemodel )filemodel_inter_saveas695,16917
filemodel_inter_save( iWindow *parent, Filemodel *filemodel )filemodel_inter_save702,17070
filemodel_inter_empty_cb( iWindow *iwnd, void *client, filemodel_inter_empty_cb719,17496
filemodel_inter_savenempty_ok_cb( iWindow *iwnd, void *client, filemodel_inter_savenempty_ok_cb731,17764
filemodel_inter_savenempty_cb( iWindow *iwnd, void *client, filemodel_inter_savenempty_cb741,18036
filemodel_inter_savenempty( iWindow *parent, Filemodel *filemodel )filemodel_inter_savenempty776,19065
filemodel_inter_close_cb( iWindow *iwnd, void *client, filemodel_inter_close_cb786,19294
filemodel_inter_savenclose_cb( iWindow *iwnd, void *client, filemodel_inter_savenclose_cb797,19491
filemodel_inter_savenclose( iWindow *parent, Filemodel *filemodel )filemodel_inter_savenclose807,19764
filemodel_inter_load_cb( iWindow *iwnd, filemodel_inter_load_cb817,19989
filemodel_inter_loadas_cb( iWindow *iwnd, void *client, filemodel_inter_loadas_cb841,20552
filemodel_inter_loadas( iWindow *parent, Filemodel *filemodel )filemodel_inter_loadas866,21400
filemodel_inter_replace_cb( iWindow *iwnd, void *client, filemodel_inter_replace_cb876,21608
filemodel_inter_replace( iWindow *parent, Filemodel *filemodel )filemodel_inter_replace886,21879
filemodel_inter_close_registered_cb( iWindow *iwnd, void *client, filemodel_inter_close_registered_cb896,22075
filemodel_set_auto_load( Filemodel *filemodel )filemodel_set_auto_load918,22737

numberview.c,432
static EditviewClass *parent_class = NULL;parent_class36,938
numberview_scan( View *view )numberview_scan41,1039
numberview_refresh( vObject *vobject )numberview_refresh72,1709
numberview_class_init( NumberviewClass *class )numberview_class_init92,2159
numberview_init( Numberview *numberview )numberview_init110,2511
numberview_get_type( void )numberview_get_type115,2566
numberview_new( void )numberview_new138,2998

managedgobject.c,448
static ManagedClass *parent_class = NULL;parent_class36,933
managedgobject_dispose( GObject *gobject )managedgobject_dispose39,988
managedgobject_class_init( ManagedgobjectClass *class )managedgobject_class_init54,1332
managedgobject_init( Managedgobject *managedgobject )managedgobject_init64,1564
managedgobject_get_type( void )managedgobject_get_type74,1748
managedgobject_new( Heap *heap, GObject *object )managedgobject_new99,2325

floatwindow.h,563
#define TYPE_FLOATWINDOW TYPE_FLOATWINDOW30,925
#define FLOATWINDOW(FLOATWINDOW31,975
#define FLOATWINDOW_CLASS(FLOATWINDOW_CLASS33,1062
#define IS_FLOATWINDOW(IS_FLOATWINDOW35,1170
#define IS_FLOATWINDOW_CLASS(IS_FLOATWINDOW_CLASS36,1244
typedef struct _Floatwindow {_Floatwindow39,1338
	iWindow parent_class;parent_class40,1368
	Model *model;model44,1419
} Floatwindow;Floatwindow45,1434
typedef struct _FloatwindowClass {_FloatwindowClass47,1450
	iWindowClass parent_class;parent_class48,1485
} FloatwindowClass;FloatwindowClass52,1535

workspaceview.c,4998
static ViewClass *parent_class = NULL;parent_class40,1011
static const int workspaceview_layout_snap_threshold = 20;workspaceview_layout_snap_threshold44,1095
static const int workspaceview_layout_hspacing = 10;workspaceview_layout_hspacing45,1154
static const int workspaceview_layout_vspacing = 30;workspaceview_layout_vspacing46,1207
static const int workspaceview_layout_left = WORKSPACEVIEW_MARGIN_LEFT;workspaceview_layout_left47,1260
static const int workspaceview_layout_top = WORKSPACEVIEW_MARGIN_TOP;workspaceview_layout_top48,1332
workspaceview_scroll_to( Workspaceview *wview, int x, int y )workspaceview_scroll_to51,1415
workspaceview_displace( Workspaceview *wview, int u, int v )workspaceview_displace68,1950
workspaceview_scroll( Workspaceview *wview, int x, int y, int w, int h )workspaceview_scroll78,2283
workspaceview_scroll_update( Workspaceview *wview )workspaceview_scroll_update110,3223
workspaceview_watch_changed_cb( Watchgroup *watchgroup, Watch *watch, workspaceview_watch_changed_cb140,4100
workspaceview_scroll_event_cb( GtkWidget *widget, workspaceview_scroll_event_cb166,4829
workspaceview_realize_cb( GtkWidget *wid, Workspaceview *wview )workspaceview_realize_cb204,5748
workspaceview_set_cursor( Workspaceview *wview, iWindowShape shape )workspaceview_set_cursor212,5904
typedef struct _WorkspaceviewFindColumnview {_WorkspaceviewFindColumnview222,6188
	Workspaceview *wview;wview223,6234
	int x;x224,6257
	int y;y225,6265
} WorkspaceviewFindColumnview;WorkspaceviewFindColumnview226,6273
workspaceview_find_columnview_sub( View *view, workspaceview_find_columnview_sub229,6319
workspaceview_find_columnview( Workspaceview *wview, int x, int y )workspaceview_find_columnview252,6807
workspaceview_is_background( Workspaceview *wview, workspaceview_is_background273,7211
workspaceview_fixed_event_cb( GtkWidget *widget, workspaceview_fixed_event_cb290,7691
workspaceview_scroll_adjustment_cb( GtkAdjustment *adj, Workspaceview *wview )workspaceview_scroll_adjustment_cb355,9289
workspaceview_scroll_time_cb( Workspaceview *wview )workspaceview_scroll_time_cb363,9473
workspaceview_scroll_stop( Workspaceview *wview )workspaceview_scroll_stop379,9783
workspaceview_scroll_start( Workspaceview *wview )workspaceview_scroll_start387,9939
workspaceview_scroll_background( Workspaceview *wview, int u, int v )workspaceview_scroll_background397,10211
workspaceview_destroy( GtkObject *object )workspaceview_destroy409,10436
workspaceview_realize( GtkWidget *widget )workspaceview_realize432,10946
workspaceview_drag_data_received( GtkWidget *widget, GdkDragContext *context,workspaceview_drag_data_received442,11140
workspaceview_child_size_sub( Columnview *cview, Rect *area )workspaceview_child_size_sub505,12829
workspaceview_child_size_cb( Columnview *cview, workspaceview_child_size_cb523,13110
workspaceview_child_add( View *parent, View *child )workspaceview_child_add570,14287
workspaceview_child_remove( View *parent, View *child )workspaceview_child_remove592,14937
workspaceview_child_position( View *parent, View *child )workspaceview_child_position604,15215
workspaceview_child_front( View *parent, View *child )workspaceview_child_front616,15536
workspaceview_refresh( vObject *vobject )workspaceview_refresh634,16017
typedef struct _WorkspaceLayout {_WorkspaceLayout645,16223
	Workspaceview *wview;wview648,16275
	GSList *undone_columns;undone_columns652,16349
	GSList *current_columns;current_columns656,16423
	int out_x, out_y;out_x660,16487
	int out_x, out_y;out_y660,16487
	Rect area;area664,16539
	Columnview *cview;cview668,16596
} WorkspaceLayout;WorkspaceLayout669,16616
workspaceview_layout_add( View *view, WorkspaceLayout *layout )workspaceview_layout_add672,16650
workspaceview_layout_find_leftmost( Columnview *cview, WorkspaceLayout *layout )workspaceview_layout_find_leftmost681,16829
workspaceview_layout_find_similar_x( Columnview *cview, workspaceview_layout_find_similar_x692,17095
workspaceview_layout_sort_y( Columnview *a, Columnview *b )workspaceview_layout_sort_y706,17446
workspaceview_layout_set_pos( Columnview *cview, WorkspaceLayout *layout )workspaceview_layout_set_pos712,17599
workspaceview_layout_strike( Columnview *cview, WorkspaceLayout *layout )workspaceview_layout_strike731,18142
workspaceview_layout_loop( WorkspaceLayout *layout )workspaceview_layout_loop740,18329
workspaceview_layout( View *view )workspaceview_layout785,19628
workspaceview_class_init( WorkspaceviewClass *class )workspaceview_class_init803,20041
workspaceview_filedrop( Workspaceview *wview, const char *filename )workspaceview_filedrop827,20868
workspaceview_init( Workspaceview *wview )workspaceview_init840,21129
workspaceview_get_type( void )workspaceview_get_type931,24115
workspaceview_new( void )workspaceview_new954,24561
workspaceview_pick_xy( Workspaceview *wview, int *x, int *y )workspaceview_pick_xy964,24732

trace.c,2351
TraceFlags trace_flags = (TraceFlags) 0;trace_flags38,975
static LogClass *parent_class = NULL;parent_class40,1017
static GSList *trace_all = NULL;trace_all44,1082
static VipsBuf trace_buffer_stack[SPINE_SIZE];trace_buffer_stack48,1143
static int trace_buffer_stack_p = 0;trace_buffer_stack_p49,1190
static int trace_block_count = 0;trace_block_count53,1266
typedef struct _TraceTypeMenu {_TraceTypeMenu57,1337
	const char *name;name58,1369
	TraceFlags flag;flag59,1388
} TraceTypeMenu;TraceTypeMenu60,1406
static const TraceTypeMenu trace_types[] = {trace_types64,1483
trace_get_trace_flag( GtkAction *action )trace_get_trace_flag72,1669
trace_block( void )trace_block86,1935
trace_unblock( void )trace_unblock92,1990
trace_reset( void )trace_reset100,2085
trace_check( void )trace_check111,2243
trace_push( void )trace_push117,2318
trace_pop( void )trace_pop138,2730
trace_current( void )trace_current153,2960
trace_get_mark( void )trace_get_mark161,3089
trace_pop_to( int n )trace_pop_to167,3155
trace_global_rethink_sub( Trace *trace )trace_global_rethink_sub176,3298
trace_global_rethink( void )trace_global_rethink186,3443
trace_destroy( GtkObject *object )trace_destroy194,3578
trace_view_action_cb( GtkToggleAction *action, Trace *trace )trace_view_action_cb214,3919
static GtkActionEntry trace_actions[] = {trace_actions228,4219
static GtkToggleActionEntry trace_toggle_actions[] = {trace_toggle_actions235,4378
static const char *trace_menubar_ui_description =trace_menubar_ui_description257,4977
trace_class_init( TraceClass *class )trace_class_init281,5604
trace_init( Trace *trace )trace_init300,6206
trace_get_type( void )trace_get_type306,6265
trace_link( Trace *trace )trace_link329,6667
trace_new( void )trace_new342,7039
trace_text_sub( Trace *trace, const char *buf, TraceFlags flags )trace_text_sub352,7162
trace_text( TraceFlags flags, const char *fmt, ... )trace_text361,7340
trace_pelement( PElement *pe )trace_pelement378,7673
trace_node( HeapNode *node )trace_node387,7835
trace_args( HeapNode **arg, int n )trace_args398,7983
trace_binop( Compile *compile, PElement *left, BinOp bop, PElement *right )trace_binop415,8252
trace_uop( UnOp uop, PElement *arg )trace_uop429,8611
trace_result( TraceFlags flags, PElement *out )trace_result439,8809

toolview.h,541
#define TYPE_TOOLVIEW TYPE_TOOLVIEW30,901
#define TOOLVIEW(TOOLVIEW31,945
#define TOOLVIEW_CLASS(TOOLVIEW_CLASS32,1020
#define IS_TOOLVIEW(IS_TOOLVIEW34,1119
#define IS_TOOLVIEW_CLASS(IS_TOOLVIEW_CLASS35,1187
struct _Toolview {_Toolview40,1320
	View parent_class;parent_class41,1339
	Toolkitview *kview;kview43,1360
	GtkWidget *item;	/* Menu item we made for this tool */item45,1382
typedef struct _ToolviewClass {_ToolviewClass48,1442
	ViewClass parent_class;parent_class49,1474
} ToolviewClass;ToolviewClass53,1521

pathnameview.c,738
static GraphicviewClass *parent_class = NULL;parent_class36,958
pathnameview_destroy( GtkObject *object )pathnameview_destroy39,1017
pathnameview_link( View *view, Model *model, View *parent )pathnameview_link56,1355
pathnameview_refresh( vObject *vobject )pathnameview_refresh68,1672
pathnameview_class_init( PathnameviewClass *class )pathnameview_class_init90,2269
pathnameview_edit_ok( iWindow *iwnd, pathnameview_edit_ok111,2735
pathnameview_clicked_cb( GtkWidget *widget, Pathnameview *pathnameview )pathnameview_clicked_cb132,3183
pathnameview_init( Pathnameview *pathnameview )pathnameview_init151,3914
pathnameview_get_type( void )pathnameview_get_type179,4874
pathnameview_new( void )pathnameview_new202,5373

rhs.h,944
#define TYPE_RHS TYPE_RHS31,951
#define RHS(RHS32,985
#define RHS_CLASS(RHS_CLASS34,1060
#define IS_RHS(IS_RHS36,1146
#define IS_RHS_CLASS(IS_RHS_CLASS38,1219
#define RHS_GET_CLASS(RHS_GET_CLASS40,1299
	RHS_GRAPHIC = 1,		/* Graphical display */RHS_GRAPHIC46,1439
	RHS_SCOL = 2,			/* Class browser display */RHS_SCOL47,1482
	RHS_ITEXT = 4			/* Textual display */RHS_ITEXT48,1527
} RhsFlags;RhsFlags49,1566
struct _Rhs {_Rhs51,1579
	Heapmodel parent_class;parent_class52,1593
	int vislevel;		/* Visibility level */vislevel54,1619
	RhsFlags flags;		/* Which children we want visible */flags55,1658
        Model *graphic;		/* Graphic display ... toggle/slider/etc */graphic57,1714
        Model *scol;		/* Class display */scol58,1783
        Model *itext;		/* Text display */itext59,1825
typedef struct _RhsClass {_RhsClass62,1871
	HeapmodelClass parent_class;parent_class63,1898
} RhsClass;RhsClass67,1950

iregionview.h,540
#define TYPE_IREGIONVIEW TYPE_IREGIONVIEW30,906
#define IREGIONVIEW(IREGIONVIEW31,956
#define IREGIONVIEW_CLASS(IREGIONVIEW_CLASS33,1043
#define IS_IREGIONVIEW(IS_IREGIONVIEW35,1151
#define IS_IREGIONVIEW_CLASS(IS_IREGIONVIEW_CLASS36,1225
typedef struct _iRegionview {_iRegionview39,1319
	iImageview parent_class;parent_class40,1349
} iRegionview;iRegionview42,1376
typedef struct _iRegionviewClass {_iRegionviewClass44,1392
	iImageviewClass parent_class;parent_class45,1427
} iRegionviewClass;iRegionviewClass49,1480

filemodel.h,1598
#define FILEMODEL_LOAD_STATE(FILEMODEL_LOAD_STATE30,942
#define TYPE_FILEMODEL TYPE_FILEMODEL32,1008
#define FILEMODEL(FILEMODEL33,1054
#define FILEMODEL_CLASS(FILEMODEL_CLASS35,1147
#define IS_FILEMODEL(IS_FILEMODEL37,1251
#define IS_FILEMODEL_CLASS(IS_FILEMODEL_CLASS39,1336
#define FILEMODEL_GET_CLASS(FILEMODEL_GET_CLASS41,1428
struct _Filemodel {_Filemodel44,1536
	Model model;model45,1556
        char *filename;         /* File we read this thing from */filename47,1571
	gboolean modified;	/* Set if modified (and should be saved) */modified48,1638
	gboolean registered;	/* Set if on list of things to save on quit */registered49,1702
	gboolean auto_load;	/* TRUE if loaded from path_start */auto_load50,1771
	int x_off, y_off;	/* Save offset for things below this */x_off52,1830
	int x_off, y_off;	/* Save offset for things below this */y_off52,1830
	gboolean versioned;	/* Set means from a versioned file */versioned57,1978
	int major;major58,2037
	int minor;minor59,2049
	int micro;micro60,2061
	iWindow *window_hint;	/* Our views set this as a hint */window_hint62,2074
typedef struct _FilemodelClass {_FilemodelClass65,2136
	ModelClass parent_class;parent_class66,2169
	gboolean (*top_load)( Filemodel *filemodel, top_load80,2429
	void (*set_modified)( Filemodel *filemodel, gboolean modified );set_modified82,2533
	gboolean (*save_all)( Filemodel *filemodel, const char *filename );save_all83,2599
	FileselFileType **filetype;filetype85,2669
	const char *filetype_pref;filetype_pref86,2698
} FilemodelClass;FilemodelClass87,2726

builtin.c,6638
ismatharg( Reduce *rc, PElement *base )ismatharg44,1148
iscomplexarg( Reduce *rc, PElement *base )iscomplexarg52,1339
static gboolean isany( Reduce *rc, PElement *base ) { return( TRUE ); }isany59,1462
static gboolean pe_is_image( Reduce *rc, PElement *base ) pe_is_image63,1567
static gboolean pe_is_real( Reduce *rc, PElement *base ) pe_is_real65,1660
static gboolean pe_is_complex( Reduce *rc, PElement *base ) pe_is_complex67,1751
static gboolean pe_is_bool( Reduce *rc, PElement *base ) pe_is_bool69,1848
static gboolean pe_is_char( Reduce *rc, PElement *base ) pe_is_char71,1939
static gboolean pe_is_list( Reduce *rc, PElement *base ) pe_is_list73,2030
static gboolean pe_is_flist( Reduce *rc, PElement *base ) pe_is_flist75,2121
static gboolean pe_is_class( Reduce *rc, PElement *base )pe_is_class77,2214
static gboolean pe_is_gobject( Reduce *rc, PElement *base )pe_is_gobject79,2313
static BuiltinTypeSpot vimage_spot = { "vips_image", pe_is_image };vimage_spot84,2477
static BuiltinTypeSpot real_spot = { "real", pe_is_real };real_spot85,2545
static BuiltinTypeSpot bool_spot = { "bool", pe_is_bool };bool_spot86,2604
static BuiltinTypeSpot complex_spot = { "complex|image", iscomplexarg };complex_spot87,2663
static BuiltinTypeSpot flist_spot = { "non-empty list", pe_is_flist };flist_spot88,2736
static BuiltinTypeSpot realvec_spot = { "[real]", reduce_is_realvec };realvec_spot89,2807
static BuiltinTypeSpot matrix_spot = { "[[real]]", reduce_is_matrix };matrix_spot90,2878
static BuiltinTypeSpot string_spot = { "[char]", reduce_is_finitestring };string_spot91,2949
static BuiltinTypeSpot list_spot = { "[*]", reduce_is_list };list_spot92,3024
static BuiltinTypeSpot math_spot = { "image|real|complex", ismatharg };math_spot93,3086
static BuiltinTypeSpot instance_spot = { "class instance", pe_is_class };instance_spot94,3158
static BuiltinTypeSpot any_spot = { "any", isany };any_spot95,3232
static BuiltinTypeSpot gobject_spot = { "GObject", pe_is_gobject };gobject_spot96,3284
static BuiltinTypeSpot *underscore_args[] = {underscore_args100,3374
apply_underscore_call( Reduce *rc, apply_underscore_call108,3518
static BuiltinTypeSpot *has_member_args[] = {has_member_args125,3889
apply_has_member_call( Reduce *rc, apply_has_member_call133,4042
static BuiltinTypeSpot *is_instanceof_args[] = {is_instanceof_args149,4450
apply_is_instanceof_call( Reduce *rc, apply_is_instanceof_call157,4608
static BuiltinTypeSpot *complex_args[] = {complex_args171,4987
apply_complex_call( Reduce *rc, apply_complex_call178,5114
static BuiltinTypeSpot *flist_args[] = {flist_args207,5793
apply_list_call( Reduce *rc, apply_list_call214,5913
static BuiltinTypeSpot *gammq_args[] = { gammq_args239,6369
apply_gammq_call( Reduce *rc, apply_gammq_call245,6452
static BuiltinTypeSpot *image_args[] = { image_args276,7134
apply_image_call( Reduce *rc, apply_image_call283,7231
static BuiltinTypeSpot *read_args[] = { read_args314,7862
apply_read_call( Reduce *rc, apply_read_call321,7957
static BuiltinTypeSpot *math_args[] = { math_args338,8287
	const char *name;		/* ip name */name345,8440
	double (*rfn)( double );	/* Number implementation */rfn346,8474
	const char *ifn;		/* VIPS name */ifn347,8528
} MathFn;MathFn348,8563
static double ip_sin( double a ) { return( sin( IM_RAD( a ) ) ); }ip_sin350,8574
static double ip_cos( double a ) { return( cos( IM_RAD( a ) ) ); }ip_cos351,8641
static double ip_tan( double a ) { return( tan( IM_RAD( a ) ) ); }ip_tan352,8708
static double ip_asin( double a ) { return( IM_DEG( asin( a ) ) ); }ip_asin353,8775
static double ip_acos( double a ) { return( IM_DEG( acos( a ) ) ); }ip_acos354,8844
static double ip_atan( double a ) { return( IM_DEG( atan( a ) ) ); }ip_atan355,8913
static double ip_exp10( double a ) { return( pow( 10.0, a ) ); }ip_exp10356,8982
static double ip_ceil( double a ) { return( ceil( a ) ); }ip_ceil357,9047
static double ip_floor( double a ) { return( floor( a ) ); }ip_floor358,9106
static MathFn math_fn[] = {math_fn362,9250
apply_math_call( Reduce *rc, apply_math_call380,9763
static BuiltinTypeSpot *pred_args[] = { pred_args420,10661
	const char *name;				/* ip name */name427,10789
	gboolean (*fn)( Reduce *, PElement * );	/* Implementation */fn428,10825
} PredicateFn;PredicateFn429,10887
static PredicateFn predicate_fn[] = {predicate_fn433,10968
apply_pred_call( Reduce *rc, const char *name, HeapNode **arg, PElement *out )apply_pred_call446,11279
static BuiltinTypeSpot *error_args[] = { error_args469,11767
apply_error_call( Reduce *rc, const char *name, HeapNode **arg, PElement *out )apply_error_call476,11859
static BuiltinTypeSpot *search_args[] = { search_args493,12203
apply_search_call( Reduce *rc, const char *name, HeapNode **arg, PElement *out )apply_search_call500,12297
static BuiltinTypeSpot *print_args[] = { print_args523,12756
apply_print_call( Reduce *rc, const char *name, HeapNode **arg, PElement *out )apply_print_call530,12845
static BuiltinTypeSpot *dir_args[] = { dir_args545,13192
dir_object_member( Symbol *sym, PElement *value, dir_object_member550,13262
dir_object( Reduce *rc, PElement *list, PElement *instance, PElement *out )dir_object564,13558
dir_scope( Symbol *sym, Reduce *rc, PElement *list )dir_scope580,13920
dir_gtype( GType type, void *a, void *b )dir_gtype593,14189
dir_gobject( Reduce *rc, dir_gobject608,14476
apply_dir_call( Reduce *rc, const char *name, HeapNode **arg, PElement *out )apply_dir_call631,14897
static BuiltinTypeSpot *expand_args[] = { expand_args697,16590
apply_expand_call( Reduce *rc, const char *name, HeapNode **arg, PElement *out )apply_expand_call704,16684
static BuiltinTypeSpot *name2gtype_args[] = { name2gtype_args720,17066
apply_name2gtype_call( Reduce *rc, const char *name, apply_name2gtype_call727,17168
static BuiltinTypeSpot *gtype2name_args[] = { gtype2name_args744,17536
apply_gtype2name_call( Reduce *rc, const char *name, apply_gtype2name_call751,17636
static BuiltinTypeSpot *vo_new_args[] = { vo_new_args766,17944
apply_vo_new_call( Reduce *rc, apply_vo_new_call775,18078
static BuiltinInfo builtin_table[] = {builtin_table793,18474
builtin_gsl_error( const char *reason, const char *file, builtin_gsl_error884,21632
builtin_init( void )builtin_init896,21907
builtin_usage( VipsBuf *buf, BuiltinInfo *builtin )builtin_usage931,22657
builtin_trace_args( Heap *heap, const char *name, int n, HeapNode **arg )builtin_trace_args950,23080
builtin_run( Reduce *rc, Compile *compile,builtin_run972,23565

numberview.h,520
#define TYPE_NUMBERVIEW TYPE_NUMBERVIEW30,887
#define NUMBERVIEW(NUMBERVIEW31,935
#define NUMBERVIEW_CLASS(NUMBERVIEW_CLASS32,1016
#define IS_NUMBERVIEW(IS_NUMBERVIEW34,1121
#define IS_NUMBERVIEW_CLASS(IS_NUMBERVIEW_CLASS35,1193
typedef struct _Numberview {_Numberview38,1285
	Editview parent_object;parent_object39,1314
} Numberview;Numberview41,1340
typedef struct _NumberviewClass {_NumberviewClass43,1355
	EditviewClass parent_class;parent_class44,1389
} NumberviewClass;NumberviewClass48,1440

toolkit.c,1416
static FilemodelClass *parent_class = NULL;parent_class36,948
toolkit_map( Toolkit *kit, tool_map_fn fn, void *a, void *b )toolkit_map39,1000
toolkit_dispose( GObject *gobject )toolkit_dispose46,1170
toolkit_finalize( GObject *gobject )toolkit_finalize68,1631
toolkit_changed( iObject *iobject )toolkit_changed86,1981
toolkit_info( iObject *iobject, VipsBuf *buf )toolkit_info98,2409
toolkit_view_new( Model *model, View *parent )toolkit_view_new108,2641
toolkit_save_text( Model *model, iOpenFile *of )toolkit_save_text114,2739
toolkit_load_text( Model *model, Model *parent, iOpenFile *of )toolkit_load_text126,2972
toolkit_class_init( ToolkitClass *class )toolkit_class_init151,3569
toolkit_init( Toolkit *kit )toolkit_init179,4308
toolkit_get_type( void )toolkit_get_type186,4389
toolkit_link( Toolkit *kit, Toolkitgroup *kitg, const char *name )toolkit_link211,4921
toolkit_find( Toolkitgroup *kitg, const char *name )toolkit_find225,5289
toolkit_new( Toolkitgroup *kitg, const char *name )toolkit_new232,5482
toolkit_new_filename( Toolkitgroup *kitg, const char *filename )toolkit_new_filename254,5853
toolkit_new_from_file( Toolkitgroup *kitg, const char *filename )toolkit_new_from_file269,6153
toolkit_new_from_openfile( Toolkitgroup *kitg, iOpenFile *of )toolkit_new_from_openfile290,6626
toolkit_by_name( Toolkitgroup *kitg, const char *name )toolkit_by_name312,7130

managedgobject.h,641
#define TYPE_MANAGEDGOBJECT TYPE_MANAGEDGOBJECT30,893
#define MANAGEDGOBJECT(MANAGEDGOBJECT31,949
#define MANAGEDGOBJECT_CLASS(MANAGEDGOBJECT_CLASS33,1057
#define IS_MANAGEDGOBJECT(IS_MANAGEDGOBJECT36,1180
#define IS_MANAGEDGOBJECT_CLASS(IS_MANAGEDGOBJECT_CLASS38,1275
#define MANAGEDGOBJECT_GET_CLASS(MANAGEDGOBJECT_GET_CLASS40,1377
struct _Managedgobject {_Managedgobject44,1504
	Managed parent_object;parent_object45,1529
	GObject *object;object47,1554
typedef struct _ManagedgobjectClass {_ManagedgobjectClass50,1576
	ManagedClass parent_class;parent_class51,1614
} ManagedgobjectClass;ManagedgobjectClass53,1643

gtksheet-marshal.c,4501
#define g_marshal_value_peek_boolean(g_marshal_value_peek_boolean7,80
#define g_marshal_value_peek_char(g_marshal_value_peek_char8,145
#define g_marshal_value_peek_uchar(g_marshal_value_peek_uchar9,207
#define g_marshal_value_peek_int(g_marshal_value_peek_int10,270
#define g_marshal_value_peek_uint(g_marshal_value_peek_uint11,331
#define g_marshal_value_peek_long(g_marshal_value_peek_long12,393
#define g_marshal_value_peek_ulong(g_marshal_value_peek_ulong13,455
#define g_marshal_value_peek_int64(g_marshal_value_peek_int6414,518
#define g_marshal_value_peek_uint64(g_marshal_value_peek_uint6415,581
#define g_marshal_value_peek_enum(g_marshal_value_peek_enum16,645
#define g_marshal_value_peek_flags(g_marshal_value_peek_flags17,707
#define g_marshal_value_peek_float(g_marshal_value_peek_float18,770
#define g_marshal_value_peek_double(g_marshal_value_peek_double19,833
#define g_marshal_value_peek_string(g_marshal_value_peek_string20,897
#define g_marshal_value_peek_param(g_marshal_value_peek_param21,969
#define g_marshal_value_peek_boxed(g_marshal_value_peek_boxed22,1032
#define g_marshal_value_peek_pointer(g_marshal_value_peek_pointer23,1095
#define g_marshal_value_peek_object(g_marshal_value_peek_object24,1160
#define g_marshal_value_peek_variant(g_marshal_value_peek_variant25,1224
#define g_marshal_value_peek_boolean(g_marshal_value_peek_boolean31,1508
#define g_marshal_value_peek_char(g_marshal_value_peek_char32,1568
#define g_marshal_value_peek_uchar(g_marshal_value_peek_uchar33,1628
#define g_marshal_value_peek_int(g_marshal_value_peek_int34,1689
#define g_marshal_value_peek_uint(g_marshal_value_peek_uint35,1749
#define g_marshal_value_peek_long(g_marshal_value_peek_long36,1810
#define g_marshal_value_peek_ulong(g_marshal_value_peek_ulong37,1871
#define g_marshal_value_peek_int64(g_marshal_value_peek_int6438,1933
#define g_marshal_value_peek_uint64(g_marshal_value_peek_uint6439,1995
#define g_marshal_value_peek_enum(g_marshal_value_peek_enum40,2058
#define g_marshal_value_peek_flags(g_marshal_value_peek_flags41,2119
#define g_marshal_value_peek_float(g_marshal_value_peek_float42,2181
#define g_marshal_value_peek_double(g_marshal_value_peek_double43,2243
#define g_marshal_value_peek_string(g_marshal_value_peek_string44,2306
#define g_marshal_value_peek_param(g_marshal_value_peek_param45,2370
#define g_marshal_value_peek_boxed(g_marshal_value_peek_boxed46,2434
#define g_marshal_value_peek_pointer(g_marshal_value_peek_pointer47,2498
#define g_marshal_value_peek_object(g_marshal_value_peek_object48,2562
#define g_marshal_value_peek_variant(g_marshal_value_peek_variant49,2626
gtksheet_BOOLEAN__INT_INT_POINTER_POINTER (GClosure     *closure,gtksheet_BOOLEAN__INT_INT_POINTER_POINTER55,2787
gtksheet_BOOLEAN__BOXED_POINTER (GClosure     *closure,gtksheet_BOOLEAN__BOXED_POINTER100,4830
gtksheet_BOOLEAN__BOXED_STRING (GClosure     *closure,gtksheet_BOOLEAN__BOXED_STRING141,6436
gtksheet_BOOLEAN__BOXED_BOXED (GClosure     *closure,gtksheet_BOOLEAN__BOXED_BOXED182,8028
gtksheet_BOOLEAN__BOXED_DOUBLE_DOUBLE (GClosure     *closure,gtksheet_BOOLEAN__BOXED_DOUBLE_DOUBLE223,9615
gtksheet_BOOLEAN__POINTER_POINTER (GClosure     *closure,gtksheet_BOOLEAN__POINTER_POINTER266,11451
gtksheet_BOOLEAN__POINTER_BOXED (GClosure     *closure,gtksheet_BOOLEAN__POINTER_BOXED307,13084
gtksheet_BOOLEAN__POINTER_STRING (GClosure     *closure,gtksheet_BOOLEAN__POINTER_STRING348,14692
gtksheet_BOOLEAN__POINTER (GClosure     *closure,gtksheet_BOOLEAN__POINTER389,16306
gtksheet_BOOLEAN__BOXED (GClosure     *closure,gtksheet_BOOLEAN__BOXED428,17691
gtksheet_BOOLEAN__INT_INT (GClosure     *closure,gtksheet_BOOLEAN__INT_INT467,19054
gtksheet_VOID__INT_STRING (GClosure     *closure,gtksheet_VOID__INT_STRING510,20624
gtksheet_VOID__INT_INT (GClosure     *closure,gtksheet_VOID__INT_INT555,22158
gtksheet_VOID__INT_POINTER (GClosure     *closure,gtksheet_VOID__INT_POINTER592,23477
gtksheet_VOID__POINTER_POINTER (GClosure     *closure,gtksheet_VOID__POINTER_POINTER629,24852
gtksheet_VOID__BOXED_POINTER (GClosure     *closure,gtksheet_VOID__BOXED_POINTER666,26277
gtksheet_VOID__BOXED_BOXED (GClosure     *closure,gtksheet_VOID__BOXED_BOXED703,27674
gtksheet_VOID__OBJECT_OBJECT (GClosure     *closure,gtksheet_VOID__OBJECT_OBJECT740,29047
gtksheet_VOID__DOUBLE_DOUBLE_DOUBLE_DOUBLE (GClosure     *closure,gtksheet_VOID__DOUBLE_DOUBLE_DOUBLE_DOUBLE777,30460

workspaceview.h,1402
#define TYPE_WORKSPACEVIEW TYPE_WORKSPACEVIEW30,895
#define WORKSPACEVIEW(WORKSPACEVIEW31,949
#define WORKSPACEVIEW_CLASS(WORKSPACEVIEW_CLASS33,1042
#define IS_WORKSPACEVIEW(IS_WORKSPACEVIEW36,1160
#define IS_WORKSPACEVIEW_CLASS(IS_WORKSPACEVIEW_CLASS37,1238
#define WORKSPACEVIEW_MARGIN_LEFT WORKSPACEVIEW_MARGIN_LEFT42,1359
#define WORKSPACEVIEW_MARGIN_TOP WORKSPACEVIEW_MARGIN_TOP43,1397
struct _Workspaceview {_Workspaceview45,1435
	View view;view46,1459
	Workspacegroupview *wgview;wgview48,1472
	GtkWidget *fixed;		/* GtkFixed for tally */fixed50,1502
	GtkWidget *window;		/* ScrolledWindow holding fixed */window51,1547
	guint timer;timer55,1639
	int u;				/* Set by columnview for bg scroll */u56,1653
	int v;v57,1702
	gboolean dragging;dragging61,1747
	int drag_x;drag_x62,1767
	int drag_y;drag_y63,1780
	Rect vp;			/* Viewport pos and size */vp67,1813
	int width;			/* Size of fixed area */width68,1853
	int height;height69,1892
	Rect bounding;			/* Bounding box of columnviews */bounding70,1905
	int next_x;next_x74,2000
	int next_y;next_y75,2013
	Columnview *front;		front79,2097
	iWindowCursorContext *context;context83,2168
	guint watch_changed_sid;watch_changed_sid87,2232
typedef struct _WorkspaceviewClass {_WorkspaceviewClass90,2262
	ViewClass parent_class;parent_class91,2299
} WorkspaceviewClass;WorkspaceviewClass95,2346

trace.h,723
#define TYPE_TRACE TYPE_TRACE30,911
#define TRACE(TRACE31,949
#define TRACE_CLASS(TRACE_CLASS32,1015
#define IS_TRACE(IS_TRACE34,1105
#define IS_TRACE_CLASS(IS_TRACE_CLASS35,1167
	TRACE_BUILTIN = 1,		/* Calls to built in functions */TRACE_BUILTIN41,1304
	TRACE_OPERATOR = 2,		/* +, -, etc. */TRACE_OPERATOR42,1359
	TRACE_CLASS_NEW = 4,		/* Class construction */TRACE_CLASS_NEW43,1398
	TRACE_VIPS = 8			/* VIPS operations */TRACE_VIPS44,1446
} TraceFlags;TraceFlags45,1486
struct _Trace {_Trace47,1501
	Log parent_class;parent_class48,1517
	TraceFlags flags;flags50,1537
typedef struct _TraceClass {_TraceClass53,1560
	LogClass parent_class;parent_class54,1589
} TraceClass;TraceClass58,1635

imageview.c,3773
static FloatwindowClass *parent_class = NULL;parent_class40,1031
typedef struct _ImageviewMagmenu {_ImageviewMagmenu44,1122
	const char *name;name45,1157
	int mag;mag46,1176
} ImageviewMagmenu;ImageviewMagmenu47,1186
static const ImageviewMagmenu imageview_mags[] = {imageview_mags49,1207
imageview_destroy( GtkObject *object )imageview_destroy62,1482
imageview_class_init( ImageviewClass *class )imageview_class_init83,1848
imageview_init( Imageview *iv )imageview_init99,2116
imageview_get_type( void )imageview_get_type105,2185
imageview_refresh_title( Imageview *iv )imageview_refresh_title128,2619
imageview_imagemodel_changed_cb( Imagemodel *imagemodel, Imageview *iv )imageview_imagemodel_changed_cb159,3401
static const char *imageview_region_name[] = {imageview_region_name203,4607
imageview_get_region_type( GtkAction *action )imageview_get_region_type215,4811
imageview_new_arrow2_action_cb( GtkAction *action, Imageview *iv )imageview_new_arrow2_action_cb239,5243
imageview_new_arrow4_action_cb( GtkAction *action, Imageview *iv )imageview_new_arrow4_action_cb285,6415
imageview_replace_action_cb( GtkAction *action, Imageview *iv )imageview_replace_action_cb321,7555
imageview_save_action_cb( GtkAction *action, Imageview *iv )imageview_save_action_cb330,7788
imageview_recalc_action_cb( GtkAction *action, Imageview *iv )imageview_recalc_action_cb339,8015
imageview_header_action_cb( GtkAction *action, Imageview *iv )imageview_header_action_cb353,8435
imageview_zoom_in_action_cb( GtkAction *action, Imageview *iv )imageview_zoom_in_action_cb368,8874
imageview_zoom_out_action_cb( GtkAction *action, Imageview *iv )imageview_zoom_out_action_cb377,9098
imageview_zoom_100_action_cb( GtkAction *action, Imageview *iv )imageview_zoom_100_action_cb386,9322
imageview_zoom_fit_action_cb( GtkAction *action, Imageview *iv )imageview_zoom_fit_action_cb393,9455
imageview_show_status_action_cb( GtkToggleAction *action, Imageview *iv )imageview_show_status_action_cb399,9573
imageview_show_convert_action_cb( GtkToggleAction *action, Imageview *iv )imageview_show_convert_action_cb406,9749
imageview_show_paintbox_action_cb( GtkToggleAction *action, Imageview *iv )imageview_show_paintbox_action_cb413,9927
imageview_show_rulers_action_cb( GtkToggleAction *action, Imageview *iv )imageview_show_rulers_action_cb420,10107
imageview_mode_action_cb( GtkRadioAction *action, GtkRadioAction *current,imageview_mode_action_cb427,10283
imageview_mag_action_cb( GtkRadioAction *action, GtkRadioAction *current, imageview_mag_action_cb437,10551
static GtkActionEntry imageview_actions[] = {imageview_actions447,10767
static GtkToggleActionEntry imageview_toggle_actions[] = {imageview_toggle_actions522,12858
static GtkRadioActionEntry imageview_mode_radio_actions[] = {imageview_mode_radio_actions544,13452
static GtkRadioActionEntry imageview_zoom_radio_actions[] = {imageview_zoom_radio_actions566,13914
static const char *imageview_menubar_ui_description =imageview_menubar_ui_description587,14630
imageview_event( GtkWidget *widget, GdkEvent *event, Imageview *iv )imageview_event650,16648
imageview_filedrop( Imageview *iv, const char *file )imageview_filedrop672,17141
imageview_build( Imageview *iv, GtkWidget *vbox, iImage *iimage )imageview_build683,17344
imageview_add_region( Classmodel *classmodel, Imageview *iv )imageview_add_region834,22065
imageview_popdown( iWindow *iwnd, void *client,imageview_popdown853,22547
imageview_link( Imageview *iv, iImage *iimage, GtkWidget *parent )imageview_link897,23976
imageview_new( iImage *iimage, GtkWidget *parent )imageview_new914,24544
imageview_new_area( iImage *iimage, Rect *area, GtkWidget *parent )imageview_new_area938,25183

iarrow.c,702
static ClassmodelClass *parent_class = NULL;parent_class36,953
iarrow_finalize( GObject *gobject )iarrow_finalize39,1011
iarrow_generate_caption_sub( iImage *iimage, iArrow *iarrow, gboolean *first )iarrow_generate_caption_sub61,1445
iarrow_generate_caption( iObject *iobject )iarrow_generate_caption84,2020
iarrow_view_new( Model *model, View *parent )iarrow_view_new184,4138
iarrow_update_model( Heapmodel *heapmodel )iarrow_update_model190,4231
iarrow_get_instance( Classmodel *classmodel )iarrow_get_instance214,4766
iarrow_class_init( iArrowClass *class )iarrow_class_init222,4900
iarrow_init( iArrow *iarrow )iarrow_init267,6220
iarrow_get_type( void )iarrow_get_type276,6450

pathnameview.h,630
#define TYPE_PATHNAMEVIEW TYPE_PATHNAMEVIEW30,905
#define PATHNAMEVIEW(PATHNAMEVIEW31,957
#define PATHNAMEVIEW_CLASS(PATHNAMEVIEW_CLASS33,1047
#define IS_PATHNAMEVIEW(IS_PATHNAMEVIEW35,1158
#define IS_PATHNAMEVIEW_CLASS(IS_PATHNAMEVIEW_CLASS36,1234
typedef struct _Pathnameview {_Pathnameview39,1330
	Graphicview parent_object;parent_object40,1361
	GtkWidget *label;label42,1390
	GtkWidget *button;button43,1409
} Pathnameview;Pathnameview44,1429
typedef struct _PathnameviewClass {_PathnameviewClass46,1446
	GraphicviewClass parent_class;parent_class47,1482
} PathnameviewClass;PathnameviewClass51,1536

slider.c,368
static ClassmodelClass *parent_class = NULL;parent_class36,949
slider_view_new( Model *model, View *parent )slider_view_new39,1009
static ClassmodelMember slider_members[] = {slider_members46,1127
slider_class_init( SliderClass *class )slider_class_init62,1644
slider_init( Slider *slider )slider_init85,2137
slider_get_type( void )slider_get_type100,2434

helpindex.h,0

builtin.h,432
	const char *name;name33,1000
	gboolean (*pred)( Reduce *, PElement * );pred34,1019
} BuiltinTypeSpot;BuiltinTypeSpot35,1062
typedef void (*builtin_fn)( Reduce *, const char *, HeapNode **, PElement * );builtin_fn39,1109
struct _BuiltinInfo {_BuiltinInfo43,1249
	const char *name;name44,1271
	gboolean override;override45,1290
	int nargs;nargs46,1310
	BuiltinTypeSpot **args;args47,1322
	builtin_fn fn;fn48,1347

fontname.c,457
static ClassmodelClass *parent_class = NULL;parent_class36,951
fontname_finalize( GObject *gobject )fontname_finalize39,1009
fontname_view_new( Model *model, View *parent )fontname_view_new49,1194
static ClassmodelMember fontname_members[] = {fontname_members56,1318
fontname_class_init( FontnameClass *class )fontname_class_init66,1623
fontname_init( Fontname *fontname )fontname_init87,2179
fontname_get_type( void )fontname_get_type98,2402

toolkit.h,551
#define TYPE_TOOLKIT TYPE_TOOLKIT30,891
#define TOOLKIT(TOOLKIT31,933
#define TOOLKIT_CLASS(TOOLKIT_CLASS33,1020
#define IS_TOOLKIT(IS_TOOLKIT35,1118
#define IS_TOOLKIT_CLASS(IS_TOOLKIT_CLASS37,1199
#define TOOLKIT_GET_CLASS(TOOLKIT_GET_CLASS39,1287
struct _Toolkit {_Toolkit45,1484
	Filemodel parent_class;parent_class46,1502
	Toolkitgroup *kitg;kitg48,1528
	gboolean pseudo;pseudo53,1677
typedef struct _ToolkitClass {_ToolkitClass56,1699
	FilemodelClass parent_class;parent_class57,1730
} ToolkitClass;ToolkitClass61,1782

gtksheet-marshal.h,1236
#define __gtksheet_MARSHAL_H____gtksheet_MARSHAL_H__3,32
#define gtksheet_BOOL__INT_INT_POINTER_POINTER	gtksheet_BOOL__INT_INT_POINTER_POINTER16,665
#define gtksheet_BOOL__BOXED_POINTER	gtksheet_BOOL__BOXED_POINTER25,1245
#define gtksheet_BOOL__BOXED_STRING	gtksheet_BOOL__BOXED_STRING34,1798
#define gtksheet_BOOL__BOXED_BOXED	gtksheet_BOOL__BOXED_BOXED43,2342
#define gtksheet_BOOL__BOXED_DOUBLE_DOUBLE	gtksheet_BOOL__BOXED_DOUBLE_DOUBLE52,2940
#define gtksheet_BOOL__POINTER_POINTER	gtksheet_BOOL__POINTER_POINTER61,3526
#define gtksheet_BOOL__POINTER_BOXED	gtksheet_BOOL__POINTER_BOXED70,4090
#define gtksheet_BOOL__POINTER_STRING	gtksheet_BOOL__POINTER_STRING79,4657
#define gtksheet_BOOL__POINTER	gtksheet_BOOL__POINTER88,5177
#define gtksheet_BOOL__BOXED	gtksheet_BOOL__BOXED97,5670
#define gtksheet_BOOL__INT_INT	gtksheet_BOOL__INT_INT106,6173
#define gtksheet_VOID__INT	gtksheet_VOID__INT109,6273
#define gtksheet_VOID__BOXED	gtksheet_VOID__BOXED120,6827
#define gtksheet_VOID__VOID	gtksheet_VOID__VOID123,6931
#define gtksheet_VOID__BOOLEAN	gtksheet_VOID__BOOLEAN126,7033
#define gtksheet_VOID__BOOL	gtksheet_VOID__BOOL127,7097
#define gtksheet_VOID__POINTER	gtksheet_VOID__POINTER130,7195

imageview.h,734
#define TYPE_IMAGEVIEW TYPE_IMAGEVIEW30,929
#define IMAGEVIEW(IMAGEVIEW31,975
#define IMAGEVIEW_CLASS(IMAGEVIEW_CLASS32,1053
#define IS_IMAGEVIEW(IS_IMAGEVIEW34,1155
#define IS_IMAGEVIEW_CLASS(IS_IMAGEVIEW_CLASS35,1225
typedef struct _Imageview {_Imageview38,1315
	Floatwindow parent_class;parent_class39,1343
	Imagemodel *imagemodel;imagemodel43,1398
	guint imagemodel_changed_sid;imagemodel_changed_sid44,1423
	Imagepresent *ip;ip46,1455
	Conversionview *cv;cv47,1474
	Statusview *sv;sv48,1495
	Paintboxview *pbv;pbv49,1512
} Imageview;Imageview50,1532
typedef struct _ImageviewClass {_ImageviewClass52,1546
	FloatwindowClass parent_class;parent_class53,1579
} ImageviewClass;ImageviewClass57,1633

iarrow.h,560
#define TYPE_IARROW TYPE_IARROW30,907
#define IARROW(IARROW31,947
#define IARROW_CLASS(IARROW_CLASS33,1031
#define IS_IARROW(IS_IARROW35,1126
#define IS_IARROW_CLASS(IS_IARROW_CLASS37,1205
#define IARROW_GET_CLASS(IARROW_GET_CLASS39,1291
struct _iArrow {_iArrow42,1390
	Classmodel parent_class;parent_class43,1407
	iRegionInstance instance;instance47,1457
	VipsBuf caption_buffer;caption_buffer51,1534
typedef struct _iArrowClass {_iArrowClass54,1563
	ClassmodelClass parent_class;parent_class55,1593
} iArrowClass;iArrowClass59,1646

boxes.c,6623
#define MAX_DIALOG_TEXT MAX_DIALOG_TEXT38,1034
box_pick_parent( GtkWidget *par )box_pick_parent43,1131
box_build( iDialog *idlg, box_build60,1407
box_error( GtkWidget *par, const char *fmt, ... )box_error90,2325
box_vmarkup( char *out, const char *top, const char *sub, va_list ap )box_vmarkup114,3009
box_markup( char *out, const char *top, const char *sub, ... )box_markup135,3555
box_alert( GtkWidget *par )box_alert147,3780
box_vinfo( GtkWidget *par, const char *top, const char *sub, va_list ap )box_vinfo166,4133
box_info( GtkWidget *par, const char *top, const char *sub, ... )box_info188,4740
box_yesno( GtkWidget *par, box_yesno200,4961
box_savenosave( GtkWidget *par, box_savenosave232,5861
#define ABOUT(ABOUT260,6737
about_build( iDialog *idlg, GtkWidget *work )about_build265,6824
box_about( GtkWidget *par )box_about356,10138
static const char *box_helpindex[][2] = {box_helpindex373,10621
box_help( GtkWidget *par, const char *name )box_help380,10734
static iDialogClass *stringset_parent_class = NULL;stringset_parent_class402,11258
stringset_child_destroy( StringsetChild *ssc )stringset_child_destroy405,11318
stringset_child_new( Stringset *ss,stringset_child_new418,11559
stringset_destroy( GtkObject *object )stringset_destroy434,11934
stringset_build_set_default( StringsetChild *ssc, iDialog *idlg )stringset_build_set_default452,12340
stringset_build( GtkWidget *widget )stringset_build460,12502
stringset_class_init( StringsetClass *class )stringset_class_init497,13453
stringset_init( Stringset *ss )stringset_init512,13809
stringset_get_type( void )stringset_get_type522,13964
stringset_new( void )stringset_new545,14434
stringset_child_get( Stringset *ss, const char *label )stringset_child_get553,14557
static iDialogClass *find_parent_class = NULL;find_parent_class570,14828
find_destroy( GtkObject *object )find_destroy573,14888
find_build( GtkWidget *widget )find_build590,15210
find_class_init( FindClass *class )find_class_init615,15988
find_init( Find *find )find_init630,16319
find_get_type( void )find_get_type640,16486
find_new( void )find_new663,16906
static iDialogClass *imageheader_parent_class = NULL;imageheader_parent_class673,17029
imageheader_destroy( GtkObject *object )imageheader_destroy676,17096
imageheader_row_new( GtkSizeGroup *group, const char *field, GValue *value )imageheader_row_new696,17579
imageheader_row_map_fn( IMAGE *im, imageheader_row_map_fn739,18812
imageheader_refresh( Imageheader *imageheader )imageheader_refresh752,19110
imageheader_build( GtkWidget *widget )imageheader_build782,19934
imageheader_class_init( ImageheaderClass *class )imageheader_class_init850,22297
imageheader_init( Imageheader *imageheader )imageheader_init865,22663
imageheader_get_type( void )imageheader_get_type875,22847
imageheader_conv_changed( Model *model, Imageheader *imageheader )imageheader_conv_changed900,23375
imageheader_link( Imageheader *imageheader, Conversion *conv )imageheader_link909,23573
imageheader_new( Conversion *conv )imageheader_new920,23876
box_url( GtkWidget *par, const char *url )box_url932,24097
static GtkWindowClass *splash_parent_class = NULL;splash_parent_class1003,25979
splash_destroy( GtkObject *object )splash_destroy1006,26043
splash_class_init( SplashClass *class )splash_class_init1027,26431
splash_progress_update( Progress *progress, gboolean *cancel, Splash *splash )splash_progress_update1037,26647
splash_toggle_change_cb( GtkWidget *widget )splash_toggle_change_cb1046,26984
splash_init( Splash *splash )splash_init1057,27240
splash_get_type( void )splash_get_type1119,29433
splash_new( void )splash_new1142,29873
static iDialogClass *fontchooser_parent_class = NULL;fontchooser_parent_class1152,29992
fontchooser_build( GtkWidget *widget )fontchooser_build1155,30059
fontchooser_class_init( FontchooserClass *class )fontchooser_class_init1179,30715
fontchooser_init( Fontchooser *fontchooser )fontchooser_init1191,30962
fontchooser_get_type( void )fontchooser_get_type1196,31020
fontchooser_new( void )fontchooser_new1219,31512
fontchooser_set_font_name( Fontchooser *fontchooser, const char *font_name )fontchooser_set_font_name1227,31638
fontchooser_get_font_name( Fontchooser *fontchooser )fontchooser_get_font_name1241,31983
	SIG_CHANGED,	/* New font selected */SIG_CHANGED1253,32188
	SIG_LASTSIG_LAST1254,32226
static GtkButtonClass *fontbutton_parent_class = NULL;fontbutton_parent_class1257,32240
static guint fontbutton_signals[SIG_LAST] = { 0 };fontbutton_signals1259,32296
fontbutton_finalize( GObject *gobject )fontbutton_finalize1262,32360
fontbutton_ok_cb( iWindow *iwnd, void *client, fontbutton_ok_cb1277,32668
fontbutton_popdown_cb( iWindow *iwnd, void *client, fontbutton_popdown_cb1292,33041
fontbutton_clicked( GtkButton *button )fontbutton_clicked1303,33255
fontbutton_real_changed( Fontbutton *fontbutton )fontbutton_real_changed1330,34171
fontbutton_class_init( FontbuttonClass *class )fontbutton_class_init1335,34238
fontbutton_init( Fontbutton *fontbutton )fontbutton_init1358,34857
fontbutton_get_type( void )fontbutton_get_type1367,35048
fontbutton_new( void )fontbutton_new1390,35532
fontbutton_set_font_name( Fontbutton *fontbutton, const char *font_name )fontbutton_set_font_name1399,35677
fontbutton_get_font_name( Fontbutton *fontbutton )fontbutton_get_font_name1429,36483
static GtkInfoBarClass *infobar_parent_class = NULL;infobar_parent_class1438,36650
infobar_destroy( GtkObject *object )infobar_destroy1441,36716
infobar_class_init( InfobarClass *class )infobar_class_init1457,37083
infobar_init( Infobar *infobar )infobar_init1467,37303
infobar_get_type( void )infobar_get_type1477,37481
infobar_cancel_close( Infobar *infobar )infobar_cancel_close1502,38016
infobar_hide( Infobar *infobar )infobar_hide1510,38255
infobar_close_animation_timeout( Infobar *infobar )infobar_close_animation_timeout1519,38498
infobar_start_close( Infobar *infobar )infobar_start_close1533,38767
infobar_close_timeout( Infobar *infobar )infobar_close_timeout1543,39040
infobar_show( Infobar *infobar )infobar_show1551,39151
infobar_info_cb( GtkWidget *button, Infobar *infobar )infobar_info_cb1562,39394
infobar_close_cb( GtkWidget *button, Infobar *infobar )infobar_close_cb1570,39629
infobar_new( void )infobar_new1576,39733
infobar_new( void )infobar_new1632,41603
infobar_vset( Infobar *infobar, GtkMessageType type, infobar_vset1642,41733
infobar_set( Infobar *infobar, GtkMessageType type, infobar_set1673,42584

slider.h,616
#define TYPE_SLIDER TYPE_SLIDER30,898
#define SLIDER(SLIDER31,938
#define SLIDER_CLASS(SLIDER_CLASS33,1022
#define IS_SLIDER(IS_SLIDER35,1117
#define IS_SLIDER_CLASS(IS_SLIDER_CLASS37,1196
#define SLIDER_GET_CLASS(SLIDER_GET_CLASS39,1282
typedef struct _Slider {_Slider42,1381
	Classmodel parent_object;parent_object43,1406
	double from, to, value;from45,1434
	double from, to, value;to45,1434
	double from, to, value;value45,1434
} Slider;Slider46,1459
typedef struct _SliderClass {_SliderClass48,1470
	ClassmodelClass parent_class;parent_class49,1500
} SliderClass;SliderClass53,1553

regionview.c,6391
typedef void *(*regionview_rect_fn)( Regionview *, Rect *, void * );regionview_rect_fn56,1267
typedef void (*regionview_paint_fn)( Regionview * );regionview_paint_fn57,1336
iWindowShape regionview_cursors[REGIONVIEW_RESIZE_LAST] = {regionview_cursors61,1432
static const int regionview_border_width = 2;regionview_border_width77,2144
static const int regionview_label_border = 5;regionview_label_border81,2226
static const int regionview_crosshair_length = 5;regionview_crosshair_length85,2306
static const int regionview_crosshair_centre = 8;regionview_crosshair_centre89,2422
static const int regionview_morph_threshold = 20;regionview_morph_threshold93,2526
static ViewClass *parent_class = NULL;parent_class95,2577
static GtkWidget *regionview_popup_menu = NULL;regionview_popup_menu99,2656
regionview_paint_rect( GdkDrawable *draw, GdkGC *gc, Rect *r )regionview_paint_rect104,2737
regionview_paint_rect_thick( GdkDrawable *draw, GdkGC *gc, Rect *r, int n )regionview_paint_rect_thick114,2962
regionview_paint_rect_3d( GdkDrawable *draw, GdkGC *tl, GdkGC *br, Rect *r )regionview_paint_rect_3d130,3302
regionview_paint_vtick( GdkDrawable *draw, GdkGC *tl, GdkGC *br, regionview_paint_vtick152,3917
regionview_paint_htick( GdkDrawable *draw, GdkGC *tl, GdkGC *br, regionview_paint_htick160,4127
regionview_paint_border( GdkDrawable *draw, GdkGC *tl, GdkGC *bg, GdkGC *br,regionview_paint_border170,4394
regionview_paint_area( GdkDrawable *draw, regionview_paint_area224,5884
regionview_paint_label( Regionview *regionview, GdkDrawable *draw, regionview_paint_label236,6143
regionview_paint_crosshair( GdkDrawable *draw,regionview_paint_crosshair268,7035
regionview_paint_arrow( GdkDrawable *draw, GdkGC *fg, int off, Rect *r )regionview_paint_arrow299,7762
regionview_paint_box( GdkDrawable *draw, GdkGC *fg, int off, Rect *r )regionview_paint_box315,8297
regionview_crosshair_foreach( Regionview *regionview, regionview_crosshair_foreach341,9108
regionview_border_foreach( Regionview *regionview, regionview_border_foreach378,9922
regionview_queue_draw_area( Regionview *regionview, Rect *area )regionview_queue_draw_area414,10723
regionview_queue_draw( Regionview *regionview )regionview_queue_draw429,11101
regionview_paint( Regionview *regionview )regionview_paint498,13110
regionview_detach( Regionview *regionview )regionview_detach566,14734
regionview_destroy( GtkObject *object )regionview_destroy585,15172
regionview_label_geo( Regionview *regionview )regionview_label_geo639,16596
regionview_refresh_label( Regionview *regionview )regionview_refresh_label657,17076
regionview_position_label( Regionview *regionview )regionview_position_label673,17487
regionview_get_model( Regionview *regionview )regionview_get_model771,19762
regionview_get_compatibility( Regionview *regionview )regionview_get_compatibility792,20333
regionview_update_from_model( Regionview *regionview )regionview_update_from_model807,20729
regionview_model_update( Regionview *regionview )regionview_model_update837,21582
regionview_refresh( vObject *vobject )regionview_refresh881,22756
regionview_edit_cb( GtkWidget *menu, Regionview *regionview, Imagepresent *ip )regionview_edit_cb923,23854
regionview_clone_cb( GtkWidget *menu, Regionview *regionview, Imagepresent *ip )regionview_clone_cb929,24017
regionview_clear_edited_cb( GtkWidget *menu, regionview_clear_edited_cb952,24678
regionview_remove_yes( iWindow *iwnd, void *client, regionview_remove_yes961,24935
regionview_remove_cb( GtkWidget *menu, regionview_remove_cb973,25192
regionview_class_init( RegionviewClass *class )regionview_class_init995,25816
regionview_init( Regionview *regionview )regionview_init1028,26650
regionview_get_type( void )regionview_get_type1073,27811
regionview_rect_touching( Regionview *regionview, Rect *a, Rect *b )regionview_rect_touching1098,28350
regionview_rect_touches_mark( Regionview *regionview, regionview_rect_touches_mark1114,28713
regionview_rect_touches_region( Regionview *regionview, Rect *expose )regionview_rect_touches_region1143,29416
regionview_expose( Regionview *regionview, Rect *expose )regionview_expose1222,31324
regionview_model_changed_cb( Classmodel *classmodel, Regionview *regionview )regionview_model_changed_cb1245,31877
regionview_expose_cb( Imagedisplay *id, GdkEventExpose *event,regionview_expose_cb1251,32025
regionview_point_in_region( Regionview *regionview, int x, int y )regionview_point_in_region1269,32415
regionview_find_resize( Regionview *regionview, int x, int y )regionview_find_resize1283,32702
regionview_right_press( Regionview *regionview, GdkEvent *ev, int x, int y )regionview_right_press1391,35442
regionview_attach( Regionview *regionview, int x, int y )regionview_attach1405,35734
regionview_left_press( Regionview *regionview, GdkEvent *ev, int x, int y )regionview_left_press1451,36797
regionview_left_release( Regionview *regionview, GdkEvent *ev )regionview_left_release1483,37394
regionview_resize_area( Regionview *regionview, int ix, int iy )regionview_resize_area1503,37712
regionview_set_paint_state( Regionview *regionview, GtkStateType paint_state )regionview_set_paint_state1699,43041
regionview_motion_grab( Regionview *regionview, int x, int y )regionview_motion_grab1710,43322
resize_to_str( RegionviewResize resize )resize_to_str1825,45877
regionview_motion( Regionview *regionview, GdkEvent *ev, int x, int y )regionview_motion1862,46907
regionview_event_cb( GtkWidget *widget, GdkEvent *ev, Regionview *regionview )regionview_event_cb1911,48016
regionview_changed_cb( Model *model, Regionview *regionview )regionview_changed_cb2002,50005
regionview_conv_destroy_cb( Model *model, Regionview *regionview )regionview_conv_destroy_cb2015,50313
regionview_dash_crawl_cb( Regionview *regionview )regionview_dash_crawl_cb2022,50466
regionview_setup( Regionview *regionview, regionview_setup2042,50957
regionview_new( Classmodel *classmodel, Rect *model_area, Imagepresent *ip )regionview_new2091,52637
	const char *name;name2109,53118
	RegionviewType type;type2110,53137
} RegionviewDisplay;RegionviewDisplay2111,53159
static RegionviewDisplay regionview_display_table[] = {regionview_display_table2113,53181
regionview_set_type( Regionview *regionview, PElement *root )regionview_set_type2125,53527

matrixview.c,3167
#define ROUND_DOWN(ROUND_DOWN45,1165
#define ROUND_UP(ROUND_UP49,1241
static const int matrixview_max_width = 7;matrixview_max_width54,1426
static const int matrixview_max_height = 10;matrixview_max_height55,1469
static const int matrixview_column_width = 70;matrixview_column_width59,1562
static const int matrixview_max_cells = 100;matrixview_max_cells63,1680
static const gboolean use_gtksheet = use_gtksheet67,1775
static GraphicviewClass *parent_class = NULL;parent_class74,1897
matrixview_destroy( GtkObject *object )matrixview_destroy77,1956
matrixview_scan_string( char *txt, double *out, gboolean *changed )matrixview_scan_string100,2458
matrixview_scan_text( Matrixview *matrixview, GtkWidget *txt, matrixview_scan_text120,2869
matrixview_scan( View *view )matrixview_scan140,3310
matrixview_toggle_change_cb( GtkWidget *widget, Matrixview *matrixview )matrixview_toggle_change_cb240,5981
matrixview_toggle_build( Matrixview *matrixview )matrixview_toggle_build275,6788
matrixview_slider_change_cb( Tslider *tslider, Matrixview *matrixview )matrixview_slider_change_cb327,8250
matrixview_slider_build( Matrixview *matrixview )matrixview_slider_build350,8872
matrixview_text_focus_in( GtkWidget *entry )matrixview_text_focus_in393,10202
matrixview_text_focus_out( GtkWidget *entry )matrixview_text_focus_out399,10329
matrixview_text_connect( Matrixview *matrixview, GtkWidget *txt )matrixview_text_connect405,10456
matrixview_text_build_scale_offset( Matrixview *matrixview )matrixview_text_build_scale_offset423,11129
matrixview_liststore_new( MatrixValue *matrixvalue )matrixview_liststore_new450,11970
matrixview_text_build( Matrixview *matrixview )matrixview_text_build481,12597
matrixview_text_traverse( GtkSheet *sheet,matrixview_text_traverse608,16448
matrixview_text_changed( GtkSheet *sheet,matrixview_text_changed639,17412
matrixview_select_range( GtkSheet *sheet, matrixview_select_range663,18065
matrixview_unselect_range( GtkSheet *sheet, matrixview_unselect_range675,18365
matrixview_text_event( GtkWidget *widget, matrixview_text_event684,18572
matrixview_text_sheet_build( Matrixview *matrixview )matrixview_text_sheet_build696,18845
matrixview_text_build( Matrixview *matrixview )matrixview_text_build840,23598
matrixview_toggle_set_label( GtkWidget *button, double v )matrixview_toggle_set_label855,24048
matrixview_toggle_refresh( Matrixview *matrixview )matrixview_toggle_refresh879,24487
matrixview_slider_refresh( Matrixview *matrixview )matrixview_slider_refresh899,25009
matrixview_text_set( Matrixview *matrixview, GtkWidget *txt, double val )matrixview_text_set919,25539
matrixview_text_refresh( Matrixview *matrixview )matrixview_text_refresh934,25901
matrixview_text_refresh( Matrixview *matrixview )matrixview_text_refresh945,26228
matrixview_refresh( vObject *vobject )matrixview_refresh1010,28342
matrixview_class_init( MatrixviewClass *class )matrixview_class_init1182,32472
matrixview_init( Matrixview *matrixview )matrixview_init1203,32968
matrixview_get_type( void )matrixview_get_type1231,33693
matrixview_new( void )matrixview_new1254,34232

fontname.h,500
#define TYPE_FONTNAME TYPE_FONTNAME30,900
#define FONTNAME(FONTNAME31,944
#define FONTNAME_CLASS(FONTNAME_CLASS32,1019
#define IS_FONTNAME(IS_FONTNAME34,1118
#define IS_FONTNAME_CLASS(IS_FONTNAME_CLASS35,1186
typedef struct _Fontname {_Fontname38,1274
	Classmodel model;model39,1301
	char *value;value41,1321
} Fontname;Fontname42,1335
typedef struct _FontnameClass {_FontnameClass44,1348
	ClassmodelClass parent_class;parent_class45,1380
} FontnameClass;FontnameClass49,1433

toolkitbrowser.c,1963
static ViewClass *parent_class = NULL;parent_class36,937
	TOOLTIP_COLUMN,		/* Visible columns */TOOLTIP_COLUMN41,1004
	MENU_COLUMN, 		MENU_COLUMN42,1044
	NPARAM_COLUMN,NPARAM_COLUMN43,1061
	TOOLITEM_COLUMN,	/* Secret column */TOOLITEM_COLUMN44,1077
	N_COLUMNSN_COLUMNS45,1115
toolkitbrowser_destroy( GtkObject *object )toolkitbrowser_destroy49,1142
toolkitbrowser_rebuild_item_sub( Symbol *param, VipsBuf *buf )toolkitbrowser_rebuild_item_sub59,1354
toolkitbrowser_rebuild_item3( Toolitem *toolitem,toolkitbrowser_rebuild_item368,1535
toolkitbrowser_rebuild_item2( Tool *tool, Toolkitbrowser *toolkitbrowser )toolkitbrowser_rebuild_item2101,2417
toolkitbrowser_rebuild_item( Toolkit *kit, Toolkitbrowser *toolkitbrowser )toolkitbrowser_rebuild_item110,2617
toolkitbrowser_refresh( vObject *vobject )toolkitbrowser_refresh120,2820
toolkitbrowser_class_init( ToolkitbrowserClass *class )toolkitbrowser_class_init137,3241
toolkitbrowser_entry_changed_cb( GtkEditable *editable, toolkitbrowser_entry_changed_cb150,3580
toolkitbrowser_rebuild_test( Toolitem *toolitem, const char *text )toolkitbrowser_rebuild_test158,3779
toolkitbrowser_visible_func( GtkTreeModel *model, GtkTreeIter *iter, toolkitbrowser_visible_func168,4002
toolkitbrowser_get_selected( Toolkitbrowser *toolkitbrowser )toolkitbrowser_get_selected184,4436
toolkitbrowser_activate_selected( Toolkitbrowser *toolkitbrowser )toolkitbrowser_activate_selected203,4888
toolkitbrowser_row_activated_cb( GtkTreeView *treeview,toolkitbrowser_row_activated_cb218,5262
toolkitbrowser_init( Toolkitbrowser *toolkitbrowser )toolkitbrowser_init228,5546
toolkitbrowser_get_type( void )toolkitbrowser_get_type304,8407
toolkitbrowser_set_mainw( Toolkitbrowser *toolkitbrowser, Mainw *mainw )toolkitbrowser_set_mainw327,8860
toolkitbrowser_new( void )toolkitbrowser_new339,9098
toolkitbrowser_get_width( Toolkitbrowser *toolkitbrowser )toolkitbrowser_get_width349,9282

plotview.c,849
static GraphicviewClass *parent_class = NULL;parent_class39,1002
plotview_destroy( GtkObject *object )plotview_destroy42,1061
plotview_refresh( vObject *vobject )plotview_refresh61,1427
plotview_link( View *view, Model *model, View *parent )plotview_link114,2709
plotview_class_init( PlotviewClass *class )plotview_class_init125,2987
plotview_tooltip_generate( GtkWidget *widget, VipsBuf *buf, Plotview *plotview )plotview_tooltip_generate141,3404
plotview_doubleclick_one_cb( GtkWidget *widget, Plotview *plotview, int state )plotview_doubleclick_one_cb159,3874
plotview_doubleclick_two_cb( GtkWidget *widget, Plotview *plotview, int state )plotview_doubleclick_two_cb168,4104
plotview_init( Plotview *plotview )plotview_init176,4292
plotview_get_type( void )plotview_get_type218,5706
plotview_new( void )plotview_new241,6189

valueview.c,529
static GraphicviewClass *parent_class = NULL;parent_class36,972
valueview_refresh( vObject *vobject )valueview_refresh39,1032
valueview_link( View *view, Model *model, View *parent )valueview_link56,1430
valueview_class_init( ValueviewClass *class )valueview_class_init67,1705
valueview_event_cb( GtkWidget *widget, GdkEvent *ev, valueview_event_cb85,2057
valueview_init( Valueview *valueview )valueview_init117,2632
valueview_get_type( void )valueview_get_type138,3390
valueview_new( void )valueview_new161,3859

colourview.c,805
static GraphicviewClass *parent_class = NULL;parent_class36,958
colourview_destroy( GtkObject *object )colourview_destroy39,1017
colourview_link( View *view, Model *model, View *parent )colourview_link52,1275
colourview_refresh( vObject *vobject )colourview_refresh63,1574
colourview_class_init( ColourviewClass *class )colourview_class_init79,1989
colourview_area_changed_cb( Imagedisplay *id, Rect *area, colourview_area_changed_cb100,2445
colourview_doubleclick_one_cb( GtkWidget *widget, colourview_doubleclick_one_cb110,2671
colourview_doubleclick_two_cb( GtkWidget *widget, colourview_doubleclick_two_cb120,2911
colourview_init( Colourview *colourview )colourview_init127,3080
colourview_get_type( void )colourview_get_type168,4614
colourview_new( void )colourview_new191,5093

vips_cache.c,1675
static GHashTable *vips_history_table = NULL;vips_history_table52,1389
static Queue *vips_history_lru = NULL;vips_history_lru53,1435
int vips_history_size = 0;vips_history_size54,1474
vips_hash( VipsInfo *vi )vips_hash59,1598
#define HASH_I(HASH_I75,1890
#define HASH_D(HASH_D76,1953
#define HASH_P(HASH_P77,2016
#define HASH_S(HASH_S78,2082
vips_equal( VipsInfo *vi1, VipsInfo *vi2 ) vips_equal200,4432
vips_history_sanity_sub( VipsInfo *vi )vips_history_sanity_sub374,8141
vips_history_sanity( void )vips_history_sanity380,8255
vips_history_lookup( VipsInfo *vi )vips_history_lookup480,10609
vips_history_touch( VipsInfo *vi )vips_history_touch506,11172
vips_history_remove( VipsInfo *vi )vips_history_remove525,11625
vips_history_remove_lru( void )vips_history_remove_lru555,12313
vips_history_destroy_cb( Imageinfo *ii, VipsInfo *vi )vips_history_destroy_cb573,12652
vips_history_invalidate_cb( Imageinfo *ii, VipsInfo *vi )vips_history_invalidate_cb584,12881
vips_history_add( VipsInfo *vi )vips_history_add597,13167
vips_gather( VipsInfo *vi ) vips_gather654,14605
vips_tochar_shell( VipsInfo *vi, int i, VipsBuf *buf )vips_tochar_shell736,16554
vips_tochar_trace( VipsInfo *vi, int i, VipsBuf *buf )vips_tochar_trace849,18660
vips_args_vips( VipsInfo *vi, VipsBuf *buf )vips_args_vips919,19943
vips_error_fn_vips( VipsInfo *vi )vips_error_fn_vips941,20593
vips_build_argv( VipsInfo *vi, char **argv )vips_build_argv962,21146
vips_free_argv( int argc, char **argv )vips_free_argv986,21636
vips_update_hist( VipsInfo *vi )vips_update_hist999,21827
vips_dispatch( VipsInfo *vi, PElement *out )vips_dispatch1052,22962

link.c,2108
link_expr_destroy( LinkExpr *le )link_expr_destroy38,1004
link_expr_new( Link *link, Expr *expr, gboolean dynamic )link_expr_new62,1582
link_serial_new( void )link_serial_new95,2391
link_dirty_child( Link *link )link_dirty_child109,2607
link_clean_child( Link *link )link_clean_child129,3041
link_destroy( Link *link )link_destroy154,3604
link_new( Symbol *child, Symbol *parent )link_new184,4285
link_find_child_sub( Link *link, Symbol *child )link_find_child_sub220,5094
link_find_child( Symbol *child, Symbol *parent )link_find_child231,5278
link_expr_find_expr_sub( LinkExpr *le, Expr *expr )link_expr_find_expr_sub238,5443
link_expr_find_expr( Link *link, Expr *expr, gboolean dynamic )link_expr_find_expr249,5611
link_add( Symbol *child, Expr *expr, gboolean dynamic )link_add260,5908
link_remove( Symbol *child, Expr *expr, gboolean dynamic )link_remove297,6734
link_children_expr_sub( Symbol *child, Expr *expr )link_children_expr_sub323,7356
link_children_expr( Expr *expr, Symbol *parent )link_children_expr347,7852
link_children( Symbol *child, Symbol *parent )link_children371,8404
link_row( Model *model, Symbol *parent )link_row385,8687
symbol_ndirty_sub( Link *link, int *nd )symbol_ndirty_sub396,8932
symbol_ndirty( Symbol *sym )symbol_ndirty408,9148
symbol_fix_counts( Symbol *sym )symbol_fix_counts421,9324
symbol_link_destroy( Symbol *sym )symbol_link_destroy437,9592
symbol_link_build( Symbol *sym )symbol_link_build445,9755
link_dirty_set_sub( LinkExpr *le, int serial )link_dirty_set_sub471,10322
link_dirty_set( Link *link, int serial )link_dirty_set482,10718
link_dirty_walk( Link *link, int serial )link_dirty_walk499,11178
symbol_dirty_intrans( Symbol *sym, int serial )symbol_dirty_intrans516,11556
symbol_dirty_set( Symbol *sym )symbol_dirty_set525,11753
symbol_dirty( Symbol *sym, int serial )symbol_dirty561,12395
link_dirty_total( Link *link, int serial )link_dirty_total571,12551
symbol_dirty_total( Symbol *sym, int serial )symbol_dirty_total609,13425
symbol_dirty_clear( Symbol *sym )symbol_dirty_clear630,13938

boxes.h,4744
#define TYPE_STRINGSET TYPE_STRINGSET51,1819
#define STRINGSET(STRINGSET52,1865
#define STRINGSET_CLASS(STRINGSET_CLASS54,1946
#define IS_STRINGSET(IS_STRINGSET56,2048
#define IS_STRINGSET_CLASS(IS_STRINGSET_CLASS57,2118
	struct _Stringset *ss;ss63,2265
	GtkWidget *entry;	entry65,2290
	char *label;	label66,2310
	char *text;	/* Current text value */text67,2325
	char *tooltip;tooltip68,2363
} StringsetChild;StringsetChild69,2379
typedef struct _Stringset {_Stringset71,2398
	iDialog parent;parent72,2426
	GSList *children;children74,2444
	GtkSizeGroup *group;	/* Align labels with this */     group75,2463
} Stringset;Stringset76,2519
typedef struct _StringsetClass {_StringsetClass78,2533
	iDialogClass parent_class;parent_class79,2566
} StringsetClass;StringsetClass83,2616
#define TYPE_FIND TYPE_FIND94,2964
#define FIND(FIND95,3000
#define FIND_CLASS(FIND_CLASS97,3066
#define IS_FIND(IS_FIND99,3153
#define IS_FIND_CLASS(IS_FIND_CLASS100,3213
typedef struct _Find {_Find103,3293
	iDialog parent;parent104,3316
	GtkWidget *search;search108,3361
	GtkWidget *regexp;regexp110,3400
	GtkWidget *csens;csens112,3443
	GtkWidget *fromtop;fromtop113,3462
} Find;Find114,3483
typedef struct _FindClass {_FindClass116,3492
	iDialogClass parent_class;parent_class117,3520
} FindClass;FindClass121,3570
#define TYPE_IMAGEHEADER TYPE_IMAGEHEADER128,3673
#define IMAGEHEADER(IMAGEHEADER129,3723
#define IMAGEHEADER_CLASS(IMAGEHEADER_CLASS131,3810
#define IS_IMAGEHEADER(IS_IMAGEHEADER133,3918
#define IS_IMAGEHEADER_CLASS(IS_IMAGEHEADER_CLASS134,3992
typedef struct _Imageheader {_Imageheader137,4086
	iDialog parent;parent138,4116
	Conversion *conv;conv140,4134
	GtkWidget *swin_fields;swin_fields141,4153
	GtkWidget *fields;fields142,4178
	GtkSizeGroup *group;group143,4198
	GtkWidget *history;history144,4220
} Imageheader;Imageheader145,4241
typedef struct _ImageheaderClass {_ImageheaderClass147,4257
	iDialogClass parent_class;parent_class148,4292
} ImageheaderClass;ImageheaderClass152,4342
#define TYPE_SPLASH TYPE_SPLASH161,4522
#define SPLASH(SPLASH162,4562
#define SPLASH_CLASS(SPLASH_CLASS164,4634
#define IS_SPLASH(IS_SPLASH166,4727
#define IS_SPLASH_CLASS(IS_SPLASH_CLASS167,4791
#define NO_SPLASH NO_SPLASH172,4930
typedef struct _Splash {_Splash174,4961
	GtkWindow parent_object;parent_object175,4986
	GtkWidget *progress;		/* Display progress here */progress177,5013
	guint update_sid;		/* Link to update messages */update_sid178,5064
} Splash;Splash179,5114
typedef struct _SplashClass {_SplashClass181,5125
	GtkWindowClass parent_class;parent_class182,5155
} SplashClass;SplashClass186,5207
#define TYPE_FONTCHOOSER TYPE_FONTCHOOSER193,5313
#define FONTCHOOSER(FONTCHOOSER194,5363
#define FONTCHOOSER_CLASS(FONTCHOOSER_CLASS196,5450
#define IS_FONTCHOOSER(IS_FONTCHOOSER198,5558
#define IS_FONTCHOOSER_CLASS(IS_FONTCHOOSER_CLASS199,5632
typedef struct _Fontchooser {_Fontchooser202,5726
	iDialog parent_object;parent_object203,5756
	GtkWidget *fontchooser;		/* gtk font select widget */fontchooser205,5781
} Fontchooser;Fontchooser206,5836
typedef struct _FontchooserClass {_FontchooserClass208,5852
	iDialogClass parent_class;parent_class209,5887
} FontchooserClass;FontchooserClass213,5937
#define TYPE_FONTBUTTON TYPE_FONTBUTTON223,6194
#define FONTBUTTON(FONTBUTTON224,6242
#define FONTBUTTON_CLASS(FONTBUTTON_CLASS226,6326
#define IS_FONTBUTTON(IS_FONTBUTTON228,6431
#define IS_FONTBUTTON_CLASS(IS_FONTBUTTON_CLASS229,6503
typedef struct _Fontbutton {_Fontbutton232,6595
	GtkButton parent_object;parent_object233,6624
	char *font_name;		/* Current name */font_name235,6651
	Fontchooser *fontchooser;	/* Pop up dialog */fontchooser237,6690
} Fontbutton;Fontbutton238,6737
typedef struct _FontbuttonClass {_FontbuttonClass240,6752
	GtkButtonClass parent_class;parent_class241,6786
	void (*changed)( Fontbutton * );changed243,6817
} FontbuttonClass;FontbuttonClass244,6851
#define TYPE_INFOBAR TYPE_INFOBAR253,7140
#define INFOBAR(INFOBAR254,7182
#define INFOBAR_CLASS(INFOBAR_CLASS256,7257
#define IS_INFOBAR(IS_INFOBAR258,7353
#define IS_INFOBAR_CLASS(IS_INFOBAR_CLASS259,7419
struct _Infobar {_Infobar262,7505
	GtkInfoBar parent_object;parent_object264,7542
	GtkWidget *top;top267,7593
	GtkWidget *sub;sub268,7610
	GtkWidget *info;info269,7627
	guint close_timeout;close_timeout270,7645
	guint close_animation_timeout;close_animation_timeout271,7667
	int height;height272,7699
typedef struct _InfobarClass {_InfobarClass275,7716
	GtkInfoBarClass parent_class;parent_class277,7766
} InfobarClass;InfobarClass280,7821

workspacedefs.c,1120
static ViewClass *parent_class = NULL;parent_class36,936
workspacedefs_text_changed( GtkTextBuffer *buffer, workspacedefs_text_changed39,988
workspacedefs_refresh( vObject *vobject )workspacedefs_refresh61,1441
workspacedefs_class_init( WorkspacedefsClass *class )workspacedefs_class_init116,3001
workspacedefs_set_text_from_file( Workspacedefs *workspacedefs, workspacedefs_set_text_from_file126,3233
workspacedefs_load_file_cb( iWindow *iwnd, workspacedefs_load_file_cb150,3777
workspacedefs_replace_cb( GtkWidget *wid, Workspacedefs *workspacedefs )workspacedefs_replace_cb174,4264
workspacedefs_save_as_cb( GtkWidget *wid, Workspacedefs *workspacedefs )workspacedefs_save_as_cb193,4885
workspacedefs_set_text( Workspacedefs *workspacedefs, const char *txt )workspacedefs_set_text204,5160
workspacedefs_process_cb( GtkWidget *wid, Workspacedefs *workspacedefs )workspacedefs_process_cb228,5721
workspacedefs_init( Workspacedefs *workspacedefs )workspacedefs_init244,6110
workspacedefs_get_type( void )workspacedefs_get_type307,8361
workspacedefs_new( Mainw *mainw )workspacedefs_new330,8819

regionview.h,3877
#define TYPE_REGIONVIEW TYPE_REGIONVIEW30,914
#define REGIONVIEW(REGIONVIEW31,962
#define REGIONVIEW_CLASS(REGIONVIEW_CLASS32,1043
#define IS_REGIONVIEW(IS_REGIONVIEW34,1148
#define IS_REGIONVIEW_CLASS(IS_REGIONVIEW_CLASS35,1220
#define REGIONVIEW_LABEL_MAX REGIONVIEW_LABEL_MAX38,1312
	REGIONVIEW_WAIT,	/* Waiting for left down */REGIONVIEW_WAIT43,1398
	REGIONVIEW_MOVE,	/* Dragging on label */REGIONVIEW_MOVE44,1444
	REGIONVIEW_RESIZE	/* Dragging on resize handle */REGIONVIEW_RESIZE45,1486
} RegionviewState;RegionviewState46,1537
	REGIONVIEW_REGION,	/* width & height > 0 */REGIONVIEW_REGION51,1591
	REGIONVIEW_AREA,	/* width & height > 0 and locked */REGIONVIEW_AREA52,1636
	REGIONVIEW_MARK,	/* width & height == 0 */REGIONVIEW_MARK53,1690
	REGIONVIEW_ARROW,	/* width & height unconstrained */REGIONVIEW_ARROW54,1734
	REGIONVIEW_HGUIDE,	/* width == image width, height == 0 */REGIONVIEW_HGUIDE55,1788
	REGIONVIEW_VGUIDE,	/* width == 0, height == image height */REGIONVIEW_VGUIDE56,1848
	REGIONVIEW_LINE,	/* floating dashed line for paintbox */REGIONVIEW_LINE57,1909
	REGIONVIEW_BOX		/* floating dashed box for paintbox */REGIONVIEW_BOX58,1967
} RegionviewType;RegionviewType59,2023
	REGIONVIEW_RESIZE_NONE,REGIONVIEW_RESIZE_NONE64,2078
	REGIONVIEW_RESIZE_MOVE,REGIONVIEW_RESIZE_MOVE65,2103
	REGIONVIEW_RESIZE_EDIT,REGIONVIEW_RESIZE_EDIT66,2128
	REGIONVIEW_RESIZE_TOPLEFT,REGIONVIEW_RESIZE_TOPLEFT67,2153
	REGIONVIEW_RESIZE_TOP,REGIONVIEW_RESIZE_TOP68,2181
	REGIONVIEW_RESIZE_TOPRIGHT,REGIONVIEW_RESIZE_TOPRIGHT69,2205
	REGIONVIEW_RESIZE_RIGHT,REGIONVIEW_RESIZE_RIGHT70,2234
	REGIONVIEW_RESIZE_BOTTOMRIGHT,REGIONVIEW_RESIZE_BOTTOMRIGHT71,2260
	REGIONVIEW_RESIZE_BOTTOM,REGIONVIEW_RESIZE_BOTTOM72,2292
	REGIONVIEW_RESIZE_BOTTOMLEFT,REGIONVIEW_RESIZE_BOTTOMLEFT73,2319
	REGIONVIEW_RESIZE_LEFT,REGIONVIEW_RESIZE_LEFT74,2350
	REGIONVIEW_RESIZE_LASTREGIONVIEW_RESIZE_LAST75,2375
} RegionviewResize;RegionviewResize76,2399
struct _Regionview {_Regionview78,2420
	View view;view79,2441
	RegionviewType type;type81,2454
	gboolean frozen;	/* type is frozen ... not rethought on resize */frozen82,2476
	RegionviewState state;state86,2580
	RegionviewResize resize;/* Resize type */resize87,2604
	int dx, dy;		/* Drag offset */dx88,2647
	int dx, dy;		/* Drag offset */dy88,2647
	gboolean grabbed;	/* Currently tracking with mouse */grabbed89,2679
	Classmodel *classmodel;classmodel93,2763
	Rect *model_area;	/* What we read/write to talk to the model */model_area94,2788
	Rect our_area;		/* Same, but our copy ... origin top left */our_area95,2853
	Imagepresent *ip;ip99,2954
	iWindowCursorContext *cntxt;cntxt100,2973
	guint expose_sid;expose_sid104,3045
	guint destroy_sid;destroy_sid105,3064
	guint event_sid;event_sid106,3084
	guint changed_sid;changed_sid107,3102
	guint conv_destroy_sid;conv_destroy_sid108,3122
	guint model_changed_sid;model_changed_sid109,3147
	GtkStateType paint_state;/* prelight/normal/etc. */paint_state113,3215
	gboolean unpainting;	/* We are unpainting */unpainting117,3300
	Rect area;		/* Area of region ... image coordinates */area118,3346
	Rect label;		/* Area covered by label ... canvas cods */label119,3402
	int ascent;		/* Height of ascenders for text */ascent120,3460
	int dash_offset;dash_offset121,3509
	guint dash_crawl;	/* Timer for dash crawl animation */dash_crawl122,3527
	GtkStateType last_paint_state;last_paint_state123,3583
	RegionviewType last_type;last_type124,3615
	gboolean first;		/* Initial draw (no old pos to remove) */first125,3642
	gboolean label_geo;	/* Redo the label geo on refresh, please */label_geo126,3702
	VipsBuf caption;caption130,3803
typedef struct _RegionviewClass {_RegionviewClass133,3825
	ViewClass parent_class;parent_class134,3859
} RegionviewClass;RegionviewClass138,3906

optionview.c,738
static GraphicviewClass *parent_class = NULL;parent_class36,958
lstring_copy( GSList *lstring )lstring_copy41,1054
lstring_equal( GSList *a, GSList *b )lstring_equal59,1335
optionview_destroy( GtkObject *object )optionview_destroy73,1579
optionview_link( View *view, Model *model, View *parent )optionview_link90,1923
optionview_change_cb( GtkWidget *wid, Optionview *optionview )optionview_change_cb104,2289
optionview_refresh( vObject *vobject )optionview_refresh121,2695
optionview_class_init( OptionviewClass *class )optionview_class_init178,4398
optionview_init( Optionview *optionview )optionview_init199,4854
optionview_get_type( void )optionview_get_type218,5376
optionview_new( void )optionview_new241,5857

preview.c,815
#define NUM_COLUMNS NUM_COLUMNS38,979
static ImagedisplayClass *parent_class = NULL;parent_class40,1004
preview_destroy( GtkObject *object )preview_destroy43,1064
preview_class_init( PreviewClass *class )preview_class_init59,1361
preview_init( Preview *preview )preview_init73,1660
preview_get_type( void )preview_get_type89,2126
preview_new( void )preview_new112,2547
preview_set_filename_idle( Preview *preview, char *filename )preview_set_filename_idle120,2667
typedef struct _UpdateProxy {_UpdateProxy158,3564
	Preview *preview;preview159,3594
	char *filename;filename160,3613
} UpdateProxy;UpdateProxy161,3630
preview_set_filename_idle_cb( UpdateProxy *proxy )preview_set_filename_idle_cb164,3662
preview_set_filename( Preview *preview, char *filename )preview_set_filename183,4114

matrixview.h,1316
#define TYPE_MATRIXVIEW TYPE_MATRIXVIEW30,901
#define MATRIXVIEW(MATRIXVIEW31,949
#define MATRIXVIEW_CLASS(MATRIXVIEW_CLASS32,1030
#define IS_MATRIXVIEW(IS_MATRIXVIEW34,1135
#define IS_MATRIXVIEW_CLASS(IS_MATRIXVIEW_CLASS35,1207
typedef struct _Matrixview {_Matrixview38,1299
	Graphicview parent_object;parent_object39,1328
	GtkWidget *box;			/* Top level hbox we lay out in */box41,1357
	GtkListStore *store;store46,1516
	GtkWidget *sheet;sheet47,1538
	GtkWidget *swin;swin48,1557
	char *cell_text;		/* Last text set ... for edit detect */cell_text49,1575
	int cell_row, cell_col;		/* Position of text */cell_row50,1634
	int cell_row, cell_col;		/* Position of text */cell_col50,1634
	GtkWidget *table;		/* Matrix table */table54,1724
	GSList *items; 			/* Widgets for elems */items55,1763
	MatrixDisplayType display;	/* What's in items at the mo */display56,1806
	int width;			/* Size of mat panel we have */width57,1866
	int height;height58,1912
	GtkWidget *cbox;		/* Convolution only: scale & offset */cbox60,1926
	GtkWidget *scale;		scale61,1984
	GtkWidget *offset;offset62,2005
} Matrixview;Matrixview63,2025
typedef struct _MatrixviewClass {_MatrixviewClass65,2040
	GraphicviewClass parent_class;parent_class66,2074
} MatrixviewClass;MatrixviewClass70,2128

expr.c,1951
	SIG_NEW_VALUE,		/* new value for root */SIG_NEW_VALUE47,1058
	SIG_LASTSIG_LAST48,1100
static iContainerClass *parent_class = NULL;parent_class51,1114
static guint expr_signals[SIG_LAST] = { 0 };expr_signals53,1160
GSList *expr_error_all = NULL;expr_error_all57,1251
expr_error_print( Expr *expr, VipsBuf *buf )expr_error_print60,1290
expr_map_all_sub( Symbol *sym, map_expr_fn fn, void *a )expr_map_all_sub87,1928
expr_map_all( Expr *expr, map_expr_fn fn, void *a )expr_map_all98,2145
expr_name_print( Expr *expr )expr_name_print119,2521
expr_name( Expr *expr, VipsBuf *buf )expr_name135,2751
expr_get_parent( Expr *expr )expr_get_parent144,2908
expr_get_parent_dynamic( Expr *expr )expr_get_parent_dynamic157,3142
expr_get_root( Expr *expr )expr_get_root179,3522
expr_get_root_dynamic( Expr *expr )expr_get_root_dynamic191,3757
expr_get_row( Expr *expr )expr_get_row216,4530
expr_new_value( Expr *expr )expr_new_value227,4717
expr_value_destroy( Expr *expr )expr_value_destroy246,5029
expr_strip( Expr *expr )expr_strip257,5252
expr_dispose( GObject *gobject )expr_dispose286,5841
expr_info( iObject *iobject, VipsBuf *buf )expr_info342,6933
expr_real_new_value( Expr *expr )expr_real_new_value354,7168
expr_class_init( ExprClass *class )expr_class_init370,7520
expr_init( Expr *expr )expr_init400,8155
expr_get_type( void )expr_get_type417,8406
expr_new( Symbol *sym )expr_new442,8916
expr_clone( Symbol *sym )expr_clone465,9290
expr_error_set( Expr *expr )expr_error_set488,9773
expr_error_get( Expr *expr )expr_error_get525,10666
expr_error_clear( Expr *expr )expr_error_clear541,10916
expr_dirty( Expr *expr, int serial )expr_dirty573,11788
expr_dirty_intrans( Expr *expr, int serial )expr_dirty_intrans596,12177
expr_tip_sub( Expr *expr, VipsBuf *buf )expr_tip_sub609,12414
expr_tip( Expr *expr, VipsBuf *buf )expr_tip664,13740
expr_resolve( Expr *expr )expr_resolve674,13953

plotpresent.c,1367
static GtkBinClass *parent_class = NULL;parent_class39,999
	SIG_MOUSE_MOVE,		/* mose drag, axies cods */SIG_MOUSE_MOVE42,1048
	SIG_LASTSIG_LAST43,1094
static guint plotpresent_signals[SIG_LAST] = { 0 };plotpresent_signals46,1108
plotpresent_mouse_move( Plotpresent *plotpresent, double x, double y )plotpresent_mouse_move49,1173
plotpresent_destroy( GtkObject *object )plotpresent_destroy56,1353
plotpresent_size_request( GtkWidget *widget, GtkRequisition *requisition )plotpresent_size_request79,1838
plotpresent_size_allocate( GtkWidget *widget, GtkAllocation *allocation )plotpresent_size_allocate88,2074
plotpresent_motion_notify_event( GtkWidget *widget, GdkEventMotion *event ) plotpresent_motion_notify_event99,2368
plotpresent_class_init( PlotpresentClass *class )plotpresent_class_init158,4027
plotpresent_init( Plotpresent *plotpresent )plotpresent_init188,4817
plotpresent_get_type( void )plotpresent_get_type218,5759
plotpresent_add_grid( GogAxis *axis )plotpresent_add_grid243,6322
plotpresent_build_plot( Plotpresent *plotpresent )plotpresent_build_plot258,6713
plotpresent_changed_cb( Plotmodel *plotmodel, Plotpresent *plotpresent )plotpresent_changed_cb305,8036
plotpresent_link( Plotpresent *plotpresent, Plotmodel *plotmodel )plotpresent_link324,8414
plotpresent_new( Plotmodel *plotmodel )plotpresent_new334,8697

toolkitbrowser.h,956
#define TYPE_TOOLKITBROWSER TYPE_TOOLKITBROWSER30,890
#define TOOLKITBROWSER(TOOLKITBROWSER31,946
#define TOOLKITBROWSER_CLASS(TOOLKITBROWSER_CLASS33,1042
#define IS_TOOLKITBROWSER(IS_TOOLKITBROWSER36,1163
#define IS_TOOLKITBROWSER_CLASS(IS_TOOLKITBROWSER_CLASS38,1246
typedef struct _Toolkitbrowser {_Toolkitbrowser41,1346
	vObject parent_object;parent_object42,1379
	Mainw *mainw;			/* Mainw whose kits we explore */mainw44,1404
	GtkListStore *store;		/* Model for list view */store46,1456
	GtkTreeModel *filter;		/* After filtering with search box */filter47,1505
	GtkWidget *tree;		/* Displayed tree */tree48,1567
	GtkWidget *entry;		/* Search widget */entry49,1607
	GtkWidget *top;			/* hbox for top bar */top50,1647
} Toolkitbrowser;Toolkitbrowser51,1689
typedef struct _ToolkitbrowserClass {_ToolkitbrowserClass53,1708
	vObjectClass parent_class;parent_class54,1746
} ToolkitbrowserClass;ToolkitbrowserClass56,1775

plotview.h,659
#define TYPE_PLOTVIEW TYPE_PLOTVIEW30,899
#define PLOTVIEW(PLOTVIEW31,943
#define PLOTVIEW_CLASS(PLOTVIEW_CLASS32,1018
#define IS_PLOTVIEW(IS_PLOTVIEW34,1117
#define IS_PLOTVIEW_CLASS(IS_PLOTVIEW_CLASS35,1185
typedef struct _Plotview {_Plotview38,1273
	Graphicview parent_object;parent_object39,1300
	GtkWidget *box;box41,1329
	GtkWidget *label;label42,1346
	GtkWidget *canvas;canvas43,1365
	GogChart *gchart;gchart45,1386
        GogPlot *gplot;gplot46,1405
} Plotview;Plotview47,1429
typedef struct _PlotviewClass {_PlotviewClass49,1442
	GraphicviewClass parent_class;parent_class50,1474
} PlotviewClass;PlotviewClass54,1528

itext.c,2009
static HeapmodelClass *parent_class = NULL;parent_class36,941
itext_finalize( GObject *gobject )itext_finalize39,998
itext_info( iObject *iobject, VipsBuf *buf )itext_info63,1467
itext_add_list( PElement *base, VipsBuf *buf, gboolean *first )itext_add_list80,1920
itext_add_string( PElement *base, VipsBuf *buf )itext_add_string108,2466
itext_add_char( int ch, VipsBuf *buf )itext_add_char139,3112
itext_add_complex( double rp, double ip, VipsBuf *buf )itext_add_complex154,3312
itext_decompile_element( VipsBuf *buf, PElement *base, gboolean top )itext_decompile_element176,3753
itext_decompile( Reduce *rc, VipsBuf *buf, PElement *root )itext_decompile297,6839
itext_add_element( VipsBuf *buf, PElement *base, itext_add_element317,7374
itext_value( Reduce *rc, VipsBuf *buf, PElement *root )itext_value457,10877
itext_value_ev( Reduce *rc, VipsBuf *buf, PElement *root )itext_value_ev476,11289
itext_make_decompiled_string( Expr *expr, VipsBuf *buf )itext_make_decompiled_string485,11454
itext_make_value_string( Expr *expr, VipsBuf *buf )itext_make_value_string518,12187
itext_update_model( Heapmodel *heapmodel )itext_update_model549,12875
itext_update_heap_sub( Symbol *sym, VipsBuf *buf )itext_update_heap_sub602,14231
itext_update_heap( Heapmodel *heapmodel )itext_update_heap612,14449
itext_clear_edited( Heapmodel *heapmodel )itext_clear_edited671,15889
itext_parent_add( iContainer *child )itext_parent_add708,16745
itext_load( Model *model, itext_load732,17163
itext_view_new( Model *model, View *parent )itext_view_new753,17664
itext_save( Model *model, xmlNode *xnode )itext_save759,17759
itext_class_init( iTextClass *class )itext_class_init777,18131
itext_init( iText *itext )itext_init812,19041
itext_get_type( void )itext_get_type831,19452
itext_new( Rhs *rhs )itext_new856,19968
itext_set_edited( iText *itext, gboolean edited )itext_set_edited867,20156
itext_set_formula( iText *itext, const char *formula )itext_set_formula887,20573

valueview.h,568
#define TYPE_VALUEVIEW TYPE_VALUEVIEW30,924
#define VALUEVIEW(VALUEVIEW31,970
#define VALUEVIEW_CLASS(VALUEVIEW_CLASS33,1051
#define IS_VALUEVIEW(IS_VALUEVIEW35,1153
#define IS_VALUEVIEW_CLASS(IS_VALUEVIEW_CLASS36,1223
typedef struct _Valueview {_Valueview39,1313
	Graphicview parent_object;parent_object40,1341
	GtkWidget *eb;eb42,1370
	GtkWidget *label;label43,1386
} Valueview;Valueview44,1405
typedef struct _ValueviewClass {_ValueviewClass46,1419
	GraphicviewClass parent_class;parent_class47,1452
} ValueviewClass;ValueviewClass51,1506

colourview.h,644
#define TYPE_COLOURVIEW TYPE_COLOURVIEW30,901
#define COLOURVIEW(COLOURVIEW31,949
#define COLOURVIEW_CLASS(COLOURVIEW_CLASS32,1030
#define IS_COLOURVIEW(IS_COLOURVIEW34,1135
#define IS_COLOURVIEW_CLASS(IS_COLOURVIEW_CLASS35,1207
typedef struct _Colourview {_Colourview38,1299
	Graphicview parent_object;parent_object39,1328
	Colourdisplay *colourdisplay;colourdisplay41,1357
	Conversion *conv;conv42,1388
	GtkWidget *label;label43,1407
} Colourview;Colourview44,1426
typedef struct _ColourviewClass {_ColourviewClass46,1441
	GraphicviewClass parent_class;parent_class47,1475
} ColourviewClass;ColourviewClass51,1529

vips_cache.h,0

model.c,3586
	SIG_SCROLLTO,	/* Views should try to make themselves visible */SIG_SCROLLTO45,1134
	SIG_LAYOUT,	/* Views should lay out their children */SIG_LAYOUT46,1199
	SIG_RESET,	/* Reset edit mode in views */SIG_RESET47,1254
	SIG_LASTSIG_LAST48,1297
static iContainerClass *parent_class = NULL;parent_class51,1311
static guint model_signals[SIG_LAST] = { 0 };model_signals53,1357
static Model *model_base = NULL;model_base57,1444
static GSList *model_registered_loadable = NULL;model_registered_loadable61,1536
ModelLoadState *model_loadstate = NULL;model_loadstate65,1645
model_loadstate_rename_destroy( ModelRename *rename )model_loadstate_rename_destroy70,1730
model_loadstate_rename_new( ModelLoadState *state, model_loadstate_rename_new80,1901
model_loadstate_destroy( ModelLoadState *state )model_loadstate_destroy100,2388
model_loadstate_error( ModelLoadState *state, const char *fmt, ... )model_loadstate_error115,2774
model_loadstate_error_get( ModelLoadState *state )model_loadstate_error_get125,2968
model_loadstate_new( const char *filename )model_loadstate_new137,3258
model_loadstate_new_openfile( iOpenFile *of )model_loadstate_new_openfile169,4083
model_loadstate_rewrite_name( char *name )model_loadstate_rewrite_name204,4981
model_loadstate_rewrite( ModelLoadState *state, char *old_rhs, char *new_rhs )model_loadstate_rewrite226,5429
model_view_new( Model *model, View *parent )model_view_new254,6024
model_register_loadable( ModelClass *model_class )model_register_loadable272,6401
model_scrollto( Model *model, ModelScrollPosition position )model_scrollto279,6553
model_layout( Model *model )model_layout288,6739
model_reset( Model *model )model_reset296,6880
model_edit( GtkWidget *parent, Model *model )model_edit306,7037
model_save( Model *model, xmlNode *xnode )model_save323,7396
model_save_test( Model *model )model_save_test336,7646
model_save_text( Model *model, iOpenFile *of )model_save_text347,7837
model_load( Model *model, model_load358,8057
model_load_text( Model *model, Model *parent, iOpenFile *of )model_load_text378,8498
model_empty( Model *model )model_empty397,8918
model_real_scrollto( Model *model, ModelScrollPosition position )model_real_scrollto408,9092
model_real_save( Model *model, xmlNode *xnode )model_real_save413,9180
model_new_xml_sub( ModelClass *model_class, model_new_xml_sub442,9965
model_new_xml( ModelLoadState *state, Model *parent, xmlNode *xnode )model_new_xml463,10433
model_real_load( Model *model,model_real_load478,10739
model_real_empty( Model *model )model_real_empty516,11810
model_class_init( ModelClass *class )model_class_init523,11959
model_init( Model *model )model_init568,13136
model_get_type( void )model_get_type582,13435
model_base_init( void )model_base_init607,13973
	iDialog *idlg;		/* The yesno we run */idlg642,15166
	Model *model;		/* The model we watch */model643,15206
	guint destroy_sid;	/* sid for the destroy */destroy_sid644,15247
} ModelCheckDestroy;ModelCheckDestroy645,15293
model_check_destroy_sub( iWindow *iwnd, void *client, model_check_destroy_sub650,15349
model_check_destroy_destroy_cb( Model *model, ModelCheckDestroy *mcd )model_check_destroy_destroy_cb665,15673
model_check_destroy_finished( void *client, iWindowResult result ) model_check_destroy_finished685,16062
model_check_destroy( GtkWidget *parent, Model *model )model_check_destroy694,16257
model_set_display( Model *model, gboolean display )model_set_display729,17146
model_clear_edited( Model *model )model_clear_edited754,17659

link.h,580
struct _LinkExpr {_LinkExpr33,1062
	Link *link;		/* Link we are part of */link34,1081
	Expr *expr;		/* Expr that references child */expr36,1122
	int count;		/* Number of times expr references child */count37,1169
	gboolean dynamic;	/* True for dynamic link */dynamic38,1226
struct _Link {_Link43,1299
	Symbol *parent;		/* This top-level symbol contains exprs ... */parent44,1314
	Symbol *child;		/* ... which reference this symbol */child45,1379
	int serial;serial51,1604
	GSList *static_links;static_links62,2048
	GSList *dynamic_links;dynamic_links63,2071

ip.h,7323
#define IP_HIP_H33,972
#define IM_NO_VIPS7_COMPATIM_NO_VIPS7_COMPAT41,1093
#define _(_53,1329
#define N_(N_55,1383
#define N_(N_57,1429
#define _(_60,1492
#define N_(N_61,1519
#define textdomain(textdomain62,1547
#define gettext(gettext63,1583
#define dgettext(dgettext64,1616
#define dcgettext(dcgettext65,1657
#define bindtextdomain(bindtextdomain66,1704
#define bind_textdomain_codeset(bind_textdomain_codeset67,1755
#define ngettext(ngettext68,1814
#    define  __attribute__(__attribute__170,4155
#define MAXFILES MAXFILES183,4345
#define STACK_SIZE STACK_SIZE184,4401
#define LEN_LABEL LEN_LABEL185,4453
#define MAX_SYSTEM MAX_SYSTEM186,4501
#define MAX_BANDS MAX_BANDS187,4560
#define MAX_CSTACK MAX_CSTACK188,4619
#define MAX_STRSIZE MAX_STRSIZE189,4681
#define MAX_TRACE MAX_TRACE190,4742
#define MAX_SSTACK MAX_SSTACK191,4805
#define VIPS_HOMEPAGE VIPS_HOMEPAGE192,4859
#define IP_NAME IP_NAME193,4915
#define NIP_DOCPATH NIP_DOCPATH194,4951
#define VIPS_DOCPATH VIPS_DOCPATH196,5094
#define IP_NAME IP_NAME198,5230
#define NAMESPACE NAMESPACE199,5266
#define MAX_LINELENGTH MAX_LINELENGTH201,5353
#define MAX_RECENT MAX_RECENT202,5418
#define NIP_COPYRIGHT NIP_COPYRIGHT203,5485
#define STOCK_NEXT_ERROR STOCK_NEXT_ERROR207,5573
#define STOCK_DROPPER STOCK_DROPPER208,5615
#define STOCK_DUPLICATE STOCK_DUPLICATE209,5651
#define STOCK_PAINTBRUSH STOCK_PAINTBRUSH210,5691
#define STOCK_LINE STOCK_LINE211,5733
#define STOCK_TEXT STOCK_TEXT212,5767
#define STOCK_SMUDGE STOCK_SMUDGE213,5797
#define STOCK_FLOOD STOCK_FLOOD214,5831
#define STOCK_FLOOD_BLOB STOCK_FLOOD_BLOB215,5863
#define STOCK_RECT STOCK_RECT216,5904
#define STOCK_MOVE STOCK_MOVE217,5934
#define STOCK_SELECT STOCK_SELECT218,5964
#define STOCK_LED_RED STOCK_LED_RED219,5998
#define STOCK_LED_GREEN STOCK_LED_GREEN220,6034
#define STOCK_LED_BLUE STOCK_LED_BLUE221,6074
#define STOCK_LED_YELLOW STOCK_LED_YELLOW222,6112
#define STOCK_LED_CYAN STOCK_LED_CYAN223,6154
#define STOCK_LED_OFF STOCK_LED_OFF224,6192
#define MAX_ERROR_FRAG MAX_ERROR_FRAG228,6278
#  define mkdir(mkdir235,6395
#  define mkdir(mkdir241,6502
#define popen(popen250,6659
#define pclose(pclose251,6690
#define mktemp(mktemp252,6719
typedef struct _Watch Watch;Watch257,6791
typedef struct _Toolitem Toolitem;Toolitem258,6820
typedef struct _BuiltinInfo BuiltinInfo;BuiltinInfo259,6855
typedef struct _Classmodel Classmodel;Classmodel260,6896
typedef struct _Colour Colour;Colour261,6935
typedef struct _Column Column;Column262,6966
typedef struct _Columnview Columnview;Columnview263,6997
typedef struct _Compile Compile;Compile264,7036
typedef struct _Conversion Conversion;Conversion265,7069
typedef struct _Conversionview Conversionview;Conversionview266,7108
typedef struct _Expr Expr;Expr267,7155
typedef struct _Filemodel Filemodel;Filemodel268,7182
typedef struct _Heap Heap;Heap269,7219
typedef struct _HeapBlock HeapBlock;HeapBlock270,7246
typedef struct _Heapmodel Heapmodel;Heapmodel271,7283
typedef struct _iArrow iArrow;iArrow272,7320
typedef struct _iImage iImage;iImage273,7351
typedef struct _Imagedisplay Imagedisplay;Imagedisplay274,7382
typedef struct _Managed Managed;Managed275,7425
typedef struct _Managedfile Managedfile;Managedfile276,7458
typedef struct _Managedgvalue Managedgvalue;Managedgvalue277,7499
typedef struct _Managedgobject Managedgobject;Managedgobject278,7544
typedef struct _Managedstring Managedstring;Managedstring279,7591
typedef struct _Imageinfo Imageinfo;Imageinfo280,7636
typedef struct _Imagepresent Imagepresent;Imagepresent281,7673
typedef struct _Imagemodel Imagemodel;Imagemodel282,7716
typedef struct _iRegion iRegion;iRegion283,7755
typedef struct _iRegiongroup iRegiongroup;iRegiongroup284,7788
typedef struct _Link Link;Link285,7831
typedef struct _LinkExpr LinkExpr;LinkExpr286,7858
typedef struct _Model Model;Model287,7893
typedef struct _iObject iObject;iObject288,7922
typedef struct _iContainer iContainer;iContainer289,7955
typedef struct _Paintboxview Paintboxview;Paintboxview290,7994
typedef struct _ParseConst ParseConst;ParseConst291,8037
typedef struct _ParseNode ParseNode;ParseNode292,8076
typedef struct _Program Program;Program293,8113
typedef struct _String String;String294,8146
typedef struct _Number Number;Number295,8177
typedef struct _Reduce Reduce;Reduce296,8208
typedef struct _Regionview Regionview;Regionview297,8239
typedef struct _Rhs Rhs;Rhs298,8278
typedef struct _Rhsview Rhsview;Rhsview299,8303
typedef struct _Row Row;Row300,8336
typedef struct _Rowview Rowview;Rowview301,8361
typedef struct _Statusview Statusview;Statusview302,8394
typedef struct _Plotstatus Plotstatus;Plotstatus303,8433
typedef struct _Plot Plot;Plot304,8472
typedef struct _Plotwindow Plotwindow;Plotwindow305,8499
typedef struct _Plotpresent Plotpresent;Plotpresent306,8538
typedef struct _Plotmodel Plotmodel;Plotmodel307,8579
typedef struct _Graphwindow Graphwindow;Graphwindow308,8616
typedef struct _Subcolumn Subcolumn;Subcolumn309,8657
typedef struct _Subcolumnview Subcolumnview;Subcolumnview310,8694
typedef struct _Symbol Symbol;Symbol311,8739
typedef struct _Tool Tool;Tool312,8770
typedef struct _Toolkit Toolkit;Toolkit313,8797
typedef struct _Toolkitgroup Toolkitgroup;Toolkitgroup314,8830
typedef struct _Toolkitgroupview Toolkitgroupview;Toolkitgroupview315,8873
typedef struct _Toolkitview Toolkitview;Toolkitview316,8924
typedef struct _Toolview Toolview;Toolview317,8965
typedef struct _Trace Trace;Trace318,9000
typedef struct _Preview Preview;Preview319,9029
typedef struct _Infobar Infobar;Infobar320,9062
typedef struct _iError iError;iError321,9095
typedef struct _Log Log;Log322,9126
typedef struct _vObject vObject;vObject323,9151
typedef struct _View View;View324,9184
typedef struct _Workspace Workspace;Workspace325,9211
typedef struct _Workspacegroup Workspacegroup;Workspacegroup326,9248
typedef struct _Workspacegroupview Workspacegroupview;Workspacegroupview327,9295
typedef struct _Workspaceview Workspaceview;Workspaceview328,9350
typedef struct _Prefworkspaceview Prefworkspaceview;Prefworkspaceview329,9395
typedef struct _Prefcolumnview Prefcolumnview;Prefcolumnview330,9448
typedef struct _iText iText;iText331,9495
typedef struct _Expression Expression;Expression332,9524
typedef struct _Mainw Mainw;Mainw333,9563
typedef struct _Toolviewitemgroup Toolviewitemgroup;Toolviewitemgroup334,9592
typedef struct _Panechild Panechild;Panechild335,9645
typedef void *(*row_map_fn)( Row *, void *, void *, void * );row_map_fn339,9723
typedef void *(*symbol_map_fn)( Symbol *, void *, void *, void * );symbol_map_fn340,9785
typedef void *(*column_map_fn)( Column *, void * );column_map_fn341,9853
typedef void *(*view_map_fn)( View *, void *, void * );view_map_fn342,9905
typedef void *(*rowview_map_fn)( Rowview *, void * );rowview_map_fn343,9961
typedef void *(*workspace_map_fn)( Workspace *, void * );workspace_map_fn344,10015
typedef void *(*toolkit_map_fn)( Toolkit *, void *, void * );toolkit_map_fn345,10073
typedef void *(*tool_map_fn)( Tool *, void *, void * );tool_map_fn346,10135

parser.h,989
	iOpenFile *of;		/* Non-NULL if we read from a file */of34,1033
	char *str;		/* Non-NULL if we read from a string */str35,1088
	char *strpos;		/* Position in string */strpos36,1141
	char buf[MAX_STRSIZE];	/* Accumulate text of each definition here */buf38,1183
	int bwp;		/* Write point in the above */bwp39,1253
	int bsp[MAX_SSTACK];	/* Start point stack */bsp40,1295
	int bspsp;		/* Stack pointer */bspsp41,1341
	int lineno;		/* Current line number */lineno43,1375
	int charno;		/* Character in line */charno44,1415
	int pcharno;		/* Characters in previous line */pcharno45,1453
	int charpos;		/* Characters read by lex so far */charpos46,1502
	int oldchar;            /* unget buffer, -1 for no unget */oldchar48,1554
} InputState;InputState49,1615
	PARSE_RHS = 0,		/* eg. "a + b" */PARSE_RHS78,2202
	PARSE_PARAMS,		/* eg. "a b = a + b" */PARSE_PARAMS79,2237
	PARSE_SUPER 		/* eg. "fred c d" */PARSE_SUPER80,2277
} ParseRhsSyntax;ParseRhsSyntax81,2313

gtksheetfeatures.h,428
#define GTK_SHEET_FEATURES_HGTK_SHEET_FEATURES_H21,880
#define GTKSHEET_MAJOR_VERSION	GTKSHEET_MAJOR_VERSION31,995
#define GTKSHEET_MINOR_VERSION	GTKSHEET_MINOR_VERSION32,1032
#define GTKSHEET_MICRO_VERSION	GTKSHEET_MICRO_VERSION33,1069
#define GTKSHEET_BINARY_AGE	GTKSHEET_BINARY_AGE34,1106
#define GTKSHEET_INTERFACE_AGE	GTKSHEET_INTERFACE_AGE35,1140
#define GTKSHEET_CHECK_VERSION(GTKSHEET_CHECK_VERSION36,1177

workspacedefs.h,907
#define TYPE_WORKSPACEDEFS TYPE_WORKSPACEDEFS30,895
#define WORKSPACEDEFS(WORKSPACEDEFS31,949
#define WORKSPACEDEFS_CLASS(WORKSPACEDEFS_CLASS33,1042
#define IS_WORKSPACEDEFS(IS_WORKSPACEDEFS36,1160
#define IS_WORKSPACEDEFS_CLASS(IS_WORKSPACEDEFS_CLASS38,1241
typedef struct _Workspacedefs {_Workspacedefs41,1339
	vObject parent_object;parent_object42,1371
	Mainw *mainw;			/* Mainw whose workspace we explore */mainw44,1396
	GtkWidget *text;	text46,1453
	gboolean changed;		/* Text has been edited */changed47,1472
	gboolean errors;		/* Error on last process */errors48,1519
	guint text_hash;		/* Hash of the last text we set */text_hash49,1566
	GtkWidget *status;	status50,1620
} Workspacedefs;Workspacedefs51,1641
typedef struct _WorkspacedefsClass {_WorkspacedefsClass53,1659
	vObjectClass parent_class;parent_class54,1696
} WorkspacedefsClass;WorkspacedefsClass56,1725

optionview.h,659
#define TYPE_OPTIONVIEW TYPE_OPTIONVIEW30,901
#define OPTIONVIEW(OPTIONVIEW31,949
#define OPTIONVIEW_CLASS(OPTIONVIEW_CLASS32,1030
#define IS_OPTIONVIEW(IS_OPTIONVIEW34,1135
#define IS_OPTIONVIEW_CLASS(IS_OPTIONVIEW_CLASS35,1207
typedef struct _Optionview {_Optionview38,1299
	Graphicview parent_object;parent_object39,1328
	GtkWidget *label;label41,1357
	GtkWidget *hbox;hbox42,1376
	GtkWidget *options;options43,1394
	GSList *labels;labels48,1537
} Optionview;Optionview49,1554
typedef struct _OptionviewClass {_OptionviewClass51,1569
	GraphicviewClass parent_class;parent_class52,1603
} OptionviewClass;OptionviewClass56,1657

plotstatus.c,998
static GtkFrameClass *parent_class = NULL;parent_class36,940
static GtkWidget *plotstatus_menu = NULL;plotstatus_menu40,1007
plotstatus_columns_destroy( Plotstatus *plotstatus )plotstatus_columns_destroy43,1062
plotstatus_destroy( GtkObject *object )plotstatus_destroy56,1284
plotstatus_hide_cb( GtkWidget *menu, GtkWidget *host, Plotstatus *plotstatus )plotstatus_hide_cb77,1681
plotstatus_class_init( PlotstatusClass *class )plotstatus_class_init83,1832
plotstatus_init( Plotstatus *plotstatus )plotstatus_init105,2266
plotstatus_get_type( void )plotstatus_get_type147,3706
plotstatus_refresh( Plotstatus *plotstatus )plotstatus_refresh172,4190
plotstatus_changed_cb( Plotmodel *plotmodel, Plotstatus *plotstatus )plotstatus_changed_cb230,5627
plotstatus_new( Plotmodel *plotmodel )plotstatus_new236,5750
plotstatus_series_update( GtkWidget *widget, plotstatus_series_update250,6072
plotstatus_mouse( Plotstatus *plotstatus, double x, double y )plotstatus_mouse274,6549

preview.h,573
#define TYPE_PREVIEW TYPE_PREVIEW30,891
#define PREVIEW(PREVIEW31,933
#define PREVIEW_CLASS(PREVIEW_CLASS33,1008
#define IS_PREVIEW(IS_PREVIEW35,1104
#define IS_PREVIEW_CLASS(IS_PREVIEW_CLASS36,1170
struct _Preview {_Preview39,1256
	Imagedisplay parent;parent40,1274
	char *filename;			/* The file we are trying to display */filename42,1297
	Conversion *conv;		/* Hold a ref to the convert object */conv43,1356
typedef struct _PreviewClass {_PreviewClass46,1419
	ImagedisplayClass parent_class;parent_class47,1450
} PreviewClass;PreviewClass51,1505

number.c,427
static ClassmodelClass *parent_class = NULL;parent_class36,932
number_finalize( GObject *gobject )number_finalize39,990
number_view_new( Model *model, View *parent )number_view_new56,1292
static ClassmodelMember number_members[] = {number_members63,1410
number_class_init( NumberClass *class )number_class_init73,1711
number_init( Number *number )number_init97,2279
number_get_type( void )number_get_type105,2398

itextview.c,975
static ViewClass *parent_class = NULL;parent_class36,938
itextview_destroy( GtkObject *object )itextview_destroy39,990
itextview_refresh( vObject *vobject )itextview_refresh58,1344
itextview_link( View *view, Model *model, View *parent )itextview_link112,2732
itextview_reset( View *view )itextview_reset135,3297
itextview_scan( View *view )itextview_scan156,3768
itextview_class_init( iTextviewClass *class )itextview_class_init177,4244
itextview_edit_cb( Formula *formula, iTextview *itextview )itextview_edit_cb200,4762
itextview_activate_cb( Formula *formula, iTextview *itextview )itextview_activate_cb206,4880
itextview_enter_cb( Formula *formula, iTextview *itextview )itextview_enter_cb227,5467
itextview_leave_cb( Formula *formula, iTextview *itextview )itextview_leave_cb237,5692
itextview_init( iTextview *itextview )itextview_init246,5893
itextview_get_type( void )itextview_get_type267,6803
itextview_new( void )itextview_new290,7285

expr.h,1185
#define TYPE_EXPR TYPE_EXPR30,887
#define EXPR(EXPR31,923
#define EXPR_CLASS(EXPR_CLASS33,1001
#define IS_EXPR(IS_EXPR35,1090
#define IS_EXPR_CLASS(IS_EXPR_CLASS37,1165
#define EXPR_GET_CLASS(EXPR_GET_CLASS39,1247
struct _Expr {_Expr45,1464
	iContainer parent_object;parent_object49,1592
	Symbol *sym;		/* We are an expr for this symbol, scopewise */sym51,1620
	Row *row;		/* (optional) we have this display */row52,1683
	Compile *compile;	/* Our compiled code */compile54,1734
	GSList *static_links;	/* Static LinkExprs which reference us */static_links56,1778
	GSList *dynamic_links;	/* Dynamic LinkExprs which reference us */dynamic_links57,1843
	PElement root;		/* Pointer to value of this expr */root59,1911
	Imageinfo *imageinfo;imageinfo64,2087
	gboolean err;		/* TRUE if there is an error in this expr */err66,2111
	char *error_top;error_top67,2172
	char *error_sub;error_sub68,2190
typedef struct _ExprClass {_ExprClass71,2212
	iContainerClass parent_class;parent_class72,2240
	void (*new_value)( Expr *expr );new_value81,2364
} ExprClass;ExprClass82,2398
typedef void *(*map_expr_fn)( Expr *, void *, void * );map_expr_fn88,2497

plotpresent.h,926
#define TYPE_PLOTPRESENT TYPE_PLOTPRESENT30,915
#define PLOTPRESENT(PLOTPRESENT31,965
#define PLOTPRESENT_CLASS(PLOTPRESENT_CLASS33,1052
#define IS_PLOTPRESENT(IS_PLOTPRESENT35,1160
#define IS_PLOTPRESENT_CLASS(IS_PLOTPRESENT_CLASS36,1234
struct _Plotpresent {_Plotpresent39,1328
	GtkBin parent_class;parent_class40,1350
	Plotmodel *plotmodel;		/* Keep model parts of widgets here */plotmodel44,1391
	GtkWidget *canvas;canvas48,1473
	GogRenderer *grend;grend51,1517
	GogChart *gchart;gchart52,1538
	GogGraph *ggraph;ggraph53,1557
        GogPlot *gplot;gplot54,1576
	GogLegend *glegend;glegend55,1600
	GogGridLine *x_ggl;x_ggl56,1621
	GogGridLine *y_ggl;y_ggl57,1642
typedef struct _PlotpresentClass {_PlotpresentClass61,1694
	GtkBinClass parent_class;parent_class62,1729
	void (*mouse_move)( Plotpresent *, double, double );mouse_move69,1856
} PlotpresentClass;PlotpresentClass70,1910

itext.h,763
#define TYPE_ITEXT TYPE_ITEXT30,903
#define ITEXT(ITEXT31,941
#define ITEXT_CLASS(ITEXT_CLASS33,1022
#define IS_ITEXT(IS_ITEXT35,1114
#define IS_ITEXT_CLASS(IS_ITEXT_CLASS37,1191
#define ITEXT_GET_CLASS(ITEXT_GET_CLASS39,1275
struct _iText {_iText42,1371
	Heapmodel parent_class;parent_class43,1387
	VipsBuf value;			/* The value displayed as a [char] */value45,1413
	char *formula;			/* The formula we edit */formula46,1469
	char *formula_default;		/* Formula we inherit */formula_default47,1513
	VipsBuf decompile;		/* The value decompiled to a [char] */decompile48,1563
	gboolean edited;edited56,1840
typedef struct _iTextClass {_iTextClass59,1862
	HeapmodelClass parent_class;parent_class60,1891
} iTextClass;iTextClass64,1943

model.h,2105
	MODEL_SCROLL_TOP,MODEL_SCROLL_TOP35,1158
	MODEL_SCROLL_BOTTOMMODEL_SCROLL_BOTTOM36,1177
} ModelScrollPosition;ModelScrollPosition37,1198
typedef struct _ModelRename {_ModelRename41,1252
	char *old_name;old_name42,1282
	char *new_name;new_name43,1299
} ModelRename;ModelRename44,1316
typedef struct _ModelLoadState {_ModelLoadState48,1378
	char *filename;		/* Name we loaded from */filename49,1411
	xmlDoc *xdoc;		/* Document we load from */xdoc50,1455
	GSList *renames;	/* Rename table for this load context */renames61,1691
	int major;major65,1801
	int minor;minor66,1813
	int micro;micro67,1825
	char error_log_buffer[MAX_STRSIZE];error_log_buffer71,1872
	VipsBuf error_log;error_log72,1909
} ModelLoadState;ModelLoadState73,1929
#define TYPE_MODEL TYPE_MODEL75,1948
#define MODEL(MODEL76,1986
#define MODEL_CLASS(MODEL_CLASS78,2067
#define IS_MODEL(IS_MODEL80,2159
#define IS_MODEL_CLASS(IS_MODEL_CLASS82,2236
#define MODEL_GET_CLASS(MODEL_GET_CLASS84,2320
struct _Model {_Model87,2416
	iContainer parent;parent88,2432
	gboolean display;	/* This model should have a view */display92,2480
	int window_x, window_y;window_x97,2643
	int window_x, window_y;window_y97,2643
	int window_width, window_height;window_width98,2668
	int window_width, window_height;window_height98,2668
typedef struct _ModelClass {_ModelClass101,2706
	iContainerClass parent_class;parent_class102,2735
	View *(*view_new)( Model *model, View *parent );view_new114,3015
	void (*edit)( GtkWidget *, Model * );edit130,3340
	void (*scrollto)( Model *, ModelScrollPosition );scrollto131,3379
	void (*reset)( Model * );reset132,3430
	void (*layout)( Model * );layout133,3457
	xmlNode *(*save)( Model *, xmlNode * );save151,3807
	gboolean (*save_test)( Model * );save_test152,3848
	gboolean (*save_text)( Model *, iOpenFile * );save_text153,3883
	gboolean (*load)( Model *model, load154,3931
	gboolean (*load_text)( Model *model, Model *parent, iOpenFile * );load_text156,4023
	void (*empty)( Model * );empty157,4091
} ModelClass;ModelClass158,4118

error.c,1103
static LogClass *parent_class = NULL;parent_class36,927
ierror_print( Expr *expr, iError *ierror, gboolean *found )ierror_print39,980
ierror_show_all( iError *ierror )ierror_show_all52,1231
ierror_show_all_action_cb( GtkAction *action, iError *ierror )ierror_show_all_action_cb66,1502
unresolved_print_tool( Tool *tool, iError *ierror, gboolean *found )unresolved_print_tool72,1612
unresolved_print( Toolkit *kit, iError *ierror, gboolean *found )unresolved_print84,1876
unresolved_show_all( iError *ierror )unresolved_show_all92,2050
unresolved_show_all_action_cb( GtkAction *action, iError *ierror )unresolved_show_all_action_cb106,2354
static GtkActionEntry ierror_actions[] = {ierror_actions113,2478
static const char *ierror_menubar_ui_description =ierror_menubar_ui_description130,2931
ierror_class_init( iErrorClass *class )ierror_class_init153,3527
ierror_init( iError *ierror )ierror_init167,3920
ierror_get_type( void )ierror_get_type172,3963
ierror_link( iError *ierror, Toolkitgroup *kitg )ierror_link195,4371
ierror_new( Toolkitgroup *kitg )ierror_new210,4833

program.c,9019
	NAME_COLUMN,			/* Kit or tool name */NAME_COLUMN40,1027
	NAME_I18N_COLUMN,		/* Localised tool name */NAME_I18N_COLUMN41,1066
	TOOL_POINTER_COLUMN,		/* Pointer to tool */TOOL_POINTER_COLUMN42,1112
	KIT_POINTER_COLUMN,		/* Pointer to kit (if no tool) */KIT_POINTER_COLUMN43,1157
	N_COLUMNSN_COLUMNS44,1213
static iWindowClass *parent_class = NULL;parent_class47,1228
static GSList *program_all = NULL;program_all49,1271
static GtkWidget *program_menu = NULL;program_menu51,1307
program_get_selected( Program *program )program_get_selected54,1362
program_info( Program *program, VipsBuf *buf )program_info69,1591
my_strcmp( const char *a, const char *b )my_strcmp85,1983
program_refresh_trim( Program *program, GtkTreePath *path )program_refresh_trim100,2210
program_refresh_update( Program *program, GtkTreePath *path,program_refresh_update116,2577
program_refresh_tool( Tool *tool, Program *program, GtkTreePath *path )program_refresh_tool208,4896
program_refresh_kit( Toolkit *kit, Program *program, GtkTreePath *path )program_refresh_kit225,5269
program_title( Program *program )program_title248,5728
typedef struct _ProgramRowLookupInfo {_ProgramRowLookupInfo271,6376
	Program *program;program272,6415
	Model *model;model274,6435
	GtkTreeIter *return_iter;return_iter275,6450
	gboolean found;found276,6477
} ProgramRowLookupInfo;ProgramRowLookupInfo277,6494
program_row_lookup_sub( GtkTreeModel *model,program_row_lookup_sub280,6535
program_row_lookup( Program *program, Model *model, GtkTreeIter *return_iter )program_row_lookup304,7052
program_refresh_timeout( Program *program )program_refresh_timeout320,7426
program_refresh( Program *program )program_refresh399,9296
program_detach( Program *program )program_detach412,9602
program_find_reset( Program *program )program_find_reset429,9912
program_find_destroy_cb( Symbol *sym, Program *program )program_find_destroy_cb438,10107
program_find_note( Program *program, Symbol *sym, int start, int end )program_find_note444,10213
program_find_pos( Program *program, const char *text, int *start, int *end )program_find_pos457,10555
program_find_tool( Tool *tool, Program *program, gboolean *skipping )program_find_tool497,11310
program_find_toolkit( Toolkit *kit, Program *program, gboolean *skipping )program_find_toolkit537,12153
program_find( Program *program )program_find544,12359
program_destroy( GtkObject *object )program_destroy556,12576
program_edit_dia_done_cb( iWindow *iwnd, void *client, program_edit_dia_done_cb591,13356
program_edit_dia( Program *program, Tool *tool )program_edit_dia618,14031
program_edit_object_cb( GtkWidget *menu, Program *program )program_edit_object_cb644,14838
program_is_saveable( Model *model )program_is_saveable653,15084
program_save_object_cb( GtkWidget *menu, Program *program )program_save_object_cb671,15490
program_saveas_object_cb( GtkWidget *menu, Program *program ) program_saveas_object_cb686,15820
program_remove_object_cb( GtkWidget *menu, Program *program ) program_remove_object_cb701,16154
program_class_init( ProgramClass *class )program_class_init710,16352
program_kitgroup_changed( Model *model, Program *program )program_kitgroup_changed741,17100
program_kitgroup_destroy( Model *model, Program *program )program_kitgroup_destroy751,17278
program_init( Program *program )program_init766,17595
program_get_type( void )program_get_type798,18236
program_kit_destroy( Toolkit *kit, Program *program )program_kit_destroy823,18738
program_set_text( Program *program, const char *text, gboolean editable )program_set_text836,18969
program_set_text_tool( Program *program, Tool *tool )program_set_text_tool852,19316
program_tool_destroy( Tool *tool, Program *program )program_tool_destroy895,20127
program_select_kit_sub( Program *program, Toolkit *kit )program_select_kit_sub911,20453
program_select_kit( Program *program, Toolkit *kit )program_select_kit932,20886
program_select_tool( Program *program, Tool *tool )program_select_tool942,21101
program_get_text( Program *program )program_get_text962,21538
program_parse( Program *program )program_parse981,22037
program_tool_new_action_cb( GtkAction *action, Program *program )program_tool_new_action_cb1035,23429
program_toolkit_new_done_cb( iWindow *iwnd, void *client, program_toolkit_new_done_cb1048,23728
program_toolkit_new_action_cb( GtkAction *action, Program *program )program_toolkit_new_action_cb1088,24850
program_check_kit( Program *program )program_check_kit1108,25502
program_separator_new_action_cb( GtkAction *action, Program *program )program_separator_new_action_cb1121,25771
program_column_item_new_done_cb( iWindow *iwnd, void *client, program_column_item_new_done_cb1135,26075
program_column_item_new_action_cb( GtkAction *action, Program *program )program_column_item_new_action_cb1162,26825
program_program_new_action_cb( GtkAction *action, Program *program )program_program_new_action_cb1186,27520
program_workspace_new_action_cb( GtkAction *action, Program *program )program_workspace_new_action_cb1196,27715
program_load_file_fn( Filesel *filesel, program_load_file_fn1203,27885
program_load_file_cb( iWindow *iwnd, program_load_file_cb1219,28192
program_open_action_cb( GtkAction *action, Program *program )program_open_action_cb1237,28570
program_save_action_cb( GtkAction *action, Program *program )program_save_action_cb1253,29151
program_save_as_action_cb( GtkAction *action, Program *program )program_save_as_action_cb1262,29350
program_process_action_cb( GtkAction *action, Program *program )program_process_action_cb1271,29554
program_reload_menus_cb( iWindow *iwnd, program_reload_menus_cb1278,29730
program_reload_action_cb( GtkAction *action, Program *program )program_reload_action_cb1290,29931
program_cut_action_cb( GtkAction *action, Program *program )program_cut_action_cb1302,30296
program_copy( Program *program )program_copy1314,30739
program_copy_action_cb( GtkAction *action, Program *program )program_copy_action_cb1325,31084
program_paste_action_cb( GtkAction *action, Program *program )program_paste_action_cb1331,31189
program_delete_action_cb( GtkAction *action, Program *program )program_delete_action_cb1344,31644
program_select_all_action_cb( GtkAction *action, Program *program )program_select_all_action_cb1354,31980
program_deselect_all_action_cb( GtkAction *action, Program *program )program_deselect_all_action_cb1360,32130
program_remove_tool_action_cb( GtkAction *action, Program *program )program_remove_tool_action_cb1372,32551
program_remove_toolkit_action_cb( GtkAction *action, Program *program )program_remove_toolkit_action_cb1385,32886
program_find_done_cb( iWindow *iwnd, void *client, program_find_done_cb1394,33093
program_find_action_cb( GtkAction *action, Program *program )program_find_action_cb1450,34497
program_find_again_action_cb( GtkAction *action, Program *program )program_find_again_action_cb1478,35528
program_goto_done_cb( iWindow *iwnd, void *client, program_goto_done_cb1498,36006
program_goto_action_cb( GtkAction *action, Program *program )program_goto_action_cb1538,36925
program_info_action_cb( GtkAction *action, Program *program )program_info_action_cb1570,37887
program_trace_action_cb( GtkAction *action, Program *program )program_trace_action_cb1582,38205
program_errorreport_action_cb( GtkAction *action, Program *program )program_errorreport_action_cb1588,38306
program_tool_help_action_cb( GtkAction *action, Program *program )program_tool_help_action_cb1603,38593
static GtkActionEntry program_actions[] = {program_actions1636,39443
static const char *program_menubar_ui_description =program_menubar_ui_description1774,43100
program_select( Program *program, Model *model )program_select1830,44788
program_text_changed( GtkTextBuffer *buffer, Program *program )program_text_changed1848,45166
program_select_row( Program *program, GtkTreeIter *iter )program_select_row1859,45364
program_row_collapsed_cb( GtkTreeView *tree, program_row_collapsed_cb1879,45781
program_selection_changed_cb( GtkTreeSelection *select, Program *program )program_selection_changed_cb1902,46382
program_tree_event_cb( GtkTreeView *tree, GdkEvent *ev, Program *program )program_tree_event_cb1925,46912
program_row_inserted_cb( GtkTreeModel *treemodel, program_row_inserted_cb1950,47555
program_row_deleted_cb( GtkTreeModel *treemodel, program_row_deleted_cb2006,48959
program_edit_map_cb( GtkWidget *widget, Program *program )program_edit_map_cb2044,50152
program_tabs_new( void )program_tabs_new2087,51507
program_text_new( void )program_text_new2103,51820
program_build( Program *program, GtkWidget *vbox )program_build2121,52245
program_popdown( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys )program_popdown2238,56424
program_link( Program *program, Toolkitgroup *kitg )program_link2252,56816
program_new( Toolkitgroup *kitg )program_new2274,57597

graphicview.c,421
static ViewClass *parent_class = NULL;parent_class36,959
graphicview_destroy( GtkObject *object )graphicview_destroy39,1011
graphicview_link( View *view, Model *model, View *parent )graphicview_link55,1312
graphicview_class_init( GraphicviewClass *class )graphicview_class_init71,1669
graphicview_init( Graphicview *graphicview )graphicview_init84,1978
graphicview_get_type( void )graphicview_get_type90,2064

plotstatus.h,861
#define TYPE_PLOTSTATUS TYPE_PLOTSTATUS30,907
#define PLOTSTATUS(PLOTSTATUS31,955
#define PLOTSTATUS_CLASS(PLOTSTATUS_CLASS32,1036
#define IS_PLOTSTATUS(IS_PLOTSTATUS34,1141
#define IS_PLOTSTATUS_CLASS(IS_PLOTSTATUS_CLASS35,1213
struct _Plotstatus {_Plotstatus38,1305
	GtkFrame parent_class;parent_class39,1326
	Plotmodel *plotmodel;plotmodel41,1351
	GtkWidget *top;		/* Top label */top43,1375
	GtkWidget *pos;		/* Position */pos44,1409
	GtkWidget *hb;		/* Band element hbox */hb45,1442
	GtkWidget *mag;		/* Magnification display */mag46,1483
	GtkWidget **label;	/* A label for displaying each series */label48,1530
	int columns;		/* Last number of columns we saw */columns49,1591
typedef struct _PlotstatusClass {_PlotstatusClass52,1646
	GtkFrameClass parent_class;parent_class53,1680
} PlotstatusClass;PlotstatusClass57,1731

toggle.c,367
static ClassmodelClass *parent_class = NULL;parent_class36,949
toggle_view_new( Model *model, View *parent )toggle_view_new39,1009
static ClassmodelMember toggle_members[] = {toggle_members46,1127
toggle_class_init( ToggleClass *class )toggle_class_init56,1429
toggle_init( Toggle *toggle )toggle_init79,1922
toggle_get_type( void )toggle_get_type87,2050

number.h,446
#define TYPE_NUMBER TYPE_NUMBER30,905
#define NUMBER(NUMBER31,945
#define NUMBER_CLASS(NUMBER_CLASS32,1014
#define IS_NUMBER(IS_NUMBER34,1107
#define IS_NUMBER_CLASS(IS_NUMBER_CLASS35,1171
struct _Number {_Number38,1255
	Classmodel parent_class;parent_class39,1272
	double value;value43,1322
typedef struct _NumberClass {_NumberClass46,1341
	ClassmodelClass parent_class;parent_class47,1371
} NumberClass;NumberClass51,1424

itextview.h,518
#define TYPE_ITEXTVIEW TYPE_ITEXTVIEW30,906
#define ITEXTVIEW(ITEXTVIEW31,952
#define ITEXTVIEW_CLASS(ITEXTVIEW_CLASS32,1030
#define IS_ITEXTVIEW(IS_ITEXTVIEW34,1132
#define IS_ITEXTVIEW_CLASS(IS_ITEXTVIEW_CLASS35,1202
typedef struct _iTextview {_iTextview38,1292
	View view;view39,1320
        Formula *formula;formula43,1351
} iTextview;iTextview44,1377
typedef struct _iTextviewClass {_iTextviewClass46,1391
	ViewClass parent_class;parent_class47,1424
} iTextviewClass;iTextviewClass51,1471

error.h,476
#define TYPE_IERROR TYPE_IERROR30,914
#define IERROR(IERROR31,954
#define IERROR_CLASS(IERROR_CLASS32,1023
#define IS_IERROR(IS_IERROR34,1116
#define IS_IERROR_CLASS(IS_IERROR_CLASS35,1180
struct _iError {_iError38,1264
	Log parent_class;parent_class39,1281
	Toolkitgroup *kitg;	/* Where we search for link ierrors */kitg41,1301
typedef struct _iErrorClass {_iErrorClass44,1365
	LogClass parent_class;parent_class45,1395
} iErrorClass;iErrorClass49,1441

action.c,3592
const char *operator_table[] = {operator_table34,944
const int noperator_table = IM_NUMBER( operator_table );noperator_table79,2280
action_boperror( Reduce *rc, Compile *compile, const char *str, action_boperror84,2372
action_nomerror( Reduce *rc, Compile *compile, PElement *a, PElement *b )action_nomerror122,3370
action_uoperror( Reduce *rc, Compile *compile, action_uoperror170,4886
action_set_range( Reduce *rc, double mn, double mx, PElement *a, PElement *out )action_set_range202,5719
action_proc_eor( Reduce *rc, Compile *compile,action_proc_eor228,6111
action_proc_bor( Reduce *rc, Compile *compile,action_proc_bor261,7054
action_proc_band( Reduce *rc, Compile *compile,action_proc_band290,7879
action_proc_dot_add_link( Expr *expr, Symbol *child )action_proc_dot_add_link317,8687
action_proc_dot_tag( PElement *b, char *tag, int n )action_proc_dot_tag323,8802
action_proc_dot( Reduce *rc, Compile *compile,action_proc_dot336,9066
action_proc_lesseq( Reduce *rc, Compile *compile,action_proc_lesseq432,11463
action_proc_less( Reduce *rc, Compile *compile,action_proc_less466,12594
action_node_equal( Reduce *rc, HeapNode *a, HeapNode *b )action_node_equal504,13828
action_image_equal( Reduce *rc, Imageinfo *a, Imageinfo *b )action_image_equal553,14738
action_string_equal( Reduce *rc, PElement *p1, PElement *p2 )action_string_equal616,16034
action_element_equal( Reduce *rc, PElement *p1, PElement *p2 )action_element_equal630,16399
action_proc_equal( Reduce *rc, Compile *compile,action_proc_equal714,18098
action_proc_notequal( Reduce *rc, Compile *compile,action_proc_notequal754,19096
action_proc_join_sub( Reduce *rc, PElement *pe, action_proc_join_sub790,20033
action_proc_join( Reduce *rc, Compile *compile,action_proc_join802,20237
action_proc_index( Reduce *rc, Compile *compile,action_proc_index832,21032
action_proc_exp( Reduce *rc, Compile *compile,action_proc_exp859,21651
action_proc_lshift( Reduce *rc, Compile *compile,action_proc_lshift881,22304
action_proc_rshift( Reduce *rc, Compile *compile,action_proc_rshift904,22886
action_proc_rem( Reduce *rc, Compile *compile,action_proc_rem927,23467
action_proc_div( Reduce *rc, Compile *compile,action_proc_div957,24267
action_proc_mul( Reduce *rc, Compile *compile,action_proc_mul1032,26295
action_proc_sub( Reduce *rc, Compile *compile,action_proc_sub1084,27909
action_proc_add( Reduce *rc, Compile *compile,action_proc_add1133,29411
action_proc_bop_strict( Reduce *rc, Compile *compile,action_proc_bop_strict1189,31199
action_proc_uop( Reduce *rc, Compile *compile,action_proc_uop1322,33973
action_proc_construct_sub( Reduce *rc, PElement *pe,action_proc_construct_sub1599,40301
action_proc_construct( Reduce *rc, action_proc_construct1614,40664
action_proc_class_binary_sub( Reduce *rc, PElement *pe,action_proc_class_binary_sub1646,41465
action_proc_class_binary( Reduce *rc, Compile *compile,action_proc_class_binary1668,41958
action_proc_class_binary2( Reduce *rc, Compile *compile,action_proc_class_binary21704,43010
action_landlor( Reduce *rc, Compile *compile, action_landlor1738,44013
action_if( Reduce *rc, Compile *compile, action_if1810,45757
action_proc_bop( Reduce *rc, Compile *compile, BinOp bop, HeapNode **arg )action_proc_bop1882,47436
action_proc_class_unary_sub( Reduce *rc, PElement *pe,action_proc_class_unary_sub1944,48762
action_proc_class_unary( Reduce *rc, Compile *compile, action_proc_class_unary1962,49115
action_dispatch( Reduce *rc, Compile *compile, ReduceFunction rfn, action_dispatch1998,50195

program.h,1953
#define TYPE_PROGRAM TYPE_PROGRAM30,910
#define PROGRAM(PROGRAM31,952
#define PROGRAM_CLASS(PROGRAM_CLASS32,1024
#define IS_PROGRAM(IS_PROGRAM34,1120
#define IS_PROGRAM_CLASS(IS_PROGRAM_CLASS35,1186
struct _Program {_Program38,1272
	iWindow parent_class;parent_class39,1290
	Toolkitgroup *kitg;kitg43,1350
	GtkWidget *text;text45,1372
	gboolean dirty;		/* Has the text changed since we set it */dirty46,1390
	guint text_hash;	/* Hash of the last text we set */text_hash47,1451
	GtkWidget *tree;tree48,1504
	GtkWidget *pane;pane49,1522
	int pane_position;pane_position50,1540
	guint refresh_timeout;	/* Timeout for UI refresh */refresh_timeout51,1560
	guint select_changed_sid;	select_changed_sid52,1613
	guint row_inserted_sid;	row_inserted_sid53,1641
	guint row_deleted_sid;	row_deleted_sid54,1667
	Toolkit *to_kit;to_kit58,1722
	int to_pos;to_pos59,1740
	GtkTreeStore *store;store63,1788
	guint kitgroup_changed_sid;	kitgroup_changed_sid67,1853
	guint kitgroup_destroy_sid;		kitgroup_destroy_sid68,1883
	Toolkit *kit;		kit72,1942
	guint kit_destroy_sid;	kit_destroy_sid73,1959
	Tool *tool;	tool77,2013
	int pos;		/* Position of tool in kit */pos78,2027
	guint tool_destroy_sid;	tool_destroy_sid79,2068
	char *search;search83,2129
	gboolean csens;		/* Case sensitive */csens84,2144
	gboolean fromtop;	/* Start search from beginning again */fromtop85,2183
	gboolean regexp;	/* Interpret as regexp */regexp87,2261
	GRegex *comp;		/* Compiled pattern */comp88,2305
	Symbol *find_sym;	/* Tool containing search point */find_sym93,2402
	size_t find_start;	/* Offset into tool text of found string */find_start94,2456
	size_t find_end;	find_end95,2520
	guint find_sym_destroy_sid;/* Watch for find_sym death here */find_sym_destroy_sid96,2539
typedef struct _ProgramClass {_ProgramClass99,2607
	iWindowClass parent_class;parent_class100,2638
} ProgramClass;ProgramClass104,2688

graphicview.h,573
#define TYPE_GRAPHICVIEW TYPE_GRAPHICVIEW31,987
#define GRAPHICVIEW(GRAPHICVIEW32,1037
#define GRAPHICVIEW_CLASS(GRAPHICVIEW_CLASS34,1124
#define IS_GRAPHICVIEW(IS_GRAPHICVIEW36,1232
#define IS_GRAPHICVIEW_CLASS(IS_GRAPHICVIEW_CLASS37,1306
typedef struct _Graphicview {_Graphicview40,1400
	View view;view41,1430
	Subcolumnview *sview;		/* Enclosing subc. */sview45,1470
} Graphicview;Graphicview46,1516
typedef struct _GraphicviewClass {_GraphicviewClass48,1532
	ViewClass parent_class;parent_class49,1567
} GraphicviewClass;GraphicviewClass53,1614

toggle.h,532
#define TYPE_TOGGLE TYPE_TOGGLE30,904
#define TOGGLE(TOGGLE31,944
#define TOGGLE_CLASS(TOGGLE_CLASS33,1028
#define IS_TOGGLE(IS_TOGGLE35,1123
#define IS_TOGGLE_CLASS(IS_TOGGLE_CLASS37,1202
#define TOGGLE_GET_CLASS(TOGGLE_GET_CLASS39,1288
typedef struct _Toggle {_Toggle42,1387
	Classmodel parent_class;parent_class43,1412
	gboolean value;value47,1466
} Toggle;Toggle48,1483
typedef struct _ToggleClass {_ToggleClass50,1494
	ClassmodelClass parent_class;parent_class51,1524
} ToggleClass;ToggleClass55,1577

vobject.c,1178
static GtkVBoxClass *parent_class = NULL;parent_class41,1065
static Queue *vobject_dirty = NULL;vobject_dirty43,1108
static gint vobject_idle_running = 0;vobject_idle_running45,1145
vobject_refresh_dequeue( vObject *vobject )vobject_refresh_dequeue50,1231
vobject_idle_refresh( gpointer user_data )vobject_idle_refresh67,1571
vobject_idle_refresh( gpointer user_data )vobject_idle_refresh113,2603
vobject_refresh_queue( vObject *vobject )vobject_refresh_queue143,3312
vobject_iobject_changed( iObject *iobject, vObject *vobject )vobject_iobject_changed170,3930
vobject_iobject_destroy( iObject *iobject, vObject *vobject )vobject_iobject_destroy185,4288
vobject_link( vObject *vobject, iObject *iobject )vobject_link198,4577
vobject_destroy( GtkObject *object )vobject_destroy215,5032
vobject_finalize( GObject *gobject )vobject_finalize239,5574
vobject_real_refresh( vObject *vobject )vobject_real_refresh249,5785
vobject_class_init( vObjectClass *class )vobject_class_init254,5843
vobject_init( vObject *vobject )vobject_init278,6307
vobject_get_type( void )vobject_get_type294,6578
vobject_refresh( vObject *vobject )vobject_refresh320,7189

action.h,183
typedef void (*ActionFn)( Reduce *, Compile *,ActionFn6,60
typedef void (*ReduceFunction)( Reduce *, PElement * );ReduceFunction11,225
#define OPERATOR_NAME(OPERATOR_NAME13,282

imagepresent.c,4877
const int imagepresent_snap_threshold = 10;imagepresent_snap_threshold42,1031
iWindowShape imagepresent_cursors[IMAGEMODEL_LAST] = {imagepresent_cursors46,1118
typedef struct _ImagepresentKeymap { _ImagepresentKeymap63,1773
	guint keyval;keyval64,1811
	int zoom;zoom65,1826
} ImagepresentKeymap; ImagepresentKeymap66,1837
static ImagepresentKeymap imagepresent_keymap[] = {imagepresent_keymap68,1861
static GtkBinClass *parent_class = NULL;parent_class82,2072
imagepresent_destroy( GtkObject *object )imagepresent_destroy85,2126
imagepresent_size_request( GtkWidget *widget, GtkRequisition *requisition )imagepresent_size_request113,2754
imagepresent_size_allocate( GtkWidget *widget, GtkAllocation *allocation )imagepresent_size_allocate138,3394
imagepresent_expose_event( GtkWidget *widget, GdkEventExpose *event )imagepresent_expose_event166,4188
imagepresent_realize( GtkWidget *widget )imagepresent_realize197,4970
imagepresent_class_init( ImagepresentClass *class )imagepresent_class_init216,5479
imagepresent_hruler_rethink( Imagepresent *ip )imagepresent_hruler_rethink242,6132
imagepresent_vruler_rethink( Imagepresent *ip )imagepresent_vruler_rethink277,6915
imagepresent_zoom_in( Imagepresent *ip, int x, int y )imagepresent_zoom_in314,7776
imagepresent_zoom_in_centre( Imagepresent *ip )imagepresent_zoom_in_centre325,8028
imagepresent_zoom_out( Imagepresent *ip )imagepresent_zoom_out335,8251
imagepresent_scroll_event_cb( GtkWidget *widget, imagepresent_scroll_event_cb353,8718
imagepresent_hadj_changed_cb( GtkAdjustment *adj, Imagepresent *ip )imagepresent_hadj_changed_cb405,9957
imagepresent_vadj_changed_cb( GtkAdjustment *adj, Imagepresent *ip )imagepresent_vadj_changed_cb426,10491
imagepresent_floating_new( Imagepresent *ip, imagepresent_floating_new447,11025
imagepresent_hruler_event( GtkWidget *widget, GdkEvent *ev, Imagepresent *ip )imagepresent_hruler_event472,11677
imagepresent_vruler_event( GtkWidget *widget, GdkEvent *ev, Imagepresent *ip )imagepresent_vruler_event527,12773
	Imagepresent *ip;ip578,13733
	int x;			/* Start point */x580,13753
	int y;y581,13781
	int off_x;		/* Current snap offset */off_x582,13789
	int off_y;off_y583,13828
	int best_x;		/* 'Closeness' of best snap so far */best_x584,13840
	int best_y;best_y585,13892
} ImagepresentSnap;ImagepresentSnap586,13905
imagepresent_snap_sub( Regionview *regionview, imagepresent_snap_sub589,13940
imagepresent_snap( Imagepresent *ip, ImagepresentSnap *snap )imagepresent_snap631,14850
imagepresent_snap_point( Imagepresent *ip, int x, int y, int *sx, int *sy )imagepresent_snap_point649,15215
imagepresent_snap_rect( Imagepresent *ip, Rect *in, Rect *out )imagepresent_snap_rect666,15487
imagepresent_set_position( Imagepresent *ip, int x, int y )imagepresent_set_position721,16841
imagepresent_set_mag_pos( Imagepresent *ip, int mag, int ix, int iy )imagepresent_set_mag_pos740,17427
imagepresent_zoom_to( Imagepresent *ip, int mag )imagepresent_zoom_to777,18563
imagepresent_left_press( Imagepresent *ip, GdkEvent *ev, int x, int y )imagepresent_left_press798,19098
imagepresent_paint_stop( Imagepresent *ip, int x, int y )imagepresent_paint_stop920,22006
imagepresent_left_release( Imagepresent *ip, GdkEvent *ev, int x, int y )imagepresent_left_release1040,24767
imagepresent_button_motion( Imagepresent *ip, GdkEvent *ev )imagepresent_button_motion1146,27448
imagepresent_event_cb( GtkWidget *widget, GdkEvent *ev, Imagepresent *ip )imagepresent_event_cb1231,29251
imagepresent_key_press_event_cb( GtkWidget *widget, GdkEventKey *event, imagepresent_key_press_event_cb1343,31341
imagepresent_realize_id_cb( Imagedisplay *id )imagepresent_realize_id_cb1467,34496
imagepresent_rulers_mm_cb( GtkWidget *wid, GtkWidget *host, imagepresent_rulers_mm_cb1475,34695
imagepresent_rulers_offset_cb( GtkWidget *wid, GtkWidget *host, imagepresent_rulers_offset_cb1484,34934
imagepresent_ruler_hide_cb( GtkWidget *wid, GtkWidget *host, Imagepresent *ip )imagepresent_ruler_hide_cb1493,35181
imagepresent_init( Imagepresent *ip )imagepresent_init1499,35327
imagepresent_get_type( void )imagepresent_get_type1637,40154
imagepresent_imagemodel_changed_cb( Imagemodel *imagemodel, Imagepresent *ip )imagepresent_imagemodel_changed_cb1664,40755
imagepresent_imagemodel_imageinfo_changed_cb( Imagemodel *imagemodel, imagepresent_imagemodel_imageinfo_changed_cb1679,41208
imagepresent_link( Imagepresent *ip, Imagemodel *imagemodel )imagepresent_link1689,41488
imagepresent_new( Imagemodel *imagemodel )imagepresent_new1710,42141
imagepresent_scroll_cb( Imagepresent *ip )imagepresent_scroll_cb1722,42349
imagepresent_scroll_start( Imagepresent *ip, int u, int v )imagepresent_scroll_start1732,42535
imagepresent_scroll_stop( Imagepresent *ip )imagepresent_scroll_stop1743,42740

plotwindow.c,1246
static FloatwindowClass *parent_class = NULL;parent_class36,960
plotwindow_destroy( GtkObject *object )plotwindow_destroy39,1019
plotwindow_class_init( PlotwindowClass *class )plotwindow_class_init60,1429
plotwindow_init( Plotwindow *plotwindow )plotwindow_init76,1700
plotwindow_get_type( void )plotwindow_get_type86,1865
plotwindow_refresh_title( Plotwindow *plotwindow )plotwindow_refresh_title109,2305
plotwindow_changed_cb( Plotmodel *plotmodel, Plotwindow *plotwindow )plotwindow_changed_cb136,2930
plotwindow_mouse_move_cb( Plotpresent *plotpresent, plotwindow_mouse_move_cb151,3283
plotwindow_show_status_action_cb( GtkToggleAction *action, plotwindow_show_status_action_cb158,3450
static GtkToggleActionEntry plotwindow_toggle_actions[] = {plotwindow_toggle_actions165,3632
static const char *plotwindow_menubar_ui_description =plotwindow_menubar_ui_description172,3824
plotwindow_build( Plotwindow *plotwindow, GtkWidget *vbox, Plot *plot )plotwindow_build192,4331
plotwindow_popdown( iWindow *iwnd, void *client,plotwindow_popdown271,6833
plotwindow_link( Plotwindow *plotwindow, Plot *plot, GtkWidget *parent )plotwindow_link287,7252
plotwindow_new( Plot *plot, GtkWidget *parent )plotwindow_new302,7796

gtksheettypebuiltins.c,272
#define GTKSHEET_ENABLE_BROKENGTKSHEET_ENABLE_BROKEN4,3
gtk_sheet_attr_type_get_type (void)gtk_sheet_attr_type_get_type9,106
gtk_sheet_state_get_type (void)gtk_sheet_state_get_type29,903
gtk_sheet_border_flags_get_type (void)gtk_sheet_border_flags_get_type45,1446

managedfile.c,563
static ManagedClass *parent_class = NULL;parent_class36,953
managedfile_dispose( GObject *gobject )managedfile_dispose39,1008
managedfile_info( iObject *iobject, VipsBuf *buf )managedfile_info54,1326
managedfile_class_init( ManagedfileClass *class )managedfile_class_init68,1770
managedfile_init( Managedfile *managedfile )managedfile_init81,2090
managedfile_get_type( void )managedfile_get_type91,2254
managedfile_new( Heap *heap, const char *filename )managedfile_new116,2810
managedfile_getc( Managedfile *managedfile )managedfile_getc136,3240

vobject.h,757
#define TYPE_VOBJECT TYPE_VOBJECT31,971
#define VOBJECT(VOBJECT32,1013
#define VOBJECT_CLASS(VOBJECT_CLASS33,1085
#define IS_VOBJECT(IS_VOBJECT35,1181
#define IS_VOBJECT_CLASS(IS_VOBJECT_CLASS36,1247
#define VOBJECT_GET_CLASS(VOBJECT_GET_CLASS38,1332
struct _vObject {_vObject41,1428
	GtkVBox vbox;vbox42,1446
	iObject *iobject;		/* iObject we are watching */iobject46,1489
	guint changed_sid;		/* Signals we use to watch model */changed_sid47,1539
	guint destroy_sid;destroy_sid48,1596
	gboolean dirty;			/* In need of refreshment */dirty50,1617
typedef struct _vObjectClass {_vObjectClass53,1669
	GtkVBoxClass parent_class;parent_class54,1700
	void (*refresh)( vObject * );refresh62,1826
} vObjectClass;vObjectClass63,1857

matrix.c,2114
static ClassmodelClass *parent_class = NULL;parent_class36,930
matrix_finalize( GObject *gobject )matrix_finalize39,988
matrix_value_resize( MatrixValue *value, int width, int height )matrix_value_resize62,1407
typedef struct _MatrixEdit {_MatrixEdit95,2104
	iDialog *idlg;idlg96,2133
	Matrix *matrix;matrix98,2150
	GtkWidget *width;width100,2168
	GtkWidget *height;height101,2187
	GtkWidget *display;display102,2207
} MatrixEdit;MatrixEdit103,2228
matrix_done_cb( iWindow *iwnd, void *client, matrix_done_cb109,2292
matrix_buildedit( iDialog *idlg, GtkWidget *work, MatrixEdit *eds )matrix_buildedit140,3086
matrix_view_new( Model *model, View *parent )matrix_view_new174,4139
matrix_edit( GtkWidget *parent, Model *model )matrix_edit182,4265
matrix_graphic_save( Classmodel *classmodel, matrix_graphic_save208,5068
matrix_graphic_replace( Classmodel *classmodel, matrix_graphic_replace230,5543
static ClassmodelMember matrix_members[] = {matrix_members260,6270
matrix_class_init( MatrixClass *class )matrix_class_init279,6956
matrix_init( Matrix *matrix )matrix_init312,7807
matrix_get_type( void )matrix_get_type330,8166
matrix_select( Matrix *matrix, int left, int top, int width, int height )matrix_select355,8686
matrix_deselect( Matrix *matrix )matrix_deselect390,9588
matrix_guess_display( const char *fname )matrix_guess_display411,9960
matrix_dmask_to_ip( DOUBLEMASK *dmask, VipsBuf *buf )matrix_dmask_to_ip439,10598
matrix_dmask_to_heap( Heap *heap, DOUBLEMASK *dmask, PElement *out )matrix_dmask_to_heap470,11359
matrix_imask_to_dmask( INTMASK *imask )matrix_imask_to_dmask501,12245
matrix_dmask_to_imask( DOUBLEMASK *dmask )matrix_dmask_to_imask523,12660
matrix_imask_to_heap( Heap *heap, INTMASK *imask, PElement *out )matrix_imask_to_heap545,13086
matrix_ip_to_dmask( PElement *root )matrix_ip_to_dmask563,13446
matrix_ip_to_imask( PElement *root )matrix_ip_to_imask609,14437
matrix_model_to_dmask( Matrix *matrix )matrix_model_to_dmask626,14721
matrix_dmask_to_model( Matrix *matrix, DOUBLEMASK *dmask )matrix_dmask_to_model646,15156

imagepresent.h,1665
#define TYPE_IMAGEPRESENT TYPE_IMAGEPRESENT30,901
#define IMAGEPRESENT(IMAGEPRESENT31,953
#define IMAGEPRESENT_CLASS(IMAGEPRESENT_CLASS33,1055
#define IS_IMAGEPRESENT(IS_IMAGEPRESENT36,1172
#define IS_IMAGEPRESENT_CLASS(IS_IMAGEPRESENT_CLASS38,1263
#define IMAGEPRESENT_GET_CLASS(IMAGEPRESENT_GET_CLASS40,1361
struct _Imagepresent {_Imagepresent46,1533
	GtkBin parent_object;parent_object47,1556
	Imagemodel *imagemodel;		/* Keep model parts of widgets here */imagemodel51,1598
	Imagedisplay *id;		/* Image we display */id55,1686
	GtkScrolledWindow *swin;swin56,1729
	GtkAdjustment *hadj;hadj57,1755
	GtkAdjustment *vadj;vadj58,1777
	GtkHRuler *hrule;		/* Rulers */hrule59,1799
	GtkVRuler *vrule;vrule60,1832
	GtkEventBox *heb;		/* EventBoxes holding rulers */heb61,1851
	GtkEventBox *veb;veb62,1903
	iWindowCursorContext *cntxt;cntxt63,1922
	GtkWidget *ruler_menu;ruler_menu64,1952
	guint dx, dy;		/* Drag start position */dx68,2001
	guint dx, dy;		/* Drag start position */dy68,2001
	int last_x, last_y;last_x72,2097
	int last_x, last_y;last_y72,2097
	gboolean inside;inside73,2118
	guint scroll_tid;scroll_tid77,2171
	int u, v;u78,2190
	int u, v;v78,2190
	Regionview *regionview;	/* region rubberband display */regionview82,2226
	Rect floating;		/* rubberband area */floating83,2283
	int paint_last_x;paint_last_x87,2348
	int paint_last_y;paint_last_y88,2367
	GSList *regionviews;regionviews92,2453
	Regionview *grabbed;grabbed97,2605
typedef struct _ImagepresentClass {_ImagepresentClass102,2655
	GtkBinClass parent_class;parent_class105,2712
} ImagepresentClass;ImagepresentClass106,2739

plotwindow.h,615
#define TYPE_PLOTWINDOW TYPE_PLOTWINDOW30,909
#define PLOTWINDOW(PLOTWINDOW31,957
#define PLOTWINDOW_CLASS(PLOTWINDOW_CLASS32,1038
#define IS_PLOTWINDOW(IS_PLOTWINDOW34,1143
#define IS_PLOTWINDOW_CLASS(IS_PLOTWINDOW_CLASS35,1215
struct _Plotwindow {_Plotwindow38,1307
	Floatwindow parent_class;parent_class39,1328
	Plotmodel *plotmodel;plotmodel43,1385
	Plotstatus *plotstatus;plotstatus47,1427
	Plotpresent *plotpresent;plotpresent48,1452
typedef struct _PlotwindowClass {_PlotwindowClass51,1483
	FloatwindowClass parent_class;parent_class52,1517
} PlotwindowClass;PlotwindowClass56,1571

parse.y,961
select: select191,4551
prhs: prhs216,5018
main: main225,5097
single_definition: single_definition230,5152
directive: directive239,5279
toplevel_definition: toplevel_definition279,6097
definition: definition292,6343
params_plus_rhs: params_plus_rhs390,8974
params: params441,10095
body : body484,11183
crhs: crhs493,11259
rhs: rhs538,12113
locals:	locals547,12250
optsemi: optsemi553,12308
deflist: deflist558,12358
cexprlist: cexprlist571,12510
expr: expr580,12684
lambda:lambda616,13426
list_expression: list_expression664,14557
frompred_list: frompred_list746,16759
generator:generator753,16837
frompred:frompred776,17491
comma_list: comma_list792,17862
binop: binop804,18164
signed: signed905,20928
unsigned: unsigned910,20976
uop: uop915,21022
simple_pattern:simple_pattern962,22524
leaf_pattern:leaf_pattern986,23031
complex_pattern:complex_pattern998,23249
list_pattern:list_pattern1008,23441

conversionview.c,1578
static GtkEventBoxClass *parent_class = NULL;parent_class36,971
conversionview_destroy( GtkObject *object )conversionview_destroy39,1030
conversionview_findmaxmin( Imagemodel *imagemodel, double *min, double *max )conversionview_findmaxmin57,1379
conversionview_scale_cb( GtkWidget *wid, Conversionview *cv )conversionview_scale_cb76,1894
conversionview_falsecolour_cb( GtkWidget *wid, Conversionview *cv )conversionview_falsecolour_cb102,2595
conversionview_interpret_cb( GtkWidget *wid, Conversionview *cv )conversionview_interpret_cb112,2861
conversionview_reset_cb( GtkWidget *wid, Conversionview *cv )conversionview_reset_cb122,3118
conversionview_set_default_cb( GtkWidget *wid, Conversionview *cv )conversionview_set_default_cb143,3571
conversionview_hide_cb( GtkWidget *wid, Conversionview *cv )conversionview_hide_cb156,3860
conversionview_class_init( ConversionviewClass *class )conversionview_class_init164,4027
conversionview_scale_change_cb( Tslider *tslider, Conversionview *cv )conversionview_scale_change_cb183,4353
conversionview_offset_change_cb( Tslider *tslider, Conversionview *cv )conversionview_offset_change_cb196,4658
conversionview_init( Conversionview *cv )conversionview_init207,4923
conversionview_get_type( void )conversionview_get_type285,7554
conversionview_changed_cb( Imagemodel *imagemodel, Conversionview *cv )conversionview_changed_cb311,8128
conversionview_link( Conversionview *cv, Imagemodel *imagemodel )conversionview_link339,8907
conversionview_new( Imagemodel *imagemodel )conversionview_new349,9164

gtksheettypebuiltins.h,267
#define __GTKSHEET_TYPE_BUILTINS_H____GTKSHEET_TYPE_BUILTINS_H__5,78
#define GTK_TYPE_SHEET_ATTR_TYPE GTK_TYPE_SHEET_ATTR_TYPE12,242
#define GTK_TYPE_SHEET_STATE GTK_TYPE_SHEET_STATE14,347
#define GTK_TYPE_SHEET_BORDER_FLAGS GTK_TYPE_SHEET_BORDER_FLAGS16,451

managedfile.h,585
#define TYPE_MANAGEDFILE TYPE_MANAGEDFILE30,913
#define MANAGEDFILE(MANAGEDFILE31,963
#define MANAGEDFILE_CLASS(MANAGEDFILE_CLASS33,1062
#define IS_MANAGEDFILE(IS_MANAGEDFILE36,1176
#define IS_MANAGEDFILE_CLASS(IS_MANAGEDFILE_CLASS38,1265
#define MANAGEDFILE_GET_CLASS(MANAGEDFILE_GET_CLASS40,1361
struct _Managedfile {_Managedfile44,1479
	Managed parent_object;parent_object45,1501
	iOpenFile *file;file47,1526
typedef struct _ManagedfileClass {_ManagedfileClass50,1548
	ManagedClass parent_class;parent_class51,1583
} ManagedfileClass;ManagedfileClass53,1612

matrix.h,1155
#define TYPE_MATRIX TYPE_MATRIX30,897
#define MATRIX(MATRIX31,937
#define MATRIX_CLASS(MATRIX_CLASS33,1021
#define IS_MATRIX(IS_MATRIX35,1116
#define IS_MATRIX_CLASS(IS_MATRIX_CLASS37,1195
#define MATRIX_GET_CLASS(MATRIX_GET_CLASS39,1281
	MATRIX_DISPLAY_TEXT = 0,	/* Set of text widgets */MATRIX_DISPLAY_TEXT45,1458
	MATRIX_DISPLAY_SLIDER,		/* Set of sliders */MATRIX_DISPLAY_SLIDER46,1510
	MATRIX_DISPLAY_TOGGLE,		/* Set of 3 value toggles */MATRIX_DISPLAY_TOGGLE47,1556
	MATRIX_DISPLAY_TEXT_SCALE_OFFSET,/* Text, with scale/offset widgets */MATRIX_DISPLAY_TEXT_SCALE_OFFSET48,1610
	MATRIX_DISPLAY_LASTMATRIX_DISPLAY_LAST49,1682
} MatrixDisplayType;MatrixDisplayType50,1703
typedef struct _Matrix {_Matrix52,1725
	Classmodel model;model53,1750
	MatrixValue value;value57,1798
	MatrixDisplayType display;	/* Display as */display61,1848
	double scale;scale62,1893
	double offset;offset63,1908
	gboolean selected;selected68,2024
	Rect range;range69,2044
} Matrix;Matrix70,2057
typedef struct _MatrixClass {_MatrixClass72,2068
	ClassmodelClass parent_class;parent_class73,2098
} MatrixClass;MatrixClass77,2151

managed.c,1710
static iContainerClass *parent_class = NULL;parent_class39,1176
static GSList *managed_all = NULL;managed_all42,1240
managed_print_info( Managed *managed, VipsBuf *buf )managed_print_info47,1330
managed_check_all_destroyed( void )managed_check_all_destroyed60,1597
managed_link_heap( Managed *managed, Heap *heap )managed_link_heap75,1920
managed_unlink_heap( Managed *managed )managed_unlink_heap92,2285
managed_sub_remove( Managed *in, Managed *managed )managed_sub_remove104,2553
managed_dispose( GObject *gobject )managed_dispose115,2772
managed_finalize( GObject *gobject )managed_finalize137,3211
managed_info( iObject *iobject, VipsBuf *buf )managed_info157,3671
managed_class_init( ManagedClass *class )managed_class_init171,4076
managed_init( Managed *managed )managed_init187,4449
managed_get_type( void )managed_get_type219,5127
managed_destroy_heap( Managed *managed )managed_destroy_heap247,5754
managed_destroy_nonheap( Managed *managed )managed_destroy_nonheap263,6033
managed_dup_nonheap( Managed *managed )managed_dup_nonheap286,6558
managed_sub_add( Managed *managed, Managed *in )managed_sub_add301,6846
managed_sub_add_all( Managed *out, int nin, Managed **in )managed_sub_add_all312,7068
managed_clear_sub( void *key, Managed *managed )managed_clear_sub323,7229
managed_clear( Heap *heap )managed_clear329,7315
managed_mark( Managed *managed )managed_mark338,7487
static GTimer *zombie_timer = NULL;zombie_timer350,7733
static double zombie_elapsed;zombie_elapsed351,7769
managed_free_unused_sub( void *key, Managed *managed, gboolean *changed )managed_free_unused_sub354,7817
managed_free_unused( Heap *heap ) managed_free_unused422,9483

paintboxview.c,1938
static GtkFrameClass *parent_class = NULL;parent_class36,942
static GtkWidget *paintboxview_menu = NULL;paintboxview_menu40,1009
paintboxview_destroy( GtkObject *object )paintboxview_destroy43,1066
paintboxview_realize( GtkWidget *widget )paintboxview_realize65,1521
paintboxview_hide_cb( GtkWidget *menu, GtkWidget *host, Paintboxview *pbv )paintboxview_hide_cb85,2114
paintboxview_class_init( PaintboxviewClass *class )paintboxview_class_init91,2259
paintboxview_tool_toggled_cb( GtkWidget *wid, Paintboxview *pbv )paintboxview_tool_toggled_cb117,2850
paintboxview_scale_change_cb( Tslider *tslider, Paintboxview *pbv )paintboxview_scale_change_cb135,3246
paintboxview_double_cb( GtkWidget *wid, paintboxview_double_cb146,3516
paintboxview_font_changed_cb( GtkWidget *widget, Paintboxview *pbv )paintboxview_font_changed_cb153,3675
paintboxview_undo_cb( GtkWidget *widget, Paintboxview *pbv )paintboxview_undo_cb167,4084
paintboxview_redo_cb( GtkWidget *widget, Paintboxview *pbv )paintboxview_redo_cb180,4400
paintboxview_clear_cb2( iWindow *iwnd, void *client, paintboxview_clear_cb2193,4716
paintboxview_clear_cb( GtkWidget *widget, Paintboxview *pbv )paintboxview_clear_cb204,4928
paintboxview_text_changed_cb( GtkWidget *widget, Paintboxview *pbv )paintboxview_text_changed_cb218,5360
paintboxview_init( Paintboxview *pbv )paintboxview_init226,5556
paintboxview_get_type( void )paintboxview_get_type382,11308
paintboxview_ii_undo_changed_cb( Imageinfo *imageinfo, Paintboxview *pbv )paintboxview_ii_undo_changed_cb406,11816
paintboxview_ii_destroy_cb( Imageinfo *imageinfo, Paintboxview *pbv )paintboxview_ii_destroy_cb417,12182
paintboxview_changed_cb( Imagemodel *imagemodel, Paintboxview *pbv )paintboxview_changed_cb427,12384
paintboxview_link( Paintboxview *pbv, Imagemodel *imagemodel )paintboxview_link477,13701
paintboxview_new( Imagemodel *imagemodel )paintboxview_new489,13992

conversionview.h,752
#define TYPE_CONVERSIONVIEW TYPE_CONVERSIONVIEW30,944
#define CONVERSIONVIEW(CONVERSIONVIEW31,1000
#define CONVERSIONVIEW_CLASS(CONVERSIONVIEW_CLASS32,1093
#define IS_CONVERSIONVIEW(IS_CONVERSIONVIEW34,1210
#define IS_CONVERSIONVIEW_CLASS(IS_CONVERSIONVIEW_CLASS35,1290
struct _Conversionview {_Conversionview38,1390
	GtkFrame parent_class;parent_class39,1415
	Imagemodel *imagemodel;imagemodel41,1440
	Tslider *scale;scale43,1466
	Tslider *offset;offset44,1483
	GtkWidget *falsecolour;		/* Toggle menu items */falsecolour46,1502
	GtkWidget *type;	type47,1552
typedef struct _ConversionviewClass {_ConversionviewClass50,1575
	GtkFrameClass parent_class;parent_class51,1613
} ConversionviewClass;ConversionviewClass55,1664

expression.c,783
static ClassmodelClass *parent_class = NULL;parent_class36,936
expression_finalize( GObject *gobject )expression_finalize39,994
expression_get_itext_sub( Row *row )expression_get_itext_sub58,1349
expression_get_itext( Expression *expression )expression_get_itext88,2111
expression_view_new( Model *model, View *parent )expression_view_new102,2421
expression_save( Model *model, xmlNode *xnode )expression_save108,2526
expression_load( Model *model, expression_load122,2802
expression_class_get( Classmodel *classmodel, PElement *root )expression_class_get139,3199
expression_class_init( ExpressionClass *class )expression_class_init158,3614
expression_init( Expression *expression )expression_init185,4247
expression_get_type( void )expression_get_type191,4363

managed.h,1069
#define TYPE_MANAGED TYPE_MANAGED33,1094
#define MANAGED(MANAGED34,1136
#define MANAGED_CLASS(MANAGED_CLASS36,1223
#define IS_MANAGED(IS_MANAGED38,1321
#define IS_MANAGED_CLASS(IS_MANAGED_CLASS40,1402
#define MANAGED_GET_CLASS(MANAGED_GET_CLASS42,1490
#define MANAGED_UNREF(MANAGED_UNREF45,1592
#define MANAGED_REF(MANAGED_REF51,1702
struct _Managed {_Managed53,1764
	iContainer parent_object;parent_object54,1782
	Heap *heap;		/* Heap we are attached to */heap60,1936
	gboolean attached;	/* If we are attached to the heap */attached61,1980
	gboolean marked;	/* For mark-sweep */marked63,2038
	int count;		/* Number of non-heap pointers to us */count64,2077
	gboolean zombie;	/* Unreffed, but being kept alive */zombie65,2130
	double time;		/* When we became a zombie */time66,2185
	GSList *sub;		/* Sub-objects ... mark these if we mark this */sub74,2324
typedef struct _ManagedClass {_ManagedClass77,2392
	iContainerClass parent_class;parent_class78,2423
	double keepalive;keepalive82,2508
} ManagedClass;ManagedClass83,2527

idialog.c,3261
static iWindowClass *parent_class = NULL;parent_class36,974
	char *label;label41,1095
	iWindowFn done_cb;done_cb42,1109
} OKButton;OKButton43,1129
okbutton_free( OKButton *ok )okbutton_free46,1156
okbutton_new( char *label, iWindowFn done_cb )okbutton_new56,1287
idialog_free_client( iDialog *idlg, void *client )idialog_free_client70,1512
idialog_notify_parent( iDialog *idlg, iWindowResult result )idialog_notify_parent78,1626
idialog_set_sensitive( GtkWidget *w, gboolean state )idialog_set_sensitive89,1814
idialog_set_ok_button_state( iDialog *idlg, gboolean state )idialog_set_ok_button_state99,1964
idialog_set_button_state( iDialog *idlg, gboolean state )idialog_set_button_state108,2178
idialog_popdown_notify( void *sys, iWindowResult result )idialog_popdown_notify120,2509
idialog_popdown_cb( iWindow *iwnd, void *client, idialog_popdown_cb142,3043
idialog_done_notify( void *sys, iWindowResult result )idialog_done_notify161,3543
idialog_done_trigger( iDialog *idlg, int pos )idialog_done_trigger198,4412
idialog_cancel_notify( void *sys, iWindowResult result )idialog_cancel_notify219,4906
idialog_cancel_trigger( iDialog *idlg )idialog_cancel_trigger247,5518
idialog_done_cb( GtkWidget *w, iDialog *idlg )idialog_done_cb263,5920
idialog_cancel_cb( GtkWidget *w, iDialog *idlg )idialog_cancel_cb273,6093
idialog_help_cb( GtkWidget *w, iDialog *idlg )idialog_help_cb279,6192
idialog_destroy( GtkObject *object )idialog_destroy286,6328
idialog_realize( GtkWidget *widget )idialog_realize321,7072
idialog_iobject_destroy( iObject *iobject, iDialog *idlg )idialog_iobject_destroy338,7446
idialog_build_ok( OKButton *ok, iDialog *idlg )idialog_build_ok352,7712
idialog_build_cancel( iDialog *idlg )idialog_build_cancel367,8100
idialog_set_default( iDialog *idlg, GtkWidget *widget )idialog_set_default382,8535
idialog_build( GtkWidget *widget )idialog_build392,8777
idialog_class_init( iDialogClass *class )idialog_class_init564,13450
idialog_init( iDialog *idlg )idialog_init587,13942
idialog_get_type( void )idialog_get_type634,14764
idialog_new()idialog_new657,15182
idialog_set_iobject( iDialog *idlg, iObject *iobject )idialog_set_iobject670,15391
idialog_set_pinup( iDialog *idlg, gboolean pinup )idialog_set_pinup676,15483
idialog_set_modal( iDialog *idlg, gboolean modal )idialog_set_modal686,15670
idialog_set_nosep( iDialog *idlg, gboolean nosep )idialog_set_nosep692,15754
idialog_set_button_focus( iDialog *idlg, gboolean button_focus )idialog_set_button_focus698,15838
idialog_set_help_tag( iDialog *idlg, const char *help_tag )idialog_set_help_tag704,15950
idialog_set_callbacks( iDialog *idlg, idialog_set_callbacks710,16061
idialog_add_ok( iDialog *idlg, iWindowFn done_cb, const char *fmt, ... )idialog_add_ok721,16316
idialog_set_notify( iDialog *idlg, iWindowNotifyFn nfn, void *sys )idialog_set_notify738,16724
idialog_set_build( iDialog *idlg, idialog_set_build745,16839
idialog_set_cancel_text( iDialog *idlg, const char *cancel_text )idialog_set_cancel_text755,17054
idialog_set_default_entry( iDialog *idlg, GtkEntry *entry )idialog_set_default_entry761,17165
idialog_init_entry( iDialog *idlg, GtkWidget *entry, idialog_init_entry771,17421

paintboxview.h,944
#define TYPE_PAINTBOXVIEW TYPE_PAINTBOXVIEW32,971
#define PAINTBOXVIEW(PAINTBOXVIEW33,1023
#define PAINTBOXVIEW_CLASS(PAINTBOXVIEW_CLASS35,1113
#define IS_PAINTBOXVIEW(IS_PAINTBOXVIEW37,1224
#define IS_PAINTBOXVIEW_CLASS(IS_PAINTBOXVIEW_CLASS38,1300
struct _Paintboxview {_Paintboxview41,1396
	GtkFrame parent_class;parent_class42,1419
	Imagemodel *imagemodel;imagemodel44,1444
	Imageinfo *ii;ii48,1527
	guint ii_undo_changed_sid;ii_undo_changed_sid49,1543
	guint ii_destroy_sid;ii_destroy_sid50,1571
	GtkWidget *undo;undo52,1595
	GtkWidget *redo;redo53,1613
	GtkWidget *clear;clear54,1631
	GtkWidget *tool[IMAGEMODEL_LAST];tool55,1650
	Tslider *nib;nib56,1685
	GtkWidget *ink;ink57,1700
	GtkWidget *font;font58,1717
	GtkWidget *text;text59,1735
typedef struct _PaintboxviewClass {_PaintboxviewClass62,1757
	GtkFrameClass parent_class;parent_class63,1793
} PaintboxviewClass;PaintboxviewClass67,1844

subcolumnview.c,668
static ViewClass *parent_class = NULL;parent_class36,952
subcolumnview_destroy( GtkObject *object )subcolumnview_destroy39,1004
subcolumnview_link( View *view, Model *model, View *parent )subcolumnview_link58,1358
subcolumnview_refresh_sub( Rowview *rview, Subcolumnview *sview )subcolumnview_refresh_sub84,1995
subcolumnview_refresh( vObject *vobject )subcolumnview_refresh109,2507
subcolumnview_class_init( SubcolumnviewClass *class )subcolumnview_class_init172,4298
subcolumnview_init( Subcolumnview *sview )subcolumnview_init193,4766
subcolumnview_get_type( void )subcolumnview_get_type212,5283
subcolumnview_new( void )subcolumnview_new235,5729

plot.c,1309
static ClassmodelClass *parent_class = NULL;parent_class36,928
plot_free_columns( Plot *plot )plot_free_columns39,986
plot_finalize( GObject *gobject )plot_finalize54,1240
plot_f2c( PlotFormat format )plot_f2c77,1669
plot_s2c( PlotStyle style )plot_s2c90,1903
plot_generate_caption( iObject *iobject )plot_generate_caption104,2194
plot_unpack( Plot *plot, DOUBLEMASK *mask )plot_unpack125,2781
plot_view_new( Model *model, View *parent )plot_view_new256,5688
plot_edit( GtkWidget *parent, Model *model )plot_edit264,5820
plot_save( Model *model, xmlNode *xnode )plot_save277,6092
plot_load( Model *model, plot_load296,6575
static ClassmodelMember plot_options[] = {plot_options314,7069
static ClassmodelMember plot_members[] = {plot_members335,7790
plot_class_get( Classmodel *classmodel, PElement *root )plot_class_get347,8149
plot_reset( Classmodel *classmodel )plot_reset408,9511
plot_graphic_save( Classmodel *classmodel, plot_graphic_save422,9836
plot_class_init( PlotClass *class )plot_class_init442,10238
plot_init( Plot *plot )plot_init482,11323
plot_get_type( void )plot_get_type508,11790
  #define RGB(RGB538,12454
  #define RGB(RGB540,12514
static GOColor default_colour[] = {default_colour548,12770
plot_new_gplot( Plot *plot )plot_new_gplot575,13285

gtksheetwidget.c,25583
  GTK_SHEET_IS_LOCKED       = 1 << 0,GTK_SHEET_IS_LOCKED51,1927
  GTK_SHEET_IS_FROZEN       = 1 << 1,GTK_SHEET_IS_FROZEN52,1965
  GTK_SHEET_IN_XDRAG        = 1 << 2,GTK_SHEET_IN_XDRAG53,2003
  GTK_SHEET_IN_YDRAG        = 1 << 3,GTK_SHEET_IN_YDRAG54,2041
  GTK_SHEET_IN_DRAG         = 1 << 4,GTK_SHEET_IN_DRAG55,2079
  GTK_SHEET_IN_SELECTION    = 1 << 5,GTK_SHEET_IN_SELECTION56,2117
  GTK_SHEET_IN_RESIZE       = 1 << 6,GTK_SHEET_IN_RESIZE57,2155
  GTK_SHEET_IN_CLIP         = 1 << 7,GTK_SHEET_IN_CLIP58,2193
  GTK_SHEET_REDRAW_PENDING  = 1 << 8,GTK_SHEET_REDRAW_PENDING59,2231
#define GTK_SHEET_FLAGS(GTK_SHEET_FLAGS62,2273
#define GTK_SHEET_SET_FLAGS(GTK_SHEET_SET_FLAGS63,2343
#define GTK_SHEET_UNSET_FLAGS(GTK_SHEET_UNSET_FLAGS64,2422
#define GTK_SHEET_IS_FROZEN(GTK_SHEET_IS_FROZEN66,2503
#define GTK_SHEET_IN_XDRAG(GTK_SHEET_IN_XDRAG67,2588
#define GTK_SHEET_IN_YDRAG(GTK_SHEET_IN_YDRAG68,2672
#define GTK_SHEET_IN_DRAG(GTK_SHEET_IN_DRAG69,2756
#define GTK_SHEET_IN_SELECTION(GTK_SHEET_IN_SELECTION70,2839
#define GTK_SHEET_IN_RESIZE(GTK_SHEET_IN_RESIZE71,2928
#define GTK_SHEET_IN_CLIP(GTK_SHEET_IN_CLIP72,3011
#define GTK_SHEET_REDRAW_PENDING(GTK_SHEET_REDRAW_PENDING73,3090
#define CELL_SPACING CELL_SPACING75,3187
#define DRAG_WIDTH DRAG_WIDTH76,3210
#define TIMEOUT_SCROLL TIMEOUT_SCROLL77,3231
#define TIMEOUT_FLASH TIMEOUT_FLASH78,3257
#define TIME_INTERVAL TIME_INTERVAL79,3283
#define COLUMN_MIN_WIDTH COLUMN_MIN_WIDTH80,3307
#define MINROWS MINROWS81,3335
#define MINCOLS MINCOLS82,3353
#define MAXLENGTH MAXLENGTH83,3371
#define CELLOFFSET CELLOFFSET84,3392
#define DEFAULT_COLUMN_WIDTH DEFAULT_COLUMN_WIDTH85,3413
#define DEFAULT_SHEET_TITLE DEFAULT_SHEET_TITLE86,3445
gtk_sheet_row_height(GtkSheet *sheet, gint row)gtk_sheet_row_height89,3504
gtk_sheet_column_width(GtkSheet *sheet, gint col)gtk_sheet_column_width95,3609
static inline guint DEFAULT_ROW_HEIGHT(GtkWidget *widget) DEFAULT_ROW_HEIGHT100,3699
static inline guint DEFAULT_FONT_ASCENT(GtkWidget *widget) DEFAULT_FONT_ASCENT114,4283
static inline guint STRING_WIDTH(GtkWidget *widget,STRING_WIDTH127,4796
static inline guint DEFAULT_FONT_DESCENT(GtkWidget *widget) DEFAULT_FONT_DESCENT142,5213
ROW_TOP_YPIXEL(GtkSheet *sheet, gint nrow)ROW_TOP_YPIXEL159,5829
ROW_FROM_YPIXEL(GtkSheet *sheet, gint y)ROW_FROM_YPIXEL168,6050
COLUMN_LEFT_XPIXEL(GtkSheet *sheet, gint ncol)COLUMN_LEFT_XPIXEL191,6587
COLUMN_FROM_XPIXEL (GtkSheet * sheet,COLUMN_FROM_XPIXEL198,6721
static inline gint SHEET_HEIGHT(GtkSheet *sheet)SHEET_HEIGHT220,7213
static inline gint SHEET_WIDTH(GtkSheet *sheet)SHEET_WIDTH234,7515
#define MIN_VISIBLE_ROW(MIN_VISIBLE_ROW246,7770
#define MAX_VISIBLE_ROW(MAX_VISIBLE_ROW247,7818
#define MIN_VISIBLE_COLUMN(MIN_VISIBLE_COLUMN248,7866
#define MAX_VISIBLE_COLUMN(MAX_VISIBLE_COLUMN249,7917
POSSIBLE_XDRAG(GtkSheet *sheet, gint x, gint *drag_column)POSSIBLE_XDRAG253,7989
POSSIBLE_YDRAG(GtkSheet *sheet, gint y, gint *drag_row)POSSIBLE_YDRAG275,8556
static inline gint POSSIBLE_DRAG(GtkSheet *sheet, gint x, gint y,POSSIBLE_DRAG298,9052
static inline gint POSSIBLE_RESIZE(GtkSheet *sheet, gint x, gint y,POSSIBLE_RESIZE340,10482
      SELECT_ROW, SELECT_ROW584,19675
      SELECT_COLUMN, SELECT_COLUMN585,19694
      SELECT_RANGE,SELECT_RANGE586,19716
      UNSELECT_RANGE,UNSELECT_RANGE587,19736
      CLIP_RANGE,CLIP_RANGE588,19758
      RESIZE_RANGE,RESIZE_RANGE589,19776
      MOVE_RANGE,MOVE_RANGE590,19796
      TRAVERSE, TRAVERSE591,19814
      DEACTIVATE, DEACTIVATE592,19831
      ACTIVATE,ACTIVATE593,19850
      SET_CELL,SET_CELL594,19866
      CLEAR_CELL,CLEAR_CELL595,19882
      CHANGED,CHANGED596,19900
      NEW_COL_WIDTH,NEW_COL_WIDTH597,19915
      NEW_ROW_HEIGHT,NEW_ROW_HEIGHT598,19936
      LAST_SIGNALLAST_SIGNAL599,19958
static guint sheet_signals[LAST_SIGNAL] = {0};sheet_signals602,19980
gtk_sheet_range_copy (const GtkSheetRange *range)gtk_sheet_range_copy606,20072
gtk_sheet_range_free (GtkSheetRange *range)gtk_sheet_range_free620,20300
gtk_sheet_range_get_type (void)gtk_sheet_range_get_type628,20410
gtk_sheet_cell_border_free(GtkSheetCellBorder *border)gtk_sheet_cell_border_free644,20807
gtk_sheet_cell_border_copy(const GtkSheetCellBorder *other)gtk_sheet_cell_border_copy650,20908
gtk_sheet_cell_border_get_type (void)gtk_sheet_cell_border_get_type658,21083
gtk_sheet_cell_attr_free(GtkSheetCellAttr *attrs)gtk_sheet_cell_attr_free671,21404
gtk_sheet_cell_attr_copy(const GtkSheetCellAttr *other)gtk_sheet_cell_attr_copy680,21587
gtk_sheet_cell_attr_get_type (void)gtk_sheet_cell_attr_get_type691,21868
  CHILD_PROP_0,CHILD_PROP_0705,22181
  CHILD_PROP_X,CHILD_PROP_X706,22197
  CHILD_PROP_Y,CHILD_PROP_Y707,22213
  CHILD_PROP_ATTACHED_TO_CELL,CHILD_PROP_ATTACHED_TO_CELL708,22229
  CHILD_PROP_FLOATING,CHILD_PROP_FLOATING709,22260
  CHILD_PROP_ROW,CHILD_PROP_ROW710,22283
  CHILD_PROP_COLUMN,CHILD_PROP_COLUMN711,22301
  CHILD_PROP_X_OPTIONS,CHILD_PROP_X_OPTIONS712,22322
  CHILD_PROP_Y_OPTIONS,CHILD_PROP_Y_OPTIONS713,22346
  CHILD_PROP_X_PADDING,CHILD_PROP_X_PADDING714,22370
  CHILD_PROP_Y_PADDING  CHILD_PROP_Y_PADDING715,22394
gtk_sheet_set_child_property (GtkContainer    *container,gtk_sheet_set_child_property719,22435
gtk_sheet_get_child_property (GtkContainer    *container,gtk_sheet_get_child_property800,24987
    PROP_0,PROP_0865,26922
    PROP_AUTORESIZE,PROP_AUTORESIZE867,26935
    PROP_AUTOSCROLL,PROP_AUTOSCROLL868,26956
    PROP_CLIP_TEXT,PROP_CLIP_TEXT869,26977
    PROP_GRID_VISIBLE,PROP_GRID_VISIBLE870,26997
    PROP_JUSTIFY_ENTRY,PROP_JUSTIFY_ENTRY871,27020
    PROP_LOCKED,PROP_LOCKED872,27044
    PROP_STATE,PROP_STATE873,27061
    PROP_COLUMNS_RESIZABLE,PROP_COLUMNS_RESIZABLE874,27077
    PROP_COLUMN_TITLES_VISIBLE,PROP_COLUMN_TITLES_VISIBLE875,27105
    PROP_ROWS_RESIZABLE,PROP_ROWS_RESIZABLE876,27137
    PROP_ROW_TITLES_VISIBLE,PROP_ROW_TITLES_VISIBLE877,27162
    PROP_TITLE,PROP_TITLE878,27191
    PROP_ACTIVE_CELL,PROP_ACTIVE_CELL879,27207
    PROP_SELECTED_RANGE,PROP_SELECTED_RANGE880,27229
    PROP_N_ROWS,PROP_N_ROWS881,27254
    PROP_N_COLUMNS,PROP_N_COLUMNS882,27271
    PROP_SELECTION_MODE,PROP_SELECTION_MODE883,27291
gtk_sheet_set_property (GObject      *object,gtk_sheet_set_property887,27332
gtk_sheet_get_property (GObject    *object,gtk_sheet_get_property964,29480
gtk_sheet_class_init (GtkSheetClass * klass)gtk_sheet_class_init1068,32368
gtk_sheet_init (GtkSheet *sheet)gtk_sheet_init1625,53964
gtk_sheet_new (guint rows, guint columns, const gchar *title)gtk_sheet_new1716,56158
gtk_sheet_construct (GtkSheet *sheet, guint rows, guint columns, const gchar *title)gtk_sheet_construct1742,56756
gtk_sheet_new_browser(guint rows, guint columns, const gchar *title)gtk_sheet_new_browser1793,58082
gtk_sheet_construct_browser(GtkSheet *sheet, guint rows, guint columns, gtk_sheet_construct_browser1815,58595
gtk_sheet_new_with_custom_entry (guint rows, guint columns, const gchar *title,gtk_sheet_new_with_custom_entry1836,59156
gtk_sheet_construct_with_custom_entry (GtkSheet *sheet, gtk_sheet_construct_with_custom_entry1861,59851
gtk_sheet_change_entry(GtkSheet *sheet, GtkType entry_type)gtk_sheet_change_entry1880,60359
gtk_sheet_show_grid(GtkSheet *sheet, gboolean show)gtk_sheet_show_grid1915,61148
gtk_sheet_grid_visible(GtkSheet *sheet)gtk_sheet_grid_visible1938,61659
gtk_sheet_set_background(GtkSheet *sheet, GdkColor *color)gtk_sheet_set_background1955,62003
gtk_sheet_set_grid(GtkSheet *sheet, GdkColor *color)gtk_sheet_set_grid1979,62524
gtk_sheet_get_columns_count(GtkSheet *sheet)gtk_sheet_get_columns_count2004,63089
gtk_sheet_get_rows_count(GtkSheet *sheet)gtk_sheet_get_rows_count2021,63414
gtk_sheet_get_state(GtkSheet *sheet)gtk_sheet_get_state2038,63785
gtk_sheet_set_selection_mode(GtkSheet *sheet, GtkSelectionMode mode)gtk_sheet_set_selection_mode2054,64130
gtk_sheet_set_autoresize (GtkSheet *sheet, gboolean autoresize)gtk_sheet_set_autoresize2075,64713
gtk_sheet_autoresize (GtkSheet *sheet)gtk_sheet_autoresize2094,65136
gtk_sheet_autoresize_column (GtkSheet *sheet, gint column)gtk_sheet_autoresize_column2103,65322
gtk_sheet_set_autoscroll (GtkSheet *sheet, gboolean autoscroll)gtk_sheet_set_autoscroll2145,66668
gtk_sheet_autoscroll (GtkSheet *sheet)gtk_sheet_autoscroll2163,67089
gtk_sheet_set_clip_text  (GtkSheet *sheet, gboolean clip_text)gtk_sheet_set_clip_text2179,67381
gtk_sheet_clip_text (GtkSheet *sheet)gtk_sheet_clip_text2197,67790
gtk_sheet_set_justify_entry (GtkSheet *sheet, gboolean justify)gtk_sheet_set_justify_entry2213,68095
gtk_sheet_justify_entry (GtkSheet *sheet)gtk_sheet_justify_entry2232,68538
gtk_sheet_set_locked (GtkSheet *sheet, gboolean locked)gtk_sheet_set_locked2248,68832
gtk_sheet_locked (GtkSheet *sheet)gtk_sheet_locked2267,69218
gtk_sheet_set_title(GtkSheet *sheet, const gchar *title)gtk_sheet_set_title2286,69620
gtk_sheet_freeze (GtkSheet *sheet)gtk_sheet_freeze2342,70964
gtk_sheet_thaw(GtkSheet *sheet)gtk_sheet_thaw2359,71390
gtk_sheet_set_row_titles_width(GtkSheet *sheet, guint width)gtk_sheet_set_row_titles_width2403,72578
gtk_sheet_set_column_titles_height(GtkSheet *sheet, guint height)gtk_sheet_set_column_titles_height2428,73296
gtk_sheet_show_column_titles(GtkSheet *sheet)gtk_sheet_show_column_titles2452,73998
gtk_sheet_show_row_titles(GtkSheet *sheet)gtk_sheet_show_row_titles2494,75295
gtk_sheet_hide_column_titles(GtkSheet *sheet)gtk_sheet_hide_column_titles2536,76554
gtk_sheet_hide_row_titles(GtkSheet *sheet)gtk_sheet_hide_row_titles2574,77520
gtk_sheet_column_titles_visible(GtkSheet *sheet)gtk_sheet_column_titles_visible2613,78647
gtk_sheet_row_titles_visible(GtkSheet *sheet)gtk_sheet_row_titles_visible2628,78993
gtk_sheet_set_column_title (GtkSheet * sheet,gtk_sheet_set_column_title2644,79322
gtk_sheet_set_row_title (GtkSheet * sheet,gtk_sheet_set_row_title2666,79751
gtk_sheet_get_row_title (GtkSheet * sheet,gtk_sheet_get_row_title2688,80166
gtk_sheet_get_column_title (GtkSheet * sheet,gtk_sheet_get_column_title2706,80516
gtk_sheet_row_button_add_label(GtkSheet *sheet, gint row, const gchar *label)gtk_sheet_row_button_add_label2724,80892
gtk_sheet_row_button_get_label(GtkSheet *sheet, gint row)gtk_sheet_row_button_get_label2766,82009
gtk_sheet_row_label_set_visibility(GtkSheet *sheet, gint row, gboolean visible)gtk_sheet_row_label_set_visibility2785,82418
gtk_sheet_rows_labels_set_visibility(GtkSheet *sheet, gboolean visible)gtk_sheet_rows_labels_set_visibility2808,82967
gtk_sheet_column_button_add_label(GtkSheet *sheet, gint column, const gchar *label)gtk_sheet_column_button_add_label2828,83411
gtk_sheet_column_button_get_label(GtkSheet *sheet, gint column)gtk_sheet_column_button_get_label2869,84543
gtk_sheet_column_label_set_visibility(GtkSheet *sheet, gint col, gboolean visible)gtk_sheet_column_label_set_visibility2888,85044
gtk_sheet_columns_labels_set_visibility(GtkSheet *sheet, gboolean visible)gtk_sheet_columns_labels_set_visibility2911,85675
gtk_sheet_row_button_justify(GtkSheet *sheet, gint row, gtk_sheet_row_button_justify2931,86169
gtk_sheet_column_button_justify(GtkSheet *sheet, gint column, gtk_sheet_column_button_justify2959,86906
gtk_sheet_moveto (GtkSheet * sheet,gtk_sheet_moveto2991,87885
gtk_sheet_column_set_sensitivity(GtkSheet *sheet, gint column, gboolean sensitive)gtk_sheet_column_set_sensitivity3102,90973
gtk_sheet_columns_set_sensitivity(GtkSheet *sheet, gboolean sensitive)gtk_sheet_columns_set_sensitivity3127,91718
gtk_sheet_columns_set_resizable (GtkSheet *sheet, gboolean resizable)gtk_sheet_columns_set_resizable3146,92117
gtk_sheet_columns_resizable (GtkSheet *sheet)gtk_sheet_columns_resizable3165,92564
gtk_sheet_row_set_sensitivity(GtkSheet *sheet, gint row,  gboolean sensitive)gtk_sheet_row_set_sensitivity3182,92978
gtk_sheet_rows_set_sensitivity(GtkSheet *sheet, gboolean sensitive)gtk_sheet_rows_set_sensitivity3208,93682
gtk_sheet_rows_set_resizable (GtkSheet *sheet, gboolean resizable)gtk_sheet_rows_set_resizable3227,94069
gtk_sheet_rows_resizable (GtkSheet *sheet)gtk_sheet_rows_resizable3247,94499
gtk_sheet_column_set_visibility(GtkSheet *sheet, gint column, gboolean visible)gtk_sheet_column_set_visibility3264,94895
gtk_sheet_row_set_visibility(GtkSheet *sheet, gint row, gboolean visible)gtk_sheet_row_set_visibility3292,95666
gtk_sheet_select_row (GtkSheet * sheet,gtk_sheet_select_row3319,96386
gtk_sheet_select_column (GtkSheet * sheet,gtk_sheet_select_column3362,97455
gtk_sheet_clip_range (GtkSheet *sheet, const GtkSheetRange *range)gtk_sheet_clip_range3409,98770
gtk_sheet_unclip_range(GtkSheet *sheet)gtk_sheet_unclip_range3438,99370
gtk_sheet_in_clip (GtkSheet *sheet)gtk_sheet_in_clip3462,99918
gtk_sheet_flash(gpointer data)gtk_sheet_flash3472,100109
gtk_sheet_draw_flashing_range(GtkSheet *sheet, GtkSheetRange range)gtk_sheet_draw_flashing_range3554,102578
gtk_sheet_range_isvisible (GtkSheet * sheet,gtk_sheet_range_isvisible3599,103923
gtk_sheet_cell_isvisible (GtkSheet * sheet,gtk_sheet_cell_isvisible3632,104615
gtk_sheet_get_visible_range(GtkSheet *sheet, GtkSheetRange *range)gtk_sheet_get_visible_range3655,105131
gtk_sheet_get_vadjustment (GtkSheet * sheet)gtk_sheet_get_vadjustment3677,105639
gtk_sheet_get_hadjustment (GtkSheet * sheet)gtk_sheet_get_hadjustment3693,105971
gtk_sheet_set_vadjustment (GtkSheet      *sheet,gtk_sheet_set_vadjustment3709,106292
gtk_sheet_set_hadjustment (GtkSheet      *sheet,gtk_sheet_set_hadjustment3764,107759
gtk_sheet_set_scroll_adjustments (GtkSheet *sheet,gtk_sheet_set_scroll_adjustments3820,109288
gtk_sheet_finalize (GObject * object)gtk_sheet_finalize3831,109620
gtk_sheet_destroy (GtkObject * object)gtk_sheet_destroy3867,110463
gtk_sheet_style_set (GtkWidget *widget,gtk_sheet_style_set3933,112428
gtk_sheet_realize (GtkWidget * widget)gtk_sheet_realize3954,112928
create_global_button(GtkSheet *sheet)create_global_button4115,118150
size_allocate_global_button(GtkSheet *sheet)size_allocate_global_button4126,118395
global_button_clicked(GtkWidget *widget, gpointer data)global_button_clicked4145,118849
gtk_sheet_unrealize (GtkWidget * widget)gtk_sheet_unrealize4155,119040
gtk_sheet_map (GtkWidget * widget)gtk_sheet_map4191,119913
gtk_sheet_unmap (GtkWidget * widget)gtk_sheet_unmap4259,121816
gtk_sheet_cell_draw_default (GtkSheet *sheet, gint row, gint col)gtk_sheet_cell_draw_default4305,122917
gtk_sheet_cell_draw_border (GtkSheet *sheet, gint row, gint col, gint mask)gtk_sheet_cell_draw_border4360,124400
gtk_sheet_cell_draw_label (GtkSheet *sheet, gint row, gint col)gtk_sheet_cell_draw_label4429,126687
gtk_sheet_range_draw(GtkSheet *sheet, const GtkSheetRange *range)gtk_sheet_range_draw4607,132437
gtk_sheet_range_draw_selection(GtkSheet *sheet, GtkSheetRange range)gtk_sheet_range_draw_selection4737,137119
gtk_sheet_draw_backing_pixmap(GtkSheet *sheet, GtkSheetRange range)gtk_sheet_draw_backing_pixmap4804,139069
gtk_sheet_cell_new()gtk_sheet_cell_new4855,140540
gtk_sheet_set_cell_text(GtkSheet *sheet, gint row, gint col, const gchar *text)gtk_sheet_set_cell_text4875,140908
gtk_sheet_set_cell(GtkSheet *sheet, gint row, gint col, gtk_sheet_set_cell4899,141570
gtk_sheet_cell_clear (GtkSheet *sheet, gint row, gint column)gtk_sheet_cell_clear4974,143447
gtk_sheet_cell_delete (GtkSheet *sheet, gint row, gint column)gtk_sheet_cell_delete5005,144185
gtk_sheet_real_cell_clear (GtkSheet *sheet, gint row, gint column, gboolean delete)gtk_sheet_real_cell_clear5028,144782
gtk_sheet_range_clear (GtkSheet *sheet, const GtkSheetRange *range)gtk_sheet_range_clear5070,145899
gtk_sheet_range_delete (GtkSheet *sheet, const GtkSheetRange *range)gtk_sheet_range_delete5087,146293
gtk_sheet_real_range_clear (GtkSheet *sheet, const GtkSheetRange *range, gtk_sheet_real_range_clear5096,146510
gtk_sheet_cell_get_text (GtkSheet *sheet, gint row, gint col)gtk_sheet_cell_get_text5133,147334
gtk_sheet_link_cell(GtkSheet *sheet, gint row, gint col, gpointer link)gtk_sheet_link_cell5159,148073
gtk_sheet_get_link(GtkSheet *sheet, gint row, gint col)gtk_sheet_get_link5183,148704
gtk_sheet_remove_link(GtkSheet *sheet, gint row, gint col)gtk_sheet_remove_link5206,149354
gtk_sheet_cell_get_state (GtkSheet *sheet, gint row, gint col)gtk_sheet_cell_get_state5231,150114
gtk_sheet_get_pixel_info (GtkSheet * sheet,gtk_sheet_get_pixel_info5277,151503
gtk_sheet_get_cell_area  (GtkSheet * sheet,gtk_sheet_get_cell_area5316,152268
gtk_sheet_set_active_cell (GtkSheet *sheet, gint row, gint column)gtk_sheet_set_active_cell5365,153938
gtk_sheet_get_active_cell (GtkSheet *sheet, gint *row, gint *column)gtk_sheet_get_active_cell5395,154643
gtk_sheet_entry_changed(GtkWidget *widget, gpointer data)gtk_sheet_entry_changed5405,154878
gtk_sheet_deactivate_cell(GtkSheet *sheet)gtk_sheet_deactivate_cell5457,156168
gtk_sheet_hide_active_cell(GtkSheet *sheet)gtk_sheet_hide_active_cell5490,157148
gtk_sheet_activate_cell(GtkSheet *sheet, gint row, gint col)gtk_sheet_activate_cell5547,158686
gtk_sheet_show_active_cell(GtkSheet *sheet)gtk_sheet_show_active_cell5595,160202
gtk_sheet_draw_active_cell(GtkSheet *sheet)gtk_sheet_draw_active_cell5671,162234
gtk_sheet_make_backing_pixmap (GtkSheet *sheet, guint width, guint height)gtk_sheet_make_backing_pixmap5695,162765
gtk_sheet_new_selection(GtkSheet *sheet, GtkSheetRange *range)gtk_sheet_new_selection5732,163957
gtk_sheet_draw_border (GtkSheet *sheet, GtkSheetRange new_range)gtk_sheet_draw_border5974,171775
gtk_sheet_draw_corners(GtkSheet *sheet, GtkSheetRange range)gtk_sheet_draw_corners6022,173003
gtk_sheet_real_select_range (GtkSheet * sheet,gtk_sheet_real_select_range6129,176724
gtk_sheet_select_range(GtkSheet * sheet, const GtkSheetRange *range)gtk_sheet_select_range6192,178453
gtk_sheet_unselect_range (GtkSheet * sheet)gtk_sheet_unselect_range6234,179583
gtk_sheet_real_unselect_range (GtkSheet * sheet,gtk_sheet_real_unselect_range6244,179853
gtk_sheet_expose (GtkWidget * widget,gtk_sheet_expose6278,180606
gtk_sheet_button_press (GtkWidget * widget,gtk_sheet_button_press6349,183048
gtk_sheet_scroll(gpointer data)gtk_sheet_scroll6514,189093
gtk_sheet_click_cell(GtkSheet *sheet, gint row, gint column, gboolean *veto)gtk_sheet_click_cell6544,189696
gtk_sheet_button_release (GtkWidget * widget,gtk_sheet_button_release6635,192571
gtk_sheet_motion (GtkWidget * widget,gtk_sheet_motion6747,196945
gtk_sheet_move_query(GtkSheet *sheet, gint row, gint column)gtk_sheet_move_query6974,204912
gtk_sheet_extend_selection(GtkSheet *sheet, gint row, gint column)gtk_sheet_extend_selection7029,206536
gtk_sheet_entry_key_press(GtkWidget *widget,gtk_sheet_entry_key_press7094,208638
gtk_sheet_key_press(GtkWidget *widget,gtk_sheet_key_press7103,208841
gtk_sheet_size_request (GtkWidget * widget,gtk_sheet_size_request7357,217707
gtk_sheet_size_allocate (GtkWidget * widget,gtk_sheet_size_allocate7405,219101
size_allocate_column_title_buttons (GtkSheet * sheet)size_allocate_column_title_buttons7512,222947
size_allocate_row_title_buttons (GtkSheet * sheet)size_allocate_row_title_buttons7555,224085
gtk_sheet_recalc_top_ypixels(GtkSheet *sheet, gint row)gtk_sheet_recalc_top_ypixels7595,225185
gtk_sheet_recalc_left_xpixels(GtkSheet *sheet, gint column)gtk_sheet_recalc_left_xpixels7608,225492
gtk_sheet_size_allocate_entry(GtkSheet *sheet)gtk_sheet_size_allocate_entry7624,225808
gtk_sheet_entry_set_max_size(GtkSheet *sheet)gtk_sheet_entry_set_max_size7739,229563
create_sheet_entry(GtkSheet *sheet)create_sheet_entry7789,230915
gtk_sheet_get_entry(GtkSheet *sheet)gtk_sheet_get_entry7863,232983
gtk_sheet_get_entry_widget(GtkSheet *sheet)gtk_sheet_get_entry_widget7914,234189
row_button_set (GtkSheet *sheet, gint row)row_button_set7925,234450
column_button_set (GtkSheet *sheet, gint column)column_button_set7935,234668
row_button_release (GtkSheet *sheet, gint row)row_button_release7945,234907
column_button_release (GtkSheet *sheet, gint column)column_button_release7954,235127
gtk_sheet_button_draw (GtkSheet *sheet, gint row, gint column)gtk_sheet_button_draw7963,235368
adjust_scrollbars (GtkSheet * sheet)adjust_scrollbars8196,243411
vadjustment_changed (GtkAdjustment * adjustment,vadjustment_changed8256,245214
hadjustment_changed (GtkAdjustment * adjustment,hadjustment_changed8269,245431
vadjustment_value_changed (GtkAdjustment * adjustment,vadjustment_value_changed8283,245649
hadjustment_value_changed (GtkAdjustment * adjustment,hadjustment_value_changed8390,248705
draw_xor_vline (GtkSheet * sheet)draw_xor_vline8497,251822
draw_xor_hline (GtkSheet * sheet)draw_xor_hline8514,252342
draw_xor_rectangle(GtkSheet *sheet, GtkSheetRange range)draw_xor_rectangle8532,252828
new_column_width (GtkSheet * sheet,new_column_width8592,254676
new_row_height (GtkSheet * sheet,new_row_height8634,255912
gtk_sheet_set_column_width (GtkSheet * sheet,gtk_sheet_set_column_width8682,257029
gtk_sheet_set_row_height (GtkSheet * sheet,gtk_sheet_set_row_height8722,257992
gtk_sheet_add_column(GtkSheet *sheet, guint ncols)gtk_sheet_add_column8761,258940
gtk_sheet_add_row(GtkSheet *sheet, guint nrows)gtk_sheet_add_row8792,259673
gtk_sheet_insert_rows(GtkSheet *sheet, guint row, guint nrows)gtk_sheet_insert_rows8824,260434
gtk_sheet_insert_columns(GtkSheet *sheet, guint col, guint ncols)gtk_sheet_insert_columns8872,261574
gtk_sheet_delete_rows(GtkSheet *sheet, guint row, guint nrows)gtk_sheet_delete_rows8920,262689
gtk_sheet_delete_columns(GtkSheet *sheet, guint col, guint ncols)gtk_sheet_delete_columns8995,264502
gtk_sheet_range_set_background(GtkSheet *sheet, const GtkSheetRange *urange, const GdkColor *color)gtk_sheet_range_set_background9070,266318
gtk_sheet_range_set_foreground(GtkSheet *sheet, const GtkSheetRange *urange, const GdkColor *color)gtk_sheet_range_set_foreground9120,267518
gtk_sheet_range_set_justification(GtkSheet *sheet, const GtkSheetRange *urange, gtk_sheet_range_set_justification9169,269004
gtk_sheet_column_set_justification(GtkSheet *sheet, gint col, gtk_sheet_column_set_justification9209,270125
gtk_sheet_range_set_editable(GtkSheet *sheet, const GtkSheetRange *urange, gboolean editable)gtk_sheet_range_set_editable9234,270813
gtk_sheet_range_set_visible(GtkSheet *sheet, const GtkSheetRange *urange, gboolean visible)gtk_sheet_range_set_visible9269,271696
gtk_sheet_range_set_border(GtkSheet *sheet, const GtkSheetRange *urange, gint mask, gtk_sheet_range_set_border9306,272693
gtk_sheet_range_set_border_color(GtkSheet *sheet, const GtkSheetRange *urange, const GdkColor *color)gtk_sheet_range_set_border_color9351,273823
gtk_sheet_range_set_font(GtkSheet *sheet, const GtkSheetRange *urange, PangoFontDescription *font)gtk_sheet_range_set_font9390,274797
gtk_sheet_set_cell_attributes(GtkSheet *sheet, gint row, gint col, GtkSheetCellAttr attributes)gtk_sheet_set_cell_attributes9447,276619
gtk_sheet_get_attributes(GtkSheet *sheet, gint row, gint col, GtkSheetCellAttr *attributes)gtk_sheet_get_attributes9480,277384
init_attributes(GtkSheet *sheet, gint col, GtkSheetCellAttr *attributes)init_attributes9515,278411
AddColumn(GtkSheet *tbl, gint ncols)AddColumn9554,279935
AddRow(GtkSheet *tbl, gint nrows)AddRow9600,281372
InsertRow(GtkSheet *tbl, gint row, gint nrows)InsertRow9638,282463
InsertColumn(GtkSheet *tbl, gint col, gint ncols)InsertColumn9679,283459
DeleteRow(GtkSheet *tbl, gint row, gint nrows)DeleteRow9716,284586
DeleteColumn(GtkSheet *tbl, gint column, gint ncols)DeleteColumn9778,286081
GrowSheet(GtkSheet *tbl, gint newrows, gint newcols)GrowSheet9830,287421
CheckBounds(GtkSheet *tbl, gint row, gint col)CheckBounds9869,288463
gtk_sheet_put(GtkSheet *sheet, GtkWidget *child, gint x, gint y)gtk_sheet_put9908,289724
gtk_sheet_attach_floating       (GtkSheet *sheet,gtk_sheet_attach_floating9972,291640
gtk_sheet_attach_default        (GtkSheet *sheet,gtk_sheet_attach_default10005,292696
gtk_sheet_attach        (GtkSheet *sheet,gtk_sheet_attach10034,293809
gtk_sheet_button_attach		(GtkSheet *sheet, gtk_sheet_button_attach10107,295863
label_size_request(GtkSheet *sheet, gchar *label, GtkRequisition *req)label_size_request10175,297812
gtk_sheet_button_size_request	(GtkSheet *sheet,gtk_sheet_button_size_request10203,298437
gtk_sheet_row_size_request      (GtkSheet *sheet,gtk_sheet_row_size_request10240,299725
gtk_sheet_column_size_request   (GtkSheet *sheet,gtk_sheet_column_size_request10269,300645
gtk_sheet_move_child(GtkSheet *sheet, GtkWidget *widget, gint x, gint y)gtk_sheet_move_child10307,301801
gtk_sheet_position_child(GtkSheet *sheet, GtkSheetChild *child)gtk_sheet_position_child10337,302448
gtk_sheet_forall (GtkContainer *container,gtk_sheet_forall10429,305882
gtk_sheet_position_children(GtkSheet *sheet)gtk_sheet_position_children10458,306592
gtk_sheet_remove (GtkContainer *container, GtkWidget *widget)gtk_sheet_remove10493,307395
gtk_sheet_realize_child(GtkSheet *sheet, GtkSheetChild *child)gtk_sheet_realize_child10534,308212
gtk_sheet_get_child_at(GtkSheet *sheet, gint row, gint col)gtk_sheet_get_child_at10563,308920
gtk_sheet_child_hide(GtkSheetChild *child) gtk_sheet_child_hide10589,309425
gtk_sheet_child_show(GtkSheetChild *child) gtk_sheet_child_show10596,309555

sliderview.c,682
static GraphicviewClass *parent_class = NULL;parent_class36,958
sliderview_destroy( GtkObject *object )sliderview_destroy39,1017
sliderview_refresh( vObject *vobject )sliderview_refresh55,1313
sliderview_scan( View *view )sliderview_scan105,2617
sliderview_link( View *view, Model *model, View *parent )sliderview_link128,3151
sliderview_class_init( SliderviewClass *class )sliderview_class_init140,3457
sliderview_change_cb( Tslider *tslider, Sliderview *sliderview )sliderview_change_cb164,3973
sliderview_init( Sliderview *sliderview )sliderview_init181,4338
sliderview_get_type( void )sliderview_get_type215,5535
sliderview_new( void )sliderview_new238,6016

expression.h,481
#define TYPE_EXPRESSION TYPE_EXPRESSION30,912
#define EXPRESSION(EXPRESSION31,960
#define EXPRESSION_CLASS(EXPRESSION_CLASS32,1041
#define IS_EXPRESSION(IS_EXPRESSION34,1146
#define IS_EXPRESSION_CLASS(IS_EXPRESSION_CLASS35,1218
struct _Expression {_Expression38,1310
	Classmodel parent_class;parent_class39,1331
typedef struct _ExpressionClass {_ExpressionClass46,1499
	ClassmodelClass parent_class;parent_class47,1533
} ExpressionClass;ExpressionClass51,1586

idialog.h,2141
#define IDIALOG_HIDIALOG_H31,954
#define TYPE_IDIALOG TYPE_IDIALOG37,1031
#define IDIALOG(IDIALOG38,1073
#define IDIALOG_CLASS(IDIALOG_CLASS39,1145
#define IS_IDIALOG(IS_IDIALOG41,1241
#define IS_IDIALOG_CLASS(IS_IDIALOG_CLASS42,1307
typedef struct _iDialog iDialog;iDialog45,1393
typedef void (*iDialogFreeFn)( iDialog *, void * );iDialogFreeFn47,1427
struct _iDialog {_iDialog49,1480
	iWindow parent_object;parent_object50,1498
	iObject *iobject;		/* Kill dialog if this obj goes */iobject54,1550
	guint destroy_sid;		/* Signal id for obj destroy */destroy_sid55,1605
	GtkWidget *work;		/* Our work area */work57,1659
	GtkWidget *hb;			hb58,1698
	GtkWidget *bb;bb59,1717
	GSList *ok_l;			/* List of OKbutton as set by user */ok_l61,1734
	GSList *ok_disp_l;		/* List of OKbutton as displayed */ok_disp_l62,1789
	GSList *ok_but_l;		/* List of OK GtkButton as displayed */ok_but_l63,1846
	GtkWidget *but_cancel;but_cancel65,1907
	GtkWidget *but_help;but_help66,1931
	GtkWidget *tog_pin;		/* Optional pinup widget */tog_pin67,1953
	GtkEntry *entry;		/* Last entry we added as default */entry69,2004
	gboolean modal;			/* Modal/non-modal */modal73,2077
	gboolean pinup;			/* Stay up on OK */pinup74,2118
	gboolean nosep;			/* Suppress hseparator */nosep75,2157
	gboolean button_focus;		/* TRUE to focus buttons */button_focus76,2202
	char *help_tag;help_tag81,2346
	const char *cancel_text;cancel_text87,2517
	iWindowBuildFn build;build91,2582
	void *build_a, *build_b, *build_c;build_a92,2605
	void *build_a, *build_b, *build_c;build_b92,2605
	void *build_a, *build_b, *build_c;build_c92,2605
	iWindowFn cancel_cb;cancel_cb96,2666
	iWindowFn popdown_cb;popdown_cb97,2688
	iDialogFreeFn destroy_cb;	/* Called from _destroy() */destroy_cb98,2711
	void *client;			/* Client data for callbacks */client99,2767
	void *arg;			/* Misc thing provided to client */arg101,2817
	iWindowNotifyFn nfn;nfn105,2911
	void *sys;sys106,2933
typedef struct _iDialogClass {_iDialogClass109,2949
	iWindowClass parent_class;parent_class110,2980
} iDialogClass;iDialogClass114,3031

subcolumnview.h,887
#define TYPE_SUBCOLUMNVIEW TYPE_SUBCOLUMNVIEW30,910
#define SUBCOLUMNVIEW(SUBCOLUMNVIEW31,964
#define SUBCOLUMNVIEW_CLASS(SUBCOLUMNVIEW_CLASS33,1057
#define IS_SUBCOLUMNVIEW(IS_SUBCOLUMNVIEW35,1171
#define IS_SUBCOLUMNVIEW_CLASS(IS_SUBCOLUMNVIEW_CLASS36,1249
struct _Subcolumnview {_Subcolumnview39,1347
	View view;view40,1371
	Rhsview *rhsview;rhsview44,1420
        GtkWidget *align; 	/* Alignment widget */align48,1467
        GtkWidget *table; 	/* Central tally area for column */table49,1517
        int rows;               /* Number of rows atm */rows50,1580
	int nvis;		/* Number of children currently visible */nvis51,1637
	GtkSizeGroup *group;	/* Align captions with this */     group52,1692
typedef struct _SubcolumnviewClass {_SubcolumnviewClass55,1754
	ViewClass parent_class;parent_class56,1791
} SubcolumnviewClass;SubcolumnviewClass60,1838

statusview.c,1223
static GtkFrameClass *parent_class = NULL;parent_class36,940
static GtkWidget *statusview_menu = NULL;statusview_menu40,1007
statusviewband_destroy_sub( StatusviewBand *svb )statusviewband_destroy_sub45,1130
statusviewband_destroy( Statusview *sv )statusviewband_destroy56,1305
statusview_destroy( GtkObject *object )statusview_destroy64,1477
statusview_hide_cb( GtkWidget *menu, GtkWidget *host, Statusview *sv )statusview_hide_cb85,1846
statusview_class_init( StatusviewClass *class )statusview_class_init92,2019
statusview_init( Statusview *sv )statusview_init114,2453
statusview_get_type( void )statusview_get_type157,3751
statusview_changed_cb( Imagemodel *imagemodel, Statusview *sv )statusview_changed_cb183,4280
statusview_link( Statusview *sv, Imagemodel *imagemodel )statusview_link283,6725
statusview_new( Imagemodel *imagemodel )statusview_new291,6935
statusview_mouse_LABPACK( Statusview *sv, int x, int y )statusview_mouse_LABPACK303,7158
statusview_mouse_RAD( Statusview *sv, int x, int y )statusview_mouse_RAD339,8109
statusview_mouse_band( StatusviewBand *svb, void *e )statusview_mouse_band373,8930
statusview_mouse( Statusview *sv, int x, int y )statusview_mouse447,10533

plot.h,1431
#define TYPE_PLOT TYPE_PLOT30,895
#define PLOT(PLOT31,931
#define PLOT_CLASS(PLOT_CLASS33,1009
#define IS_PLOT(IS_PLOT35,1098
#define IS_PLOT_CLASS(IS_PLOT_CLASS37,1173
#define PLOT_GET_CLASS(PLOT_GET_CLASS39,1255
	PLOT_FORMAT_YYYY = 0,PLOT_FORMAT_YYYY43,1363
	PLOT_FORMAT_XYYY,PLOT_FORMAT_XYYY44,1386
	PLOT_FORMAT_XYXY,PLOT_FORMAT_XYXY45,1405
	PLOT_FORMAT_LASTPLOT_FORMAT_LAST46,1424
} PlotFormat;PlotFormat47,1442
	PLOT_STYLE_POINT = 0,PLOT_STYLE_POINT50,1472
	PLOT_STYLE_LINE,PLOT_STYLE_LINE51,1495
	PLOT_STYLE_SPLINE,PLOT_STYLE_SPLINE52,1513
	PLOT_STYLE_BAR,PLOT_STYLE_BAR53,1533
	PLOT_STYLE_LASTPLOT_STYLE_LAST54,1550
} PlotStyle;PlotStyle55,1567
#define PLOT_RANGE_UNSET PLOT_RANGE_UNSET59,1650
struct _Plot {_Plot61,1686
	Classmodel model;model62,1701
	ImageValue value;value66,1749
	PlotFormat format;format67,1768
	PlotStyle style;style68,1788
	double xmin;xmin69,1806
	double xmax;xmax70,1820
	double ymin;ymin71,1834
	double ymax;ymax72,1848
	double **xcolumn;xcolumn76,1914
	double **ycolumn;ycolumn77,1933
	int rows;rows78,1952
	int columns;columns79,1963
	gboolean show_status;show_status84,2077
	int mag;mag85,2100
	int left, top;left86,2110
	int left, top;top86,2110
	VipsBuf caption_buffer;caption_buffer90,2176
typedef struct _PlotClass {_PlotClass93,2205
	ClassmodelClass parent_class;parent_class94,2233
} PlotClass;PlotClass98,2286

imageinfo.c,8543
static iContainerClass *imageinfogroup_parent_class = NULL;imageinfogroup_parent_class92,2668
imageinfogroup_finalize( GObject *gobject )imageinfogroup_finalize95,2741
imageinfogroup_child_add( iContainer *parent, iContainer *child, int pos )imageinfogroup_child_add105,3000
imageinfogroup_child_remove( iContainer *parent, iContainer *child )imageinfogroup_child_remove123,3565
imageinfogroup_class_init( ImageinfogroupClass *class )imageinfogroup_class_init154,4491
imageinfogroup_init( Imageinfogroup *imageinfogroup )imageinfogroup_init168,4925
imageinfogroup_get_type( void )imageinfogroup_get_type179,5138
imageinfogroup_new( void )imageinfogroup_new204,5778
imageinfogroup_lookup_test( Imageinfo *imageinfo, struct stat *buf )imageinfogroup_lookup_test213,5950
imageinfogroup_lookup( Imageinfogroup *imageinfogroup, const char *filename )imageinfogroup_lookup226,6239
	SIG_AREA_CHANGED,	/* Area of image has changed: update screen */SIG_AREA_CHANGED245,6677
	SIG_AREA_PAINTED,	/* Area of image has been painted */SIG_AREA_PAINTED246,6743
	SIG_UNDO_CHANGED,	/* Undo/redo state has changed */SIG_UNDO_CHANGED247,6799
	SIG_FILE_CHANGED,	/* Underlying file seems to have changed */SIG_FILE_CHANGED248,6852
	SIG_INVALIDATE,		/* IMAGE* has been invalidated */SIG_INVALIDATE249,6915
	SIG_LASTSIG_LAST250,6967
static ManagedClass *parent_class = NULL;parent_class253,6981
static guint imageinfo_signals[SIG_LAST] = { 0 };imageinfo_signals255,7024
imageinfo_print( Imageinfo *imageinfo )imageinfo_print260,7202
imageinfo_area_changed( Imageinfo *imageinfo, Rect *dirty )imageinfo_area_changed270,7370
imageinfo_area_painted( Imageinfo *imageinfo, Rect *dirty )imageinfo_area_painted287,7769
imageinfo_undo_changed( Imageinfo *imageinfo )imageinfo_undo_changed304,8175
imageinfo_file_changed( Imageinfo *imageinfo )imageinfo_file_changed315,8384
imageinfo_invalidate( Imageinfo *imageinfo )imageinfo_invalidate331,8705
imageinfo_expr_add( Imageinfo *imageinfo, Expr *expr )imageinfo_expr_add347,9011
imageinfo_expr_remove( Expr *expr, Imageinfo *imageinfo )imageinfo_expr_remove363,9420
imageinfo_expr_which( Imageinfo *imageinfo )imageinfo_expr_which383,9898
imageinfo_get_underlying( Imageinfo *imageinfo )imageinfo_get_underlying391,10035
imageinfo_undofragment_free( Undofragment *frag )imageinfo_undofragment_free402,10260
imageinfo_undobuffer_free( Undobuffer *undo )imageinfo_undobuffer_free411,10406
imageinfo_undo_free( Imageinfo *imageinfo )imageinfo_undo_free422,10664
imageinfo_dispose_eval( Imageinfo *imageinfo )imageinfo_dispose_eval434,11032
imageinfo_dispose( GObject *gobject )imageinfo_dispose447,11284
imageinfo_finalize( GObject *gobject )imageinfo_finalize470,11772
imageinfo_info( iObject *iobject, VipsBuf *buf )imageinfo_info510,12778
imageinfo_real_area_changed( Imageinfo *imageinfo, Rect *dirty )imageinfo_real_area_changed522,13075
imageinfo_real_area_painted( Imageinfo *imageinfo, Rect *dirty )imageinfo_real_area_painted527,13157
imageinfo_real_undo_changed( Imageinfo *imageinfo )imageinfo_real_undo_changed536,13380
imageinfo_real_file_changed( Imageinfo *imageinfo )imageinfo_real_file_changed541,13449
imageinfo_real_invalidate( Imageinfo *imageinfo )imageinfo_real_invalidate546,13518
imageinfo_class_init( ImageinfoClass *class )imageinfo_class_init551,13585
imageinfo_init( Imageinfo *imageinfo )imageinfo_init616,15635
imageinfo_get_type( void )imageinfo_get_type644,16221
imageinfo_proxy_eval( Imageinfoproxy *proxy )imageinfo_proxy_eval669,16762
imageinfo_proxy_invalidate( Imageinfoproxy *proxy )imageinfo_proxy_invalidate684,17095
imageinfo_proxy_preclose( Imageinfoproxy *proxy )imageinfo_proxy_preclose695,17276
imageinfo_proxy_add( Imageinfo *imageinfo )imageinfo_proxy_add710,17548
imageinfo_new( Imageinfogroup *imageinfogroup, imageinfo_new752,18732
imageinfo_set_underlying( Imageinfo *top_imageinfo, Imageinfo *imageinfo )imageinfo_set_underlying790,19598
imageinfo_new_temp( Imageinfogroup *imageinfogroup, imageinfo_new_temp802,19930
typedef struct _ImageinfoOpen {_ImageinfoOpen822,20407
	Imageinfogroup *imageinfogroup;imageinfogroup823,20439
	Heap *heap;heap824,20472
	const char *filename;filename825,20485
	GtkWidget *parent;parent826,20508
} ImageinfoOpen;ImageinfoOpen827,20528
imageinfo_open_image_input( const char *filename, ImageinfoOpen *open )imageinfo_open_image_input833,20653
imageinfo_is_from_file( Imageinfo *imageinfo )imageinfo_is_from_file904,22462
imageinfo_attach_check_cb( Imageinfo *imageinfo )imageinfo_attach_check_cb910,22589
imageinfo_attach_check( Imageinfo *imageinfo )imageinfo_attach_check928,23025
imageinfo_new_input( Imageinfogroup *imageinfogroup, GtkWidget *parent,imageinfo_new_input955,23716
imageinfo_get_identity_lut( Imageinfo *imageinfo )imageinfo_get_identity_lut992,24652
imageinfo_get_mapped( Imageinfo *imageinfo )imageinfo_get_mapped1021,25331
imageinfo_get( gboolean use_lut, Imageinfo *imageinfo )imageinfo_get1051,26026
imageinfo_same_underlying( Imageinfo *imageinfo[], int n )imageinfo_same_underlying1076,26599
imageinfo_write( Imageinfo *imageinfo, const char *name )imageinfo_write1096,26937
imageinfo_make_paintable( Imageinfo *imageinfo )imageinfo_make_paintable1127,27727
imageinfo_check_paintable_cb( iWindow *iwnd, void *client, imageinfo_check_paintable_cb1147,28157
imageinfo_check_paintable( Imageinfo *imageinfo, GtkWidget *parent,imageinfo_check_paintable1164,28548
imageinfo_sym_image( Symbol *sym )imageinfo_sym_image1205,29582
imageinfo_undofragment_new( Undobuffer *undo )imageinfo_undofragment_new1216,29834
imageinfo_undobuffer_new( Imageinfo *imageinfo )imageinfo_undobuffer_new1227,30013
imageinfo_undo_grab_area( IMAGE *im, Rect *dirty )imageinfo_undo_grab_area1247,30412
imageinfo_undo_grab( Undobuffer *undo, Rect *dirty )imageinfo_undo_grab1272,30914
imageinfo_undo_trim( Imageinfo *imageinfo )imageinfo_undo_trim1309,31770
imageinfo_undo_mark( Imageinfo *imageinfo )imageinfo_undo_mark1341,32555
imageinfo_undo_add( Imageinfo *imageinfo, Rect *dirty )imageinfo_undo_add1379,33740
imageinfo_undofragment_paste( Undofragment *frag )imageinfo_undofragment_paste1479,36302
imageinfo_undobuffer_paste( Undobuffer *undo )imageinfo_undobuffer_paste1494,36679
imageinfo_undo( Imageinfo *imageinfo )imageinfo_undo1503,36847
imageinfo_redo( Imageinfo *imageinfo )imageinfo_redo1548,37833
imageinfo_undo_clear( Imageinfo *imageinfo )imageinfo_undo_clear1591,38788
imageinfo_draw_point_cb( IMAGE *im, int x, int y, void *a, void *b, void *c )imageinfo_draw_point_cb1598,38922
imageinfo_paint_line( Imageinfo *imageinfo, imageinfo_paint_line1610,39173
imageinfo_paint_smudge( Imageinfo *imageinfo, imageinfo_paint_smudge1656,40317
imageinfo_paint_flood( Imageinfo *imageinfo, Imageinfo *ink, imageinfo_paint_flood1690,41012
imageinfo_paint_dropper( Imageinfo *imageinfo, Imageinfo *ink, int x, int y )imageinfo_paint_dropper1726,41803
imageinfo_paint_rect( Imageinfo *imageinfo, Imageinfo *ink, Rect *area )imageinfo_paint_rect1752,42321
imageinfo_paint_text( Imageinfo *imageinfo, imageinfo_paint_text1775,42865
imageinfo_paint_nib( Imageinfo *imageinfo, int radius )imageinfo_paint_nib1800,43427
imageinfo_paint_mask( Imageinfo *imageinfo, imageinfo_paint_mask1835,44082
imageinfo_to_text( Imageinfo *imageinfo, VipsBuf *buf )imageinfo_to_text1873,44991
#define PRINT_INT(PRINT_INT1879,45134
#define PRINT_FLOAT(PRINT_FLOAT1880,45204
imageinfo_from_text_band( Imageinfo *imageinfo, int i, double re, double im )imageinfo_from_text_band1945,46457
#define SET_INT(SET_INT1954,46702
#define SET_FLOAT(SET_FLOAT1955,46761
imageinfo_from_text( Imageinfo *imageinfo, const char *text )imageinfo_from_text2013,47777
imageinfo_to_rgb( Imageinfo *imageinfo, double *rgb )imageinfo_to_rgb2072,48895
imageinfo_from_rgb( Imageinfo *imageinfo, double *rgb )imageinfo_from_rgb2127,50028
#define SET(SET2231,52492
typedef struct _ColourEdit {_ColourEdit2311,54094
	iDialog *idlg;idlg2312,54123
	Imageinfo *imageinfo;imageinfo2314,54140
	GtkWidget *colour_widget;colour_widget2315,54163
} ColourEdit;ColourEdit2316,54190
imageinfo_colour_done_cb( iWindow *iwnd, void *client, imageinfo_colour_done_cb2321,54241
imageinfo_colour_buildedit( iDialog *idlg, GtkWidget *work, ColourEdit *eds )imageinfo_colour_buildedit2341,54697
imageinfo_colour_edit( GtkWidget *parent, Imageinfo *imageinfo )imageinfo_colour_edit2359,55237

formula.c,2293
	EDIT,		EDIT40,1031
	CHANGED,		CHANGED41,1040
	ACTIVATE,	ACTIVATE42,1052
	ENTER,	ENTER43,1064
	LEAVE,	LEAVE44,1073
	LAST_SIGNALLAST_SIGNAL45,1082
static GtkEventBoxClass *parent_class = NULL;parent_class48,1099
static guint formula_signals[LAST_SIGNAL] = { 0 };formula_signals50,1146
static GSList *formula_refresh_all = NULL;formula_refresh_all54,1232
static gint formula_refresh_idle = 0;formula_refresh_idle58,1343
formula_refresh_unqueue( Formula *formula )formula_refresh_unqueue63,1420
formula_key_press_event_cb( GtkWidget *widget, GdkEventKey *ev, formula_key_press_event_cb78,1756
formula_activate( Formula *formula )formula_activate106,2269
formula_activate_cb( GtkWidget *wid, Formula *formula )formula_activate_cb112,2392
formula_changed( Formula *formula )formula_changed120,2571
formula_add_edit( Formula *formula )formula_add_edit128,2716
formula_refresh( Formula *formula )formula_refresh163,4085
formula_refresh_idle_cb( void )formula_refresh_idle_cb220,5769
formula_refresh_queue( Formula *formula )formula_refresh_queue235,6028
formula_destroy( GtkObject *object )formula_destroy249,6358
formula_set_edit( Formula *formula, gboolean edit )formula_set_edit275,6839
formula_set_needs_focus( Formula *formula, gboolean needs_focus )formula_set_needs_focus294,7204
formula_set_sensitive( Formula *formula, gboolean sensitive )formula_set_sensitive309,7521
formula_scan( Formula *formula )formula_scan328,7914
formula_enter_notify_event( GtkWidget *widget, GdkEventCrossing *event )formula_enter_notify_event361,8517
formula_leave_notify_event( GtkWidget *widget, GdkEventCrossing *event )formula_leave_notify_event380,9004
formula_button_press_event( GtkWidget *widget, GdkEventButton *event )formula_button_press_event401,9519
formula_real_changed( Formula *formula )formula_real_changed422,9939
formula_class_init( FormulaClass *class )formula_class_init432,10091
formula_init( Formula *formula )formula_init489,11761
formula_get_type( void )formula_get_type539,13276
formula_new( void )formula_new563,13750
formula_set_caption( Formula *formula, const char *caption )formula_set_caption571,13851
formula_set_value_expr( Formula *formula, const char *value, const char *expr )formula_set_value_expr585,14203

nipmarshal.c,2774
#define g_marshal_value_peek_boolean(g_marshal_value_peek_boolean7,74
#define g_marshal_value_peek_char(g_marshal_value_peek_char8,139
#define g_marshal_value_peek_uchar(g_marshal_value_peek_uchar9,201
#define g_marshal_value_peek_int(g_marshal_value_peek_int10,264
#define g_marshal_value_peek_uint(g_marshal_value_peek_uint11,325
#define g_marshal_value_peek_long(g_marshal_value_peek_long12,387
#define g_marshal_value_peek_ulong(g_marshal_value_peek_ulong13,449
#define g_marshal_value_peek_int64(g_marshal_value_peek_int6414,512
#define g_marshal_value_peek_uint64(g_marshal_value_peek_uint6415,575
#define g_marshal_value_peek_enum(g_marshal_value_peek_enum16,639
#define g_marshal_value_peek_flags(g_marshal_value_peek_flags17,701
#define g_marshal_value_peek_float(g_marshal_value_peek_float18,764
#define g_marshal_value_peek_double(g_marshal_value_peek_double19,827
#define g_marshal_value_peek_string(g_marshal_value_peek_string20,891
#define g_marshal_value_peek_param(g_marshal_value_peek_param21,963
#define g_marshal_value_peek_boxed(g_marshal_value_peek_boxed22,1026
#define g_marshal_value_peek_pointer(g_marshal_value_peek_pointer23,1089
#define g_marshal_value_peek_object(g_marshal_value_peek_object24,1154
#define g_marshal_value_peek_boolean(g_marshal_value_peek_boolean30,1437
#define g_marshal_value_peek_char(g_marshal_value_peek_char31,1497
#define g_marshal_value_peek_uchar(g_marshal_value_peek_uchar32,1557
#define g_marshal_value_peek_int(g_marshal_value_peek_int33,1618
#define g_marshal_value_peek_uint(g_marshal_value_peek_uint34,1678
#define g_marshal_value_peek_long(g_marshal_value_peek_long35,1739
#define g_marshal_value_peek_ulong(g_marshal_value_peek_ulong36,1800
#define g_marshal_value_peek_int64(g_marshal_value_peek_int6437,1862
#define g_marshal_value_peek_uint64(g_marshal_value_peek_uint6438,1924
#define g_marshal_value_peek_enum(g_marshal_value_peek_enum39,1987
#define g_marshal_value_peek_flags(g_marshal_value_peek_flags40,2048
#define g_marshal_value_peek_float(g_marshal_value_peek_float41,2110
#define g_marshal_value_peek_double(g_marshal_value_peek_double42,2172
#define g_marshal_value_peek_string(g_marshal_value_peek_string43,2235
#define g_marshal_value_peek_param(g_marshal_value_peek_param44,2299
#define g_marshal_value_peek_boxed(g_marshal_value_peek_boxed45,2363
#define g_marshal_value_peek_pointer(g_marshal_value_peek_pointer46,2427
#define g_marshal_value_peek_object(g_marshal_value_peek_object47,2491
nip_VOID__OBJECT_INT (GClosure     *closure,nip_VOID__OBJECT_INT53,2634
nip_VOID__DOUBLE_DOUBLE (GClosure     *closure,nip_VOID__DOUBLE_DOUBLE90,3958
nip_BOOLEAN__INT_INT (GClosure     *closure,nip_BOOLEAN__INT_INT127,5318

gtksheetwidget.h,9912
#define __GTK_SHEETWIDGET_H____GTK_SHEETWIDGET_H__24,1015
  GTK_SHEET_FOREGROUND,GTK_SHEET_FOREGROUND36,1136
  GTK_SHEET_BACKGROUND,GTK_SHEET_BACKGROUND37,1160
  GTK_SHEET_FONT,GTK_SHEET_FONT38,1184
  GTK_SHEET_JUSTIFICATION,GTK_SHEET_JUSTIFICATION39,1202
  GTK_SHEET_BORDER,GTK_SHEET_BORDER40,1229
  GTK_SHEET_BORDER_COLOR,GTK_SHEET_BORDER_COLOR41,1249
  GTK_SHEET_IS_EDITABLE,GTK_SHEET_IS_EDITABLE42,1275
  GTK_SHEET_IS_VISIBLEGTK_SHEET_IS_VISIBLE43,1300
} GtkSheetAttrType;GtkSheetAttrType44,1323
  GTK_SHEET_NORMAL,             /* Nothing selected */GTK_SHEET_NORMAL51,1386
  GTK_SHEET_ROW_SELECTED,       /* A single row is selected */GTK_SHEET_ROW_SELECTED52,1441
  GTK_SHEET_COLUMN_SELECTED,    /* A single column is selected */GTK_SHEET_COLUMN_SELECTED53,1504
  GTK_SHEET_RANGE_SELECTED      /* A range of cells is selected */GTK_SHEET_RANGE_SELECTED54,1570
} GtkSheetState;GtkSheetState55,1637
  GTK_SHEET_LEFT_BORDER     = 1 << 0, GTK_SHEET_LEFT_BORDER65,1809
  GTK_SHEET_RIGHT_BORDER    = 1 << 1, GTK_SHEET_RIGHT_BORDER66,1848
  GTK_SHEET_TOP_BORDER      = 1 << 2, GTK_SHEET_TOP_BORDER67,1887
  GTK_SHEET_BOTTOM_BORDER   = 1 << 3 GTK_SHEET_BOTTOM_BORDER68,1926
} GtkSheetBorderFlags; GtkSheetBorderFlags69,1964
#define GTK_TYPE_SHEET_CELL_BORDER GTK_TYPE_SHEET_CELL_BORDER71,1989
#define GTK_TYPE_SHEET_CELL_ATTR GTK_TYPE_SHEET_CELL_ATTR72,2060
#define GTK_TYPE_SHEET_RANGE GTK_TYPE_SHEET_RANGE73,2127
#define GTK_TYPE_SHEET GTK_TYPE_SHEET75,2187
#define GTK_SHEET(GTK_SHEET76,2234
#define GTK_SHEET_CLASS(GTK_SHEET_CLASS77,2328
#define GTK_IS_SHEET(GTK_IS_SHEET78,2427
#define GTK_IS_SHEET_CLASS(GTK_IS_SHEET_CLASS79,2512
#define GTK_SHEET_GET_CLASS(GTK_SHEET_GET_CLASS80,2603
#define GTK_SHEET_IS_LOCKED(GTK_SHEET_IS_LOCKED84,2749
#define GTK_SHEET_ROW_FROZEN(GTK_SHEET_ROW_FROZEN85,2814
#define GTK_SHEET_COLUMN_FROZEN(GTK_SHEET_COLUMN_FROZEN86,2888
#define GTK_SHEET_AUTORESIZE(GTK_SHEET_AUTORESIZE87,2965
#define GTK_SHEET_CLIP_TEXT(GTK_SHEET_CLIP_TEXT88,3034
#define GTK_SHEET_ROW_TITLES_VISIBLE(GTK_SHEET_ROW_TITLES_VISIBLE89,3102
#define GTK_SHEET_COL_TITLES_VISIBLE(GTK_SHEET_COL_TITLES_VISIBLE90,3184
#define GTK_SHEET_AUTO_SCROLL(GTK_SHEET_AUTO_SCROLL91,3270
#define GTK_SHEET_JUSTIFY_ENTRY(GTK_SHEET_JUSTIFY_ENTRY92,3339
typedef struct _GtkSheet GtkSheet;GtkSheet96,3414
typedef struct _GtkSheetClass GtkSheetClass;GtkSheetClass97,3449
typedef struct _GtkSheetChild GtkSheetChild;GtkSheetChild98,3494
typedef struct _GtkSheetRow GtkSheetRow;GtkSheetRow99,3539
typedef struct _GtkSheetColumn GtkSheetColumn;GtkSheetColumn100,3580
typedef struct _GtkSheetCell GtkSheetCell;GtkSheetCell101,3627
typedef struct _GtkSheetRange GtkSheetRange;GtkSheetRange102,3670
typedef struct _GtkSheetButton       GtkSheetButton;GtkSheetButton103,3715
typedef struct _GtkSheetCellAttr     GtkSheetCellAttr;GtkSheetCellAttr104,3768
typedef struct _GtkSheetCellBorder     GtkSheetCellBorder;GtkSheetCellBorder105,3823
struct _GtkSheetChild_GtkSheetChild137,5679
  GtkWidget *widget;widget139,5704
  gint x,y ;x140,5725
  gint x,y ;y140,5725
  gboolean attached_to_cell;attached_to_cell141,5738
  gboolean floating;floating142,5767
  gint row, col;row143,5788
  gint row, col;col143,5788
  guint16 xpadding;xpadding144,5805
  guint16 ypadding;ypadding145,5825
  gboolean xexpand;xexpand146,5845
  gboolean yexpand;yexpand147,5865
  gboolean xshrink;xshrink148,5885
  gboolean yshrink;yshrink149,5905
  gboolean xfill;xfill150,5925
  gboolean yfill;yfill151,5943
struct _GtkSheetButton_GtkSheetButton161,6122
  GtkStateType state;state164,6165
  gchar *label;label165,6187
  gboolean label_visible;label_visible167,6204
  GtkSheetChild *child;child168,6230
  GtkJustification justification;justification170,6255
struct _GtkSheetCellBorder_GtkSheetCellBorder180,6458
  gint8 mask;mask183,6505
  guint width;width184,6519
  GdkLineStyle line_style;line_style185,6534
  GdkCapStyle cap_style;cap_style186,6561
  GdkJoinStyle join_style;join_style187,6586
  GdkColor color;color188,6613
struct _GtkSheetCellAttr_GtkSheetCellAttr197,6795
  GtkJustification justification;justification200,6840
  PangoFontDescription *font_desc;font_desc201,6874
  GdkColor foreground;foreground202,6909
  GdkColor background;background203,6932
  GtkSheetCellBorder border;border204,6955
  gboolean is_editable;is_editable205,6984
  gboolean is_visible;is_visible206,7008
struct _GtkSheetCell_GtkSheetCell215,7187
  GdkRectangle area;area218,7229
  gint row;row219,7250
  gint col;col220,7262
  GtkSheetCellAttr *attributes;attributes222,7275
  gchar *text;text224,7308
  gpointer link;link225,7323
struct _GtkSheetRange_GtkSheetRange236,7671
  gint row0,col0; /* upper-left cell */row0238,7695
  gint row0,col0; /* upper-left cell */col0238,7695
  gint rowi,coli; /* bottom-right cell */rowi239,7735
  gint rowi,coli; /* bottom-right cell */coli239,7735
struct _GtkSheetRow_GtkSheetRow249,7932
 gchar *name;name252,7971
 gint height;height253,7985
 gint top_ypixel;top_ypixel254,7999
 guint16 requisition;requisition255,8017
 GtkSheetButton button;button257,8040
 gboolean is_sensitive;is_sensitive258,8064
 gboolean is_visible;is_visible259,8088
struct _GtkSheetColumn_GtkSheetColumn268,8270
 gchar *name;name271,8312
 gint width;width272,8326
 gint left_xpixel;left_xpixel273,8339
 guint16 requisition;requisition274,8358
 GtkSheetButton button;button276,8381
 gint left_text_column; /* min left column displaying text on this column */left_text_column278,8406
 gint right_text_column; /* max right column displaying text on this column */right_text_column279,8483
 GtkJustification justification;justification281,8563
 gboolean is_sensitive;is_sensitive282,8596
 gboolean is_visible;is_visible283,8620
struct _GtkSheet{_GtkSheet293,8791
  GtkContainer container;container294,8809
  guint16 flags;flags296,8836
  GtkSelectionMode selection_mode;selection_mode298,8854
  gboolean autoresize;autoresize299,8889
  gboolean autoscroll;autoscroll300,8912
  gboolean clip_text;clip_text301,8935
  gboolean justify_entry;justify_entry302,8957
  gboolean locked;locked303,8983
  guint freeze_count;freeze_count305,9003
  GdkColor bg_color;bg_color308,9052
  GdkColor grid_color;grid_color309,9073
  gboolean show_grid;show_grid310,9096
  GList *children;children313,9142
  GdkRectangle internal_allocation;internal_allocation317,9264
  gchar *name;name319,9301
  GtkSheetRow *row;row321,9317
  GtkSheetColumn *column;column322,9337
  gboolean rows_resizable;rows_resizable324,9364
  gboolean columns_resizable;columns_resizable325,9391
  gint maxrow;maxrow328,9459
  gint maxcol;maxcol329,9474
  GtkSheetRange view; view333,9515
  GtkSheetCell ***data;data336,9604
  gint maxallocrow;maxallocrow339,9667
  gint maxalloccol;maxalloccol340,9687
  GtkSheetCell active_cell;active_cell343,9728
  GtkWidget *sheet_entry;sheet_entry344,9756
  GtkType entry_type;entry_type346,9783
  GtkSheetCell selection_cell;selection_cell349,9834
  gint32 timer;timer352,9920
  gint32 clip_timer;clip_timer354,9977
  gint interval;interval355,9998
  GtkWidget *button;button358,10048
  gint state;state361,10090
  GtkSheetRange range;range364,10128
  GdkWindow *sheet_window;sheet_window368,10244
  guint sheet_window_width;sheet_window_width369,10271
  guint sheet_window_height;sheet_window_height370,10299
  GdkWindow *pixmap;    pixmap373,10360
  gint hoffset;hoffset376,10416
  gint voffset;voffset377,10432
  gfloat old_hadjustment;old_hadjustment378,10448
  gfloat old_vadjustment;old_vadjustment379,10474
  GtkShadowType shadow_type;shadow_type382,10531
  GdkRectangle column_title_area;column_title_area385,10585
  GdkWindow *column_title_window;column_title_window386,10619
  gboolean column_titles_visible;column_titles_visible387,10653
  GdkRectangle row_title_area;row_title_area390,10707
  GdkWindow *row_title_window;row_title_window391,10738
  gboolean row_titles_visible;row_titles_visible392,10769
  GtkAdjustment *hadjustment;hadjustment395,10818
  GtkAdjustment *vadjustment;vadjustment396,10848
  GdkGC *xor_gc;xor_gc399,10921
  GdkGC *fg_gc;fg_gc402,10979
  GdkGC *bg_gc;bg_gc403,10995
  GdkCursor *cursor_drag;cursor_drag406,11053
  gint x_drag;x_drag409,11139
  gint y_drag;y_drag412,11214
  GtkSheetCell drag_cell;drag_cell415,11265
  GtkSheetRange drag_range;drag_range417,11327
  GtkSheetRange clip_range;clip_range420,11378
struct _GtkSheetClass_GtkSheetClass423,11410
 GtkContainerClass parent_class;parent_class425,11434
 void (*set_scroll_adjustments) (GtkSheet *sheet,set_scroll_adjustments427,11469
 void (*select_row) 		(GtkSheet *sheet, gint row);select_row431,11587
 void (*select_column) 		(GtkSheet *sheet, gint column);select_column433,11639
 void (*select_range) 		(GtkSheet *sheet, GtkSheetRange *range);select_range435,11697
 void (*unselect_range) 	(GtkSheet *sheet, GtkSheetRange *range);unselect_range437,11763
 void (*clip_range) 		(GtkSheet *sheet, GtkSheetRange *clip_range);clip_range439,11830
 void (*resize_range)		(GtkSheet *sheet,resize_range441,11899
 void (*move_range)    		(GtkSheet *sheet,move_range445,12037
 gboolean (*traverse)       	(GtkSheet *sheet,traverse449,12177
 gboolean (*deactivate)	 	(GtkSheet *sheet,deactivate453,12334
 gboolean (*activate) 		(GtkSheet *sheet,activate456,12423
 void (*set_cell) 		(GtkSheet *sheet,set_cell459,12508
 void (*clear_cell) 		(GtkSheet *sheet,clear_cell462,12585
 void (*changed) 		(GtkSheet *sheet,changed465,12664
 void (*new_column_width)       (GtkSheet *sheet,new_column_width468,12739
 void (*new_row_height)       	(GtkSheet *sheet,new_row_height472,12880

sliderview.h,594
#define TYPE_SLIDERVIEW TYPE_SLIDERVIEW30,901
#define SLIDERVIEW(SLIDERVIEW31,949
#define SLIDERVIEW_CLASS(SLIDERVIEW_CLASS32,1030
#define IS_SLIDERVIEW(IS_SLIDERVIEW34,1135
#define IS_SLIDERVIEW_CLASS(IS_SLIDERVIEW_CLASS35,1207
typedef struct _Sliderview {_Sliderview38,1299
	Graphicview parent_object;parent_object39,1328
	GtkWidget *label;label43,1384
	Tslider *tslider;tslider44,1403
} Sliderview;Sliderview45,1422
typedef struct _SliderviewClass {_SliderviewClass47,1437
	GraphicviewClass parent_class;parent_class48,1471
} SliderviewClass;SliderviewClass52,1525

colour.c,1503
static const char *colour_colour_space[] = {colour_colour_space38,1023
static const int colour_type[] = {colour_type52,1360
static ClassmodelClass *parent_class = NULL;parent_class64,1530
colour_finalize( GObject *gobject )colour_finalize67,1588
typedef struct _ColourEdit {_ColourEdit79,1827
	iDialog *idlg;idlg80,1856
	Colour *colour;colour82,1873
	GtkWidget *colour_widget;colour_widget83,1890
} ColourEdit;ColourEdit84,1917
colour_get_vips_type( Colour *colour )colour_get_vips_type89,1996
#define DEQ(DEQ112,2491
colour_refresh( Colour *colour )colour_refresh117,2613
colour_set_colour( Colour *colour, colour_set_colour126,2852
colour_ii_new( Colour *colour )colour_ii_new151,3425
colour_get_rgb( Colour *colour, double rgb[4] )colour_get_rgb177,4023
colour_set_rgb( Colour *colour, double rgb[4] )colour_set_rgb186,4188
colour_done_cb( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys )colour_done_cb216,4966
colour_buildedit( iDialog *idlg, GtkWidget *work, ColourEdit *eds )colour_buildedit233,5337
colour_edit( GtkWidget *parent, Model *model )colour_edit251,5860
colour_view_new( Model *model, View *parent )colour_view_new280,6762
colour_update_model( Heapmodel *heapmodel )colour_update_model286,6856
static ClassmodelMember colour_members[] = {colour_members300,7118
colour_class_init( ColourClass *class )colour_class_init310,7445
colour_init( Colour *colour )colour_init340,8188
colour_get_type( void )colour_get_type352,8450

fontnameview.c,675
static GraphicviewClass *parent_class = NULL;parent_class36,958
fontnameview_destroy( GtkObject *object )fontnameview_destroy39,1017
fontnameview_link( View *view, Model *model, View *parent )fontnameview_link56,1355
fontnameview_refresh( vObject *vobject )fontnameview_refresh68,1672
fontnameview_class_init( FontnameviewClass *class )fontnameview_class_init90,2248
fontnameview_changed_cb( Fontbutton *fontbutton, Fontnameview *fontnameview )fontnameview_changed_cb111,2714
fontnameview_init( Fontnameview *fontnameview )fontnameview_init124,3115
fontnameview_get_type( void )fontnameview_get_type151,4003
fontnameview_new( void )fontnameview_new174,4502

panechild.c,535
static ViewClass *parent_class = NULL;parent_class36,980
panechild_finalize( GObject *gobject )panechild_finalize39,1032
panechild_refresh( vObject *vobject )panechild_refresh55,1323
panechild_class_init( PanechildClass *class )panechild_class_init69,1601
panechild_hide_cb( GtkWidget *wid, Panechild *panechild )panechild_hide_cb82,1920
panechild_init( Panechild *panechild )panechild_init88,2036
panechild_get_type( void )panechild_get_type122,3094
panechild_new( Pane *pane, const char *title )panechild_new147,3635

statusview.h,1198
#define TYPE_STATUSVIEW TYPE_STATUSVIEW30,935
#define STATUSVIEW(STATUSVIEW31,983
#define STATUSVIEW_CLASS(STATUSVIEW_CLASS32,1064
#define IS_STATUSVIEW(IS_STATUSVIEW34,1169
#define IS_STATUSVIEW_CLASS(IS_STATUSVIEW_CLASS35,1241
typedef struct _StatusviewBand {_StatusviewBand40,1382
	Statusview *sv;		/* Bar we're in */sv41,1415
	int bandno;		/* Band we extract */bandno42,1452
	GtkWidget *val;		/* Label we write to */val43,1488
} StatusviewBand;StatusviewBand44,1530
struct _Statusview {_Statusview46,1549
	GtkFrame parent_class;parent_class47,1570
	Imagemodel *imagemodel;imagemodel49,1595
	guint changed_sid;changed_sid50,1620
	GtkWidget *top;		/* Top label */top52,1641
	GtkWidget *pos;		/* Position */pos53,1675
	GtkWidget *hb;		/* Band element hbox */hb54,1708
	GtkWidget *mag;		/* Magnification display */mag55,1749
	GSList *bands;		/* List of StatusviewBand */bands56,1795
	int nb;			/* Last number of bands we saw */nb57,1841
	int fmt;		/* The last bandfmt we set ... for spacing */fmt58,1886
typedef struct _StatusviewClass {_StatusviewClass61,1947
	GtkFrameClass parent_class;parent_class62,1981
} StatusviewClass;StatusviewClass66,2032

rhsview.c,678
static ViewClass *parent_class = NULL;parent_class37,996
rhsview_destroy( GtkObject *object )rhsview_destroy40,1048
rhsview_reset( View *view )rhsview_reset62,1425
rhsview_refresh( vObject *vobject )rhsview_refresh76,1744
rhsview_link( View *view, Model *model, View *parent )rhsview_link132,3072
rhsview_child_add( View *parent, View *child )rhsview_child_add149,3433
rhsview_child_remove( View *parent, View *child )rhsview_child_remove174,4089
rhsview_class_init( RhsviewClass *class )rhsview_class_init189,4409
rhsview_init( Rhsview *rhsview )rhsview_init213,4977
rhsview_get_type( void )rhsview_get_type233,5401
rhsview_new( void )rhsview_new256,5859

imageinfo.h,3265
#define ORIGINAL_FILENAME ORIGINAL_FILENAME32,951
#define TYPE_IMAGEINFOGROUP TYPE_IMAGEINFOGROUP37,1033
#define IMAGEINFOGROUP(IMAGEINFOGROUP38,1089
#define IMAGEINFOGROUP_CLASS(IMAGEINFOGROUP_CLASS41,1201
#define IS_IMAGEINFOGROUP(IS_IMAGEINFOGROUP44,1324
#define IS_IMAGEINFOGROUP_CLASS(IS_IMAGEINFOGROUP_CLASS46,1419
#define IMAGEINFOGROUP_GET_CLASS(IMAGEINFOGROUP_GET_CLASS48,1521
typedef struct _Imageinfogroup {_Imageinfogroup52,1648
	iContainer parent_object;parent_object53,1681
	GHashTable *filename_hash;filename_hash60,1955
} Imageinfogroup;Imageinfogroup61,1983
typedef struct _ImageinfogroupClass {_ImageinfogroupClass63,2002
	iContainerClass parent_class;parent_class64,2040
} ImageinfogroupClass;ImageinfogroupClass66,2072
#define TYPE_IMAGEINFO TYPE_IMAGEINFO74,2198
#define IMAGEINFO(IMAGEINFO75,2244
#define IMAGEINFO_CLASS(IMAGEINFO_CLASS77,2337
#define IS_IMAGEINFO(IS_IMAGEINFO79,2441
#define IS_IMAGEINFO_CLASS(IS_IMAGEINFO_CLASS81,2526
#define IMAGEINFO_GET_CLASS(IMAGEINFO_GET_CLASS83,2618
typedef struct _Undofragment {_Undofragment88,2763
	struct _Undobuffer *undo;	/* Main undo area */undo89,2794
	IMAGE *im;			/* Old area */im90,2842
	Rect pos;			/* Where we took it from */pos91,2871
} Undofragment;Undofragment92,2912
typedef struct _Undobuffer {_Undobuffer97,3033
	struct _Imageinfo *imageinfo;	/* Main paint area */imageinfo98,3062
	GSList *frags;			/* List of paint fragments */frags99,3115
	Rect bbox;			/* Bounding box for frags */bbox100,3163
} Undobuffer;Undobuffer101,3206
typedef struct _Imageinfoproxy {_Imageinfoproxy107,3431
	IMAGE *im;im108,3464
	Imageinfo *imageinfo;imageinfo109,3476
} Imageinfoproxy;Imageinfoproxy110,3499
struct _Imageinfo {_Imageinfo114,3557
	Managed parent_object;parent_object115,3577
	IMAGE *im;		/* Image we manage, LUT if delayed */im117,3602
	IMAGE *mapped_im;	/* Cache image mapped-thru-lut here */mapped_im118,3653
	IMAGE *identity_lut;	/* For base images, keep an id lut if poss */identity_lut119,3711
	Imageinfo *underlying;	/* If we're a LUT, the image we are a LUT of */underlying120,3779
	Imageinfoproxy *proxy;	/* Proxy for IMAGE callbacks */proxy121,3851
	gboolean dfile;		/* delete_file on final close */dfile123,3908
	gboolean from_file;	/* Set if ->name is a user file */from_file125,3960
	time_t mtime;		/* What mtime was when we loaded this file */mtime126,4016
	GSList *exprs;exprs131,4173
	gboolean ok_to_paint;ok_to_paint136,4279
	GSList *undo;			/* List of undo buffers */undo140,4331
	GSList *redo;			/* List of redo buffers */redo141,4375
	Undobuffer *cundo;		/* Current buffer */cundo142,4419
	gboolean monitored;monitored146,4515
	time_t check_mtime;check_mtime151,4639
	guint check_tid;check_tid152,4660
typedef struct _ImageinfoClass {_ImageinfoClass155,4682
	ManagedClass parent_class;parent_class156,4715
	void (*area_changed)( Imageinfo *, Rect * );area_changed162,4902
	void (*area_painted)( Imageinfo *, Rect * );area_painted167,5051
	void (*invalidate)( Imageinfo * );invalidate173,5273
	void (*undo_changed)( Imageinfo * );undo_changed177,5358
	void (*file_changed)( Imageinfo * );file_changed182,5483
} ImageinfoClass;ImageinfoClass183,5521

pane.c,1464
	SIG_CHANGED,	/* Change to position or openness */SIG_CHANGED39,989
	SIG_LASTSIG_LAST40,1040
static GtkHPanedClass *parent_class = NULL;parent_class43,1054
static guint pane_signals[SIG_LAST] = { 0 };pane_signals45,1099
pane_handedness2char( PaneHandedness handedness )pane_handedness2char49,1172
pane_changed( Pane *pane )pane_changed60,1411
pane_closed_position( Pane *pane )pane_closed_position73,1669
pane_open_position( Pane *pane )pane_open_position85,1981
pane_destroy( GtkObject *object )pane_destroy100,2264
pane_class_init( PaneClass *class )pane_class_init122,2693
pane_notify_position_cb( Pane *pane )pane_notify_position_cb146,3312
pane_init( Pane *pane )pane_init193,4458
pane_get_type( void )pane_get_type210,4867
pane_set_position( Pane *pane, int position )pane_set_position238,5408
pane_set_user_position( Pane *pane, int user_position )pane_set_user_position259,5912
pane_set_open( Pane *pane, gboolean open )pane_set_open274,6240
pane_set_state( Pane *pane, gboolean open, int user_position )pane_set_state292,6604
pane_set_child( Pane *pane, Panechild *panechild )pane_set_child313,7148
pane_animate_timeout_cb( Pane *pane )pane_animate_timeout_cb331,7510
pane_animate_closed( Pane *pane )pane_animate_closed368,8200
pane_animate_open( Pane *pane )pane_animate_open400,8919
pane_link( Pane *pane, PaneHandedness handedness )pane_link445,9985
pane_new( PaneHandedness handedness )pane_new457,10219

formula.h,1684
#define TYPE_FORMULA TYPE_FORMULA30,940
#define FORMULA(FORMULA31,982
#define FORMULA_CLASS(FORMULA_CLASS33,1057
#define IS_FORMULA(IS_FORMULA36,1157
#define IS_FORMULA_CLASS(IS_FORMULA_CLASS37,1223
typedef struct _Formula {_Formula40,1309
	GtkEventBox parent_object;parent_object41,1335
	char *caption;caption45,1380
	char *value;value46,1396
	char *expr;expr47,1410
        gboolean edit;              	/* In edit mode */edit48,1423
        gboolean sensitive;            	/* Flick to edit on click */sensitive49,1479
        gboolean changed;            	/* ->entry changed since we set it */changed50,1548
	gboolean refresh_queued;	/* Awaiting refresh */refresh_queued51,1624
	gboolean needs_focus;		/* Grab focus on refresh */needs_focus52,1673
	GtkWidget *hbox;		/* Container for our stuff */hbox56,1744
        GtkWidget *left_label;		/* Caption label */left_label57,1793
        GtkWidget *right_label;		/* Display value here */right_label58,1845
        GtkWidget *entry_frame;		/* Frame edit text with this */entry_frame59,1903
        GtkWidget *entry;		/* Edit formula here */entry60,1968
} Formula;Formula61,2019
typedef struct _FormulaClass {_FormulaClass63,2031
	GtkEventBoxClass parent_class;parent_class64,2062
	void (*edit)( Formula * );	/* Formula has flicked to edit mode */edit68,2116
	void (*changed)( Formula * );	/* Formula change */changed69,2183
	void (*activate)( Formula * );	/* Pressed "Enter" key in formula */activate70,2235
	void (*enter)( Formula * );	/* Highlight change */enter71,2304
	void (*leave)( Formula * );	/* on eg. mouse enter/exit */leave72,2356
} FormulaClass;FormulaClass73,2415

managedstring.c,1179
static ManagedClass *parent_class = NULL;parent_class36,953
static GHashTable *managedstring_all = NULL;managedstring_all40,1030
int managed_total = 0;managed_total45,1160
int managed_expanded = 0;managed_expanded46,1183
managedstring_finalize( GObject *gobject )managedstring_finalize50,1239
managedstring_info( iObject *iobject, VipsBuf *buf )managedstring_info79,1892
managedstring_hash( Managedstring *managedstring )managedstring_hash93,2264
managedstring_equal( Managedstring *a, Managedstring *b ) managedstring_equal100,2443
managedstring_all_init( void )managedstring_all_init107,2619
managedstring_class_init( ManagedstringClass *class )managedstring_class_init116,2809
managedstring_init( Managedstring *managedstring )managedstring_init131,3167
managedstring_get_type( void )managedstring_get_type147,3467
managedstring_new( Heap *heap, const char *string )managedstring_new171,4044
managedstring_lookup( Heap *heap, const char *string )managedstring_lookup196,4757
managedstring_find( Heap *heap, const char *string )managedstring_find208,5037
managedstring_get( Managedstring *managedstring, PElement *out )managedstring_get220,5306

nipmarshal.h,49
#define __nip_MARSHAL_H____nip_MARSHAL_H__3,27

heapmodel.c,1464
static ModelClass *parent_class = NULL;parent_class36,951
heapmodel_new_heap( Heapmodel *heapmodel, PElement *root )heapmodel_new_heap39,999
heapmodel_update_model( Heapmodel *heapmodel )heapmodel_update_model55,1284
heapmodel_update_heap( Heapmodel *heapmodel )heapmodel_update_heap78,1776
heapmodel_clear_edited( Heapmodel *heapmodel )heapmodel_clear_edited94,2069
heapmodel_finalize( GObject *gobject )heapmodel_finalize105,2314
heapmodel_get_rhs( Heapmodel *heapmodel )heapmodel_get_rhs118,2570
heapmodel_get_row( Heapmodel *heapmodel )heapmodel_get_row133,2865
heapmodel_parent_add( iContainer *child )heapmodel_parent_add146,3125
heapmodel_real_new_heap( Heapmodel *heapmodel, PElement *root )heapmodel_real_new_heap162,3499
heapmodel_real_update_model( Heapmodel *heapmodel )heapmodel_real_update_model170,3642
heapmodel_real_update_heap( Heapmodel *heapmodel )heapmodel_real_update_heap178,3773
heapmodel_real_clear_edited( Heapmodel *heapmodel )heapmodel_real_clear_edited188,3941
heapmodel_class_init( HeapmodelClass *class )heapmodel_class_init194,4027
heapmodel_init( Heapmodel *heapmodel )heapmodel_init215,4687
heapmodel_get_type( void )heapmodel_get_type224,4830
heapmodel_set_modified( Heapmodel *heapmodel, gboolean modified )heapmodel_set_modified249,5403
heapmodel_name( Heapmodel *heapmodel, VipsBuf *buf )heapmodel_name272,5956
heapmodel_value( Heapmodel *heapmodel, VipsBuf *buf )heapmodel_value297,6565

colour.h,576
#define TYPE_COLOUR TYPE_COLOUR30,905
#define COLOUR(COLOUR31,945
#define COLOUR_CLASS(COLOUR_CLASS33,1029
#define IS_COLOUR(IS_COLOUR35,1124
#define IS_COLOUR_CLASS(IS_COLOUR_CLASS37,1203
#define COLOUR_GET_CLASS(COLOUR_GET_CLASS39,1289
struct _Colour {_Colour42,1388
	Classmodel parent_class;parent_class43,1405
	double value[3];value47,1455
	char *colour_space;colour_space48,1473
	VipsBuf caption;caption52,1529
typedef struct _ColourClass {_ColourClass55,1551
	ClassmodelClass parent_class;parent_class56,1581
} ColourClass;ColourClass60,1634

iobject.c,1332
	SIG_DESTROY,	/* End lifetime */SIG_DESTROY39,981
	SIG_CHANGED,	/* iObject has changed somehow */SIG_CHANGED40,1014
	SIG_LASTSIG_LAST41,1062
static GObjectClass *parent_class = NULL;parent_class44,1076
static guint iobject_signals[SIG_LAST] = { 0 };iobject_signals46,1119
iobject_destroy( iObject *iobject )iobject_destroy51,1249
iobject_changed( iObject *iobject )iobject_changed65,1484
iobject_info( iObject *iobject, VipsBuf *buf )iobject_info81,1815
iobject_dispose( GObject *gobject )iobject_dispose95,2128
iobject_finalize( GObject *gobject )iobject_finalize115,2549
iobject_real_destroy( iObject *iobject )iobject_real_destroy135,2980
iobject_real_changed( iObject *iobject )iobject_real_changed140,3038
iobject_real_info( iObject *iobject, VipsBuf *buf )iobject_real_info150,3278
iobject_class_init( iObjectClass *class )iobject_class_init161,3603
iobject_init( iObject *iobject )iobject_init194,4536
iobject_get_type( void )iobject_get_type210,4812
iobject_test_name( iObject *iobject, const char *name )iobject_test_name237,5417
iobject_print( iObject *iobject )iobject_print249,5686
iobject_set( iObject *iobject, const char *name, const char *caption )iobject_set260,5850
iobject_sink( iObject *iobject )iobject_sink286,6381
iobject_dump( iObject *iobject )iobject_dump297,6562

string.c,427
static ClassmodelClass *parent_class = NULL;parent_class36,932
string_finalize( GObject *gobject )string_finalize39,990
string_view_new( Model *model, View *parent )string_view_new58,1320
static ClassmodelMember string_members[] = {string_members65,1438
string_class_init( StringClass *class )string_class_init75,1739
string_init( String *string )string_init98,2306
string_get_type( void )string_get_type107,2459

toolkitgroupview.c,710
static ViewClass *parent_class = NULL;parent_class36,957
toolkitgroupview_destroy( GtkObject *object )toolkitgroupview_destroy39,1009
toolkitgroupview_finalize( GObject *gobject )toolkitgroupview_finalize59,1387
toolkitgroupview_refresh( vObject *vobject )toolkitgroupview_refresh69,1591
toolkitgroupview_class_init( ToolkitgroupviewClass *class )toolkitgroupview_class_init87,1935
toolkitgroupview_init( Toolkitgroupview *kitgview )toolkitgroupview_init107,2439
toolkitgroupview_get_type( void )toolkitgroupview_get_type112,2504
toolkitgroupview_new( void )toolkitgroupview_new135,3036
toolkitgroupview_set_mainw( Toolkitgroupview *kitgview, Mainw *mainw )toolkitgroupview_set_mainw143,3174

fontnameview.h,639
#define TYPE_FONTNAMEVIEW TYPE_FONTNAMEVIEW30,905
#define FONTNAMEVIEW(FONTNAMEVIEW31,957
#define FONTNAMEVIEW_CLASS(FONTNAMEVIEW_CLASS33,1047
#define IS_FONTNAMEVIEW(IS_FONTNAMEVIEW35,1158
#define IS_FONTNAMEVIEW_CLASS(IS_FONTNAMEVIEW_CLASS36,1234
typedef struct _Fontnameview {_Fontnameview39,1330
	Graphicview parent_object;parent_object40,1361
	GtkWidget *label;label42,1390
	Fontbutton *fontbutton;fontbutton43,1409
} Fontnameview;Fontnameview44,1434
typedef struct _FontnameviewClass {_FontnameviewClass46,1451
	GraphicviewClass parent_class;parent_class47,1487
} FontnameviewClass;FontnameviewClass51,1541

panechild.h,632
#define TYPE_PANECHILD TYPE_PANECHILD30,940
#define PANECHILD(PANECHILD31,986
#define PANECHILD_CLASS(PANECHILD_CLASS33,1067
#define IS_PANECHILD(IS_PANECHILD35,1169
#define IS_PANECHILD_CLASS(IS_PANECHILD_CLASS37,1242
struct _Panechild {_Panechild40,1332
	vObject parent_object;parent_object41,1352
	Pane *pane;			/* The pane we are part of */pane43,1377
	const char *title;		/* Title we display */title45,1423
	GtkWidget *label;		/* Titlebar label */label46,1467
typedef struct _PanechildClass {_PanechildClass49,1512
	vObjectClass parent_class;parent_class50,1545
} PanechildClass;PanechildClass52,1574

rhsview.h,680
#define TYPE_RHSVIEW TYPE_RHSVIEW31,956
#define RHSVIEW(RHSVIEW32,998
#define RHSVIEW_CLASS(RHSVIEW_CLASS33,1070
#define IS_RHSVIEW(IS_RHSVIEW35,1166
#define IS_RHSVIEW_CLASS(IS_RHSVIEW_CLASS36,1232
struct _Rhsview {_Rhsview39,1318
	View item;item40,1336
	Rowview *rview;rview42,1349
	View *graphic;			/* Our three elements */graphic44,1367
	View *scol;scol45,1410
	View *itext;itext46,1423
        GtkWidget *table;		/* Lay out elements in this */table48,1438
	RhsFlags flags;			/* Last vis set we set */flags49,1496
typedef struct _RhsviewClass {_RhsviewClass52,1545
	ViewClass parent_class;parent_class53,1576
} RhsviewClass;RhsviewClass57,1623

pane.h,992
#define TYPE_PANE TYPE_PANE30,916
#define PANE(PANE31,952
#define PANE_CLASS(PANE_CLASS32,1015
#define IS_PANE(IS_PANE34,1102
#define IS_PANE_CLASS(IS_PANE_CLASS35,1162
	PANE_HIDE_LEFT,PANE_HIDE_LEFT41,1321
	PANE_HIDE_RIGHTPANE_HIDE_RIGHT42,1338
} PaneHandedness;PaneHandedness43,1355
typedef struct _Pane {_Pane45,1374
	GtkHPaned parent_object;parent_object46,1397
	PaneHandedness handedness;	/* Hide on left or right */handedness48,1424
	Panechild *panechild;panechild52,1531
	gboolean open;open56,1587
	int position;		position62,1772
	int user_position;user_position66,1847
	int target_position;target_position71,1979
	gboolean close_on_end;close_on_end72,2001
	int last_set_position;		last_set_position76,2066
	guint animate_timeout;animate_timeout80,2125
} Pane;Pane81,2149
typedef struct _PaneClass {_PaneClass83,2158
	GtkHPanedClass parent_class;parent_class84,2186
	void (*changed)( Pane * );changed88,2264
} PaneClass;PaneClass89,2292

vips_call.c,2975
static im_arg_type vips_supported[] = {vips_supported49,1311
static iObjectClass *parent_class = NULL;parent_class64,1566
GSList *vips_info_all = NULL;vips_info_all69,1745
vips_check_all_destroyed( void )vips_check_all_destroyed72,1781
vips_type_needs_input( im_type_desc *ty )vips_type_needs_input95,2258
vips_type_makes_output( im_type_desc *ty )vips_type_makes_output114,2594
vips_error( VipsInfo *vi )vips_error130,2879
vips_args_heap( VipsInfo *vi, HeapNode **arg, VipsBuf *buf )vips_args_heap140,3093
vips_usage( VipsBuf *buf, im_function *fn )vips_usage160,3575
vips_error_arg( VipsInfo *vi, HeapNode **arg, int argi )vips_error_arg244,6027
vips_error_toomany( VipsInfo *vi )vips_error_toomany264,6522
vips_lookup_type( im_arg_type type )vips_lookup_type282,6891
vips_is_callable( im_function *fn )vips_is_callable299,7258
vips_n_args( im_function *fn )vips_n_args354,8620
vips_make_doublevec( im_doublevec_object *dv, int n, double *vec )vips_make_doublevec372,8911
vips_make_intvec( im_intvec_object *dv, int n, double *vec )vips_make_intvec393,9282
vips_make_imagevec( im_imagevec_object *iv, int n )vips_make_imagevec413,9578
vips_add_input_ii( VipsInfo *vi, Imageinfo *ii )vips_add_input_ii433,9868
vips_fromip( VipsInfo *vi, int i, PElement *arg )vips_fromip456,10376
vips_toip( VipsInfo *vi, int i, int *outiiindex, PElement *arg )vips_toip637,13557
vips_write_result_sub( Reduce *rc, PElement *safe, VipsInfo *vi, PElement *out )vips_write_result_sub746,15357
vips_write_result( VipsInfo *vi, PElement *out )vips_write_result793,16317
vips_drop_refs( VipsInfo *vi )vips_drop_refs811,16807
vips_info_dispose( GObject *gobject )vips_info_dispose831,17258
vips_vargv_free( im_function *fn, im_object *vargv )vips_vargv_free859,17815
vips_info_finalize( GObject *gobject )vips_info_finalize924,19066
vips_info_info( iObject *iobject, VipsBuf *buf )vips_info_info947,19526
vips_info_class_init( VipsInfoClass *class )vips_info_class_init956,19752
vips_info_init( VipsInfo *vi )vips_info_init970,20110
vips_info_get_type( void )vips_info_get_type1000,20672
vips_new( Reduce *rc, im_function *fn )vips_new1025,21217
vips_add_output_ii( VipsInfo *vi, Imageinfo *ii )vips_add_output_ii1076,22268
vips_build_output( VipsInfo *vi, int i )vips_build_output1099,22739
vips_build_inputva( VipsInfo *vi, int i, va_list *ap )vips_build_inputva1166,23757
vips_fillva( VipsInfo *vi, va_list *ap )vips_fillva1366,27197
vipsva_sub( Reduce *rc, const char *name, PElement *out, va_list *ap )vipsva_sub1419,28322
vipsva( Reduce *rc, PElement *out, const char *name, ... )vipsva1466,29247
vips_fill_spine( VipsInfo *vi, HeapNode **arg )vips_fill_spine1491,29722
vips_spine_sub( Reduce *rc, const char *name, im_function *fn,vips_spine_sub1554,31186
vips_spine( Reduce *rc, const char *name, HeapNode **arg, PElement *out )vips_spine1605,32138
vips_run( Reduce *rc, Compile *compile,vips_run1614,32338

mainw.c,9618
#define RECENT_WORKSPACE RECENT_WORKSPACE38,977
#define RECENT_IMAGE RECENT_IMAGE39,1021
#define RECENT_MATRIX RECENT_MATRIX40,1057
GSList *mainw_recent_workspace = NULL;mainw_recent_workspace44,1159
GSList *mainw_recent_image = NULL;mainw_recent_image45,1198
GSList *mainw_recent_matrix = NULL;mainw_recent_matrix46,1233
gboolean mainw_auto_recalc = TRUE;mainw_auto_recalc51,1407
static iWindowClass *parent_class = NULL;parent_class53,1443
static GSList *mainw_all = NULL;mainw_all57,1508
mainw_startup( void )mainw_startup60,1547
mainw_shutdown( void )mainw_shutdown72,1886
static int mainw_recent_freeze_count = 0;mainw_recent_freeze_count83,2218
mainw_recent_freeze( void )mainw_recent_freeze86,2266
mainw_recent_thaw( void )mainw_recent_thaw92,2337
mainw_recent_add( GSList **recent, const char *filename )mainw_recent_add100,2451
mainw_number( void )mainw_number113,2749
mainw_pick_one( void )mainw_pick_one122,2930
mainw_destroy( GtkObject *object )mainw_destroy131,3044
mainw_compat_timeout( Mainw *mainw )mainw_compat_timeout169,3994
mainw_map( GtkWidget *widget )mainw_map186,4437
mainw_configure_event( GtkWidget *widget, GdkEventConfigure *event )mainw_configure_event203,4820
mainw_class_init( MainwClass *class )mainw_class_init215,5107
mainw_progress_begin( Progress *progress, Mainw *mainw )mainw_progress_begin229,5460
mainw_progress_update( Progress *progress, gboolean *cancel, Mainw *mainw )mainw_progress_update236,5606
mainw_progress_end( Progress *progress, Mainw *mainw )mainw_progress_end248,5978
mainw_init( Mainw *mainw )mainw_init255,6122
mainw_get_type( void )mainw_get_type300,7225
mainw_cancel_cb( GtkWidget *wid, Mainw *mainw )mainw_cancel_cb325,7743
mainw_workspace_destroy_cb( Workspace *ws, Mainw *mainw )mainw_workspace_destroy_cb331,7831
mainw_find_disc( VipsBuf *buf )mainw_find_disc345,8096
mainw_find_heap( VipsBuf *buf, Heap *heap )mainw_find_heap361,8413
mainw_free_update( Mainw *mainw )mainw_free_update375,8787
mainw_title_update( Mainw *mainw )mainw_title_update404,9431
mainw_status_update( Mainw *mainw )mainw_status_update431,10194
mainw_jump_name_compare( iContainer *a, iContainer *b )mainw_jump_name_compare446,10503
mainw_jump_column_cb( GtkWidget *item, Column *column )mainw_jump_column_cb460,10792
mainw_jump_build( Column *column, GtkWidget *menu )mainw_jump_build466,10921
mainw_jump_update( Mainw *mainw, GtkWidget *menu )mainw_jump_update484,11393
mainw_refresh( Mainw *mainw )mainw_refresh505,11934
mainw_workspace_changed_cb( Workspace *ws, Mainw *mainw )mainw_workspace_changed_cb580,14016
mainw_space_free_event( GtkWidget *widget, GdkEvent *ev, Mainw *mainw )mainw_space_free_event588,14188
mainw_space_free_tooltip_generate( GtkWidget *widget, VipsBuf *buf, mainw_space_free_tooltip_generate599,14409
mainw_free_changed_cb( gpointer *dummy, Mainw *mainw )mainw_free_changed_cb626,15324
mainw_homepage_action_cb( GtkAction *action, iWindow *iwnd )mainw_homepage_action_cb635,15473
mainw_about_action_cb( GtkAction *action, iWindow *iwnd )mainw_about_action_cb643,15612
mainw_guide_action_cb( GtkAction *action, iWindow *iwnd )mainw_guide_action_cb651,15735
mainw_clone( Mainw *mainw )mainw_clone657,15882
mainw_duplicate_action_cb( GtkAction *action, Mainw *mainw )mainw_duplicate_action_cb689,16524
mainw_ungroup_action_cb( GtkAction *action, Mainw *mainw )mainw_ungroup_action_cb697,16686
mainw_group_action_cb( GtkAction *action, Mainw *mainw )mainw_group_action_cb708,16942
mainw_group_action_cb2( GtkWidget *wid, GtkWidget *host, Mainw *mainw )mainw_group_action_cb2737,17630
mainw_select_all_action_cb( GtkAction *action, Mainw *mainw )mainw_select_all_action_cb745,17785
mainw_find_action_cb( GtkAction *action, Mainw *mainw )mainw_find_action_cb751,17900
mainw_find_again_action_cb( GtkAction *action, Mainw *mainw )mainw_find_again_action_cb759,18130
mainw_test_error( Row *row, Mainw *mainw, int *found )mainw_test_error767,18373
mainw_next_error_action_cb( GtkAction *action, Mainw *mainw )mainw_next_error_action_cb789,18707
mainw_next_error_action_cb2( GtkWidget *wid, GtkWidget *host, Mainw *mainw )mainw_next_error_action_cb2831,19887
mainw_selected_recalc_dia( iWindow *iwnd, void *client, mainw_selected_recalc_dia839,20102
mainw_force_calc_action_cb( GtkAction *action, Mainw *mainw )mainw_force_calc_action_cb854,20484
mainw_workspace_save_action_cb( GtkAction *action, Mainw *mainw )mainw_workspace_save_action_cb881,21123
mainw_workspace_save_as_action_cb( GtkAction *action, Mainw *mainw )mainw_workspace_save_as_action_cb889,21317
mainw_open_workspace( Workspacegroup *wsg, const char *filename )mainw_open_workspace895,21479
mainw_open_file_into_workspace( Mainw *mainw, const char *filename )mainw_open_file_into_workspace928,22422
	Workspacegroup *wsg;wsg950,22977
	VipsBuf *buf;buf951,22999
	int nitems;nitems952,23014
} MainwLoad;MainwLoad953,23027
mainw_open_fn( Filesel *filesel, const char *filename, MainwLoad *load )mainw_open_fn959,23162
mainw_open_done_cb( iWindow *iwnd, void *client, mainw_open_done_cb980,23663
mainw_open( Mainw *mainw )mainw_open1041,25250
mainw_open_action_cb( GtkAction *action, Mainw *mainw )mainw_open_action_cb1060,25866
mainw_open_action_cb2( GtkWidget *wid, GtkWidget *host, Mainw *mainw )mainw_open_action_cb21066,25961
mainw_open_examples( Mainw *mainw )mainw_open_examples1074,26150
mainw_open_examples_action_cb( GtkAction *action, Mainw *mainw )mainw_open_examples_action_cb1102,27093
mainw_recent_open( Mainw *mainw, const char *filename )mainw_recent_open1108,27210
mainw_recent_open_cb( GtkWidget *widget, const char *filename )mainw_recent_open_cb1123,27521
mainw_recent_build( GtkWidget *menu, GSList *recent )mainw_recent_build1139,27857
mainw_recent_clear_cb( GtkWidget *widget, const char *filename )mainw_recent_clear_cb1166,28566
mainw_recent_map_cb( GtkWidget *widget, Mainw *mainw )mainw_recent_map_cb1183,29097
mainw_workspace_merge_fn( Filesel *filesel,mainw_workspace_merge_fn1234,30682
mainw_workspace_merge_done_cb( iWindow *iwnd, mainw_workspace_merge_done_cb1257,31194
mainw_workspace_merge( Mainw *mainw )mainw_workspace_merge1278,31628
mainw_workspace_duplicate_action_cb( GtkAction *action, Mainw *mainw )mainw_workspace_duplicate_action_cb1296,32205
mainw_workspace_merge_action_cb( GtkAction *action, Mainw *mainw )mainw_workspace_merge_action_cb1321,32717
mainw_workspace_merge_action_cb2( GtkWidget *wid, GtkWidget *host, mainw_workspace_merge_action_cb21327,32834
mainw_recover_action_cb( GtkAction *action, Mainw *mainw )mainw_recover_action_cb1336,33005
mainw_column_new_action_cb( GtkAction *action, Mainw *mainw )mainw_column_new_action_cb1344,33153
mainw_column_new_action_cb2( GtkWidget *wid, GtkWidget *host, Mainw *mainw )mainw_column_new_action_cb21360,33522
mainw_column_new_cb( iWindow *iwnd, void *client, mainw_column_new_cb1368,33684
mainw_column_new_named_action_cb( GtkAction *action, Mainw *mainw )mainw_column_new_named_action_cb1403,34532
mainw_program_new_action_cb( GtkAction *action, Mainw *mainw )mainw_program_new_action_cb1431,35291
mainw_workspace_new_action_cb( GtkAction *action, Mainw *mainw )mainw_workspace_new_action_cb1443,35503
mainw_autorecalc_action_cb( GtkToggleAction *action, Mainw *mainw )mainw_autorecalc_action_cb1453,35760
mainw_toolbar_action_cb( GtkToggleAction *action, Mainw *mainw )mainw_toolbar_action_cb1472,36237
mainw_statusbar_action_cb( GtkToggleAction *action, Mainw *mainw )mainw_statusbar_action_cb1483,36534
mainw_toolkitbrowser_action_cb( GtkToggleAction *action, Mainw *mainw )mainw_toolkitbrowser_action_cb1494,36835
mainw_workspacedefs_action_cb( GtkToggleAction *action, Mainw *mainw )mainw_workspacedefs_action_cb1505,37091
mainw_layout_action_cb( GtkAction *action, Mainw *mainw )mainw_layout_action_cb1516,37330
mainw_layout_action_cb2( GtkWidget *wid, GtkWidget *host, Mainw *mainw )mainw_layout_action_cb21522,37442
mainw_selected_remove_action_cb( GtkAction *action, Mainw *mainw )mainw_selected_remove_action_cb1530,37602
mainw_revert_ok_cb( iWindow *iwnd, void *client, mainw_revert_ok_cb1536,37748
mainw_revert_cb( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys ) mainw_revert_cb1551,38055
mainw_preferences_action_cb( GtkAction *action, Mainw *mainw )mainw_preferences_action_cb1566,38534
mainw_graph_action_cb( GtkAction *action, Mainw *mainw )mainw_graph_action_cb1621,40056
mainw_mode_action_cb( GtkRadioAction *action, GtkRadioAction *current, mainw_mode_action_cb1633,40319
static GtkActionEntry mainw_actions[] = {mainw_actions1642,40515
static GtkToggleActionEntry mainw_toggle_actions[] = {mainw_toggle_actions1774,44174
static GtkRadioActionEntry mainw_radio_actions[] = {mainw_radio_actions1801,44969
static const char *mainw_menubar_ui_description =mainw_menubar_ui_description1818,45348
static const char *mainw_toolbar_ui_description =mainw_toolbar_ui_description1890,47661
mainw_lpane_changed_cb( Pane *pane, Mainw *mainw )mainw_lpane_changed_cb1904,48034
mainw_rpane_changed_cb( Pane *pane, Mainw *mainw )mainw_rpane_changed_cb1916,48320
mainw_watch_changed_cb( Watchgroup *watchgroup, Watch *watch, Mainw *mainw )mainw_watch_changed_cb1928,48606
mainw_build( iWindow *iwnd, GtkWidget *vbox )mainw_build1939,48874
mainw_popdown( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys )mainw_popdown2168,57220
mainw_link( Mainw *mainw, Workspace *ws )mainw_link2191,57865
mainw_new( Workspace *ws )mainw_new2232,59126

managedstring.h,681
#define TYPE_MANAGEDSTRING TYPE_MANAGEDSTRING30,919
#define MANAGEDSTRING(MANAGEDSTRING31,973
#define MANAGEDSTRING_CLASS(MANAGEDSTRING_CLASS33,1078
#define IS_MANAGEDSTRING(IS_MANAGEDSTRING36,1198
#define IS_MANAGEDSTRING_CLASS(IS_MANAGEDSTRING_CLASS38,1291
#define MANAGEDSTRING_GET_CLASS(MANAGEDSTRING_GET_CLASS40,1391
struct _Managedstring {_Managedstring44,1515
	Managed parent_object;parent_object45,1539
	const char *string;string47,1564
	Element e;		/* Points to compiled string */e48,1585
typedef struct _ManagedstringClass {_ManagedstringClass51,1634
	ManagedClass parent_class;parent_class52,1671
} ManagedstringClass;ManagedstringClass54,1700

heapmodel.h,881
#define TYPE_HEAPMODEL TYPE_HEAPMODEL31,970
#define HEAPMODEL(HEAPMODEL32,1016
#define HEAPMODEL_CLASS(HEAPMODEL_CLASS34,1109
#define IS_HEAPMODEL(IS_HEAPMODEL36,1213
#define IS_HEAPMODEL_CLASS(IS_HEAPMODEL_CLASS38,1298
#define HEAPMODEL_GET_CLASS(HEAPMODEL_GET_CLASS40,1390
struct _Heapmodel {_Heapmodel43,1498
	Model parent_class;parent_class44,1518
	Row *row;		/* Enclosing row */row48,1558
	Rhs *rhs;		/* Enclosing rhs */rhs49,1590
	gboolean modified;modified54,1754
typedef struct _HeapmodelClass {_HeapmodelClass57,1778
	ModelClass parent_class;parent_class58,1811
	void *(*new_heap)( Heapmodel *, PElement * );	new_heap77,2322
	void *(*update_model)( Heapmodel * );update_model78,2370
	void *(*update_heap)( Heapmodel * );update_heap79,2409
	void *(*clear_edited)( Heapmodel * );clear_edited80,2447
} HeapmodelClass;HeapmodelClass81,2486

iobject.h,960
#define TYPE_IOBJECT TYPE_IOBJECT30,914
#define IOBJECT(IOBJECT31,956
#define IOBJECT_CLASS(IOBJECT_CLASS33,1043
#define IS_IOBJECT(IS_IOBJECT35,1141
#define IS_IOBJECT_CLASS(IS_IOBJECT_CLASS37,1222
#define IOBJECT_GET_CLASS(IOBJECT_GET_CLASS39,1310
#define IDESTROY(IDESTROY44,1453
struct _iObject {_iObject51,1562
	GObject parent_object;parent_object52,1580
        char *name;             /* iObject name */name56,1632
        char *caption;          /* Comment of some sort */caption57,1683
	gboolean floating;floating64,1989
	gboolean in_destruction;in_destruction68,2049
typedef struct _iObjectClass {_iObjectClass71,2079
	GObjectClass parent_class;parent_class72,2110
	void (*destroy)( iObject * );destroy76,2201
	void (*changed)( iObject * );changed81,2335
	void (*info)( iObject *, VipsBuf * );info85,2415
	const char *(*generate_caption)( iObject * );generate_caption90,2593
} iObjectClass;iObjectClass91,2640

plotmodel.c,944
static iObjectClass *parent_class = NULL;parent_class36,986
plotmodel_dispose( GObject *gobject )plotmodel_dispose39,1041
plotmodel_finalize( GObject *gobject )plotmodel_finalize62,1556
plotmodel_changed( iObject *iobject )plotmodel_changed74,1794
plotmodel_class_init( PlotmodelClass *class )plotmodel_class_init89,2096
plotmodel_init( Plotmodel *plotmodel )plotmodel_init109,2510
plotmodel_get_type( void )plotmodel_get_type124,2809
plotmodel_plot_destroy_cb( Plot *plot, Plotmodel *plotmodel )plotmodel_plot_destroy_cb149,3351
plotmodel_plot_changed_cb( Plot *plot, Plotmodel *plotmodel )plotmodel_plot_changed_cb157,3513
plotmodel_link( Plotmodel *plotmodel, Plot *plot )plotmodel_link163,3634
plotmodel_new( Plot *plot )plotmodel_new178,4079
plotmodel_set_mag( Plotmodel *plotmodel, int mag )plotmodel_set_mag188,4239
plotmodel_set_status( Plotmodel *plotmodel, gboolean show_status )plotmodel_set_status211,4710

toolkitgroupview.h,699
#define TYPE_TOOLKITGROUPVIEW TYPE_TOOLKITGROUPVIEW30,898
#define TOOLKITGROUPVIEW(TOOLKITGROUPVIEW31,958
#define TOOLKITGROUPVIEW_CLASS(TOOLKITGROUPVIEW_CLASS33,1060
#define IS_TOOLKITGROUPVIEW(IS_TOOLKITGROUPVIEW36,1186
#define IS_TOOLKITGROUPVIEW_CLASS(IS_TOOLKITGROUPVIEW_CLASS38,1273
struct _Toolkitgroupview {_Toolkitgroupview41,1377
	View parent_class;parent_class42,1404
	GtkWidget *menu;		/* Display the toolkits in this */menu44,1425
	Mainw *mainw;			/* Mainw these menu items act on */mainw45,1479
typedef struct _ToolkitgroupviewClass {_ToolkitgroupviewClass48,1536
	ViewClass parent_class;parent_class49,1576
} ToolkitgroupviewClass;ToolkitgroupviewClass53,1623

iimageview.c,1545
static GraphicviewClass *parent_class = NULL;parent_class36,958
iimageview_destroy( GtkObject *object )iimageview_destroy39,1017
iimageview_realize( GtkWidget *widget )iimageview_realize52,1275
iimageview_drag_window_new( int width, int height )iimageview_drag_window_new62,1466
iimageview_drag_begin( GtkWidget *widget, GdkDragContext *context )iimageview_drag_begin78,1869
iimageview_drag_end( GtkWidget *widget, GdkDragContext *context )iimageview_drag_end101,2546
iimageview_drag_data_get( GtkWidget *widget, GdkDragContext *context,iimageview_drag_data_get112,2772
iimageview_drag_data_received( GtkWidget *widget, GdkDragContext *context,iimageview_drag_data_received138,3518
iimageview_edit( GtkWidget *parent, iImageview *iimageview )iimageview_edit196,5154
iimageview_link( View *view, Model *model, View *parent )iimageview_link207,5425
iimageview_refresh( vObject *vobject )iimageview_refresh224,5881
iimageview_class_init( iImageviewClass *class )iimageview_class_init276,7314
iimageview_doubleclick_one_cb( GtkWidget *widget, iimageview_doubleclick_one_cb304,8097
iimageview_doubleclick_two_cb( GtkWidget *widget, iimageview_doubleclick_two_cb314,8337
iimageview_filedrop( iImageview *iimageview, const char *file )iimageview_filedrop321,8486
iimageview_tooltip_generate( GtkWidget *widget, iimageview_tooltip_generate333,8743
iimageview_init( iImageview *iimageview )iimageview_init352,9283
iimageview_get_type( void )iimageview_get_type406,11073
iimageview_new( void )iimageview_new429,11552

graphwindow.c,1759
static FloatwindowClass *parent_class = NULL;parent_class67,1827
static int graph_write_cluster_index = 0;graph_write_cluster_index69,1874
graph_write_row_child( Link *link, VipsBuf *buf )graph_write_row_child72,1931
graph_write_row( Row *row, VipsBuf *buf )graph_write_row84,2189
graph_write_column( Column *col, VipsBuf *buf )graph_write_column93,2349
graph_write_dot( Workspace *ws, VipsBuf *buf )graph_write_dot116,3035
graph_write( Workspace *ws )graph_write130,3410
graphwindow_destroy( GtkObject *object )graphwindow_destroy140,3582
graphwindow_class_init( GraphwindowClass *class )graphwindow_class_init170,4268
graphwindow_init( Graphwindow *graphwindow )graphwindow_init186,4542
graphwindow_get_type( void )graphwindow_get_type199,4773
graphwindow_refresh_title( Graphwindow *graphwindow )graphwindow_refresh_title224,5331
graphwindow_build_graph( Graphwindow *graphwindow )graphwindow_build_graph241,5732
graphwindow_update_image( Graphwindow *graphwindow )graphwindow_update_image272,6333
graphwindow_layout( Graphwindow *graphwindow )graphwindow_layout305,7020
graphwindow_layout_cb( Graphwindow *graphwindow )graphwindow_layout_cb317,7297
graphwindow_layout_queue( Graphwindow *graphwindow )graphwindow_layout_queue347,7997
graphwindow_changed_cb( Workspace *ws, Graphwindow *graphwindow )graphwindow_changed_cb357,8262
static const char *graphwindow_menubar_ui_description =graphwindow_menubar_ui_description367,8505
graphwindow_build( Graphwindow *graphwindow, GtkWidget *vbox, Workspace *ws )graphwindow_build384,8933
graphwindow_link( Graphwindow *graphwindow, Workspace *ws, GtkWidget *parent )graphwindow_link436,10531
graphwindow_new( Workspace *ws, GtkWidget *parent )graphwindow_new452,11090

iregiongroup.c,590
static ClassmodelClass *parent_class = NULL;parent_class36,961
iregiongroup_dispose( GObject *gobject )iregiongroup_dispose39,1019
iregiongroup_update_model( Heapmodel *heapmodel )iregiongroup_update_model59,1397
iregiongroup_view_new( Model *model, View *parent )iregiongroup_view_new81,1910
iregiongroup_class_init( iRegiongroupClass *class )iregiongroup_class_init87,2014
iregiongroup_init( iRegiongroup *iregiongroup )iregiongroup_init108,2508
iregiongroup_get_type( void )iregiongroup_get_type116,2661
iregiongroup_new( Classmodel *classmodel )iregiongroup_new141,3227

vips_call.h,2318
#define MAX_VIPS_ARGS MAX_VIPS_ARGS32,968
#define MAX_VEC MAX_VEC36,1054
typedef enum _VipsArgumentType {_VipsArgumentType38,1079
	VIPS_NONE = -1,VIPS_NONE39,1112
	VIPS_DOUBLE = 0,VIPS_DOUBLE40,1129
	VIPS_INT,VIPS_INT41,1147
	VIPS_COMPLEX,VIPS_COMPLEX42,1158
	VIPS_STRING,VIPS_STRING43,1173
	VIPS_IMAGE,VIPS_IMAGE44,1187
	VIPS_DOUBLEVEC,VIPS_DOUBLEVEC45,1200
	VIPS_DMASK,VIPS_DMASK46,1217
	VIPS_IMASK,VIPS_IMASK47,1230
	VIPS_IMAGEVEC,VIPS_IMAGEVEC48,1243
	VIPS_INTVEC,VIPS_INTVEC49,1259
	VIPS_GVALUE,VIPS_GVALUE50,1273
	VIPS_INTERPOLATEVIPS_INTERPOLATE51,1287
} VipsArgumentType;VipsArgumentType52,1305
#define TYPE_VIPS_INFO TYPE_VIPS_INFO54,1326
#define VIPS_INFO(VIPS_INFO55,1372
#define VIPS_INFO_CLASS(VIPS_INFO_CLASS57,1464
#define IS_VIPS_INFO(IS_VIPS_INFO59,1567
#define IS_VIPS_INFO_CLASS(IS_VIPS_INFO_CLASS61,1652
#define VIPS_INFO_GET_CLASS(VIPS_INFO_GET_CLASS63,1744
typedef struct _VipsInfo {_VipsInfo68,1905
	iObject parent_object;parent_object69,1932
	const char *name;name73,1979
	im_function *fn;		/* Function we call */fn74,1998
	Reduce *rc;			/* RC we run inside */rc75,2040
	im_object *vargv;		/* vargv we build for VIPS */vargv79,2140
	int nargs;			/* Number of args needed from ip */nargs80,2190
	int nres;			/* Number of objects we write back */nres81,2240
	int nires;			/* Number of images we write back */nires82,2291
	int inpos[MAX_VIPS_ARGS];	/* Positions of inputs */inpos83,2342
	int outpos[MAX_VIPS_ARGS];	/* Positions of outputs */outpos84,2395
	int ninii;			ninii97,2861
	Imageinfo *inii[MAX_VIPS_ARGS];	inii98,2876
	unsigned int inii_destroy_sid[MAX_VIPS_ARGS];inii_destroy_sid99,2910
	unsigned int inii_invalidate_sid[MAX_VIPS_ARGS];inii_invalidate_sid100,2957
	int noutii;noutii104,3033
	Imageinfo *outii[MAX_VIPS_ARGS];outii105,3046
	unsigned int outii_destroy_sid[MAX_VIPS_ARGS];outii_destroy_sid106,3080
	gboolean use_lut;		/* TRUE for using a lut */use_lut108,3129
	unsigned int hash;hash112,3208
	gboolean found_hash;found_hash113,3228
	gboolean in_cache;in_cache117,3295
	gboolean must_drop;must_drop121,3381
} VipsInfo;VipsInfo122,3402
typedef struct _VipsInfoClass {_VipsInfoClass124,3415
	iObjectClass parent_class;parent_class125,3447
} VipsInfoClass;VipsInfoClass127,3476

view.c,4063
static vObjectClass *parent_class = NULL;parent_class41,1044
static GSList *view_scannable = NULL;view_scannable43,1087
static GSList *view_resettable = NULL;view_resettable45,1126
view_scannable_register( View *view )view_scannable_register48,1171
view_scannable_unregister( View *view )view_scannable_unregister61,1412
view_scan_all( void )view_scan_all70,1580
view_resettable_register( View *view )view_resettable_register81,1734
view_resettable_unregister( View *view )view_resettable_unregister94,1982
view_reset_all( void )view_reset_all103,2151
view_viewchild_display( ViewChild *viewchild )view_viewchild_display112,2383
view_viewchild_changed( Model *model, ViewChild *viewchild )view_viewchild_changed129,2880
view_viewchild_new( View *parent_view, Model *child_model )view_viewchild_new157,3728
view_viewchild_destroy( ViewChild *viewchild )view_viewchild_destroy189,4576
view_viewchild_test_child_model( ViewChild *viewchild, Model *child_model )view_viewchild_test_child_model210,5133
view_hasmodel( View *view ) view_hasmodel227,5510
view_model_test( View *view, Model *model )view_model_test233,5598
view_link( View *view, Model *model, View *parent )view_link244,5783
view_child_add( View *parent, View *child )view_child_add252,5919
view_child_remove( View *child )view_child_remove260,6051
view_child_position( View *child )view_child_position270,6218
view_child_front( View *child )view_child_front280,6400
view_unlink( View *view )view_unlink290,6561
view_destroy( GtkObject *object )view_destroy305,7100
view_finalize( GObject *gobject )view_finalize340,7815
view_model_pos_changed( Model *model, View *view )view_model_pos_changed352,8085
view_model_scrollto( Model *model, ModelScrollPosition position, View *view )view_model_scrollto370,8565
view_model_layout( Model *model, View *view )view_model_layout385,8919
view_model_reset( Model *model, View *view )view_model_reset400,9216
view_model_child_add( Model *parent, Model *child, int pos, View *parent_view )view_model_child_add415,9526
view_model_child_remove( iContainer *parent, iContainer *child, view_model_child_remove441,10226
view_real_link_sub( Model *child_model, View *parent_view )view_real_link_sub468,10960
view_real_link( View *view, Model *model, View *parent_view )view_real_link478,11158
view_real_child_add( View *parent, View *child )view_real_child_add514,12428
view_real_child_remove( View *parent, View *child )view_real_child_remove546,13367
view_real_child_position( View *parent, View *child )view_real_child_position570,13899
view_real_child_front( View *parent, View *child )view_real_child_front575,13970
view_real_reset( View *view )view_real_reset580,14039
view_real_scan( View *view )view_real_scan586,14125
view_class_init( ViewClass *class )view_class_init608,14585
view_init( View *view )view_init638,15296
view_get_type( void )view_get_type656,15598
view_reset( View *view )view_reset681,16067
view_scan( View *view )view_scan694,16269
view_scrollto( View *view, ModelScrollPosition position )view_scrollto707,16482
view_layout( View *view )view_layout720,16735
view_map_sub( ViewChild *viewchild, view_map_fn fn, void *a, void *b )view_map_sub731,16904
view_map( View *view, view_map_fn fn, void *a, void *b )view_map742,17117
view_map_all( View *view, view_map_fn fn, void *a )view_map_all751,17335
view_save_as_cb( GtkWidget *menu, GtkWidget *host, View *view )view_save_as_cb763,17548
view_save_cb( GtkWidget *menu, GtkWidget *host, View *view )view_save_cb775,17819
view_close_cb( GtkWidget *menu, GtkWidget *host, View *view )view_close_cb787,18085
view_activate_cb( View *view )view_activate_cb801,18400
view_changed_cb( View *view )view_changed_cb810,18544
view_not_implemented_cb( GtkWidget *menu, GtkWidget *host, View *view )view_not_implemented_cb818,18665
view_get_toplevel( View *view )view_get_toplevel825,18850
view_get_columnview( View *child )view_get_columnview834,19024
view_resize( View *view )view_resize851,19325

mainw.h,1831
#define TYPE_MAINW TYPE_MAINW30,898
#define MAINW(MAINW31,936
#define MAINW_CLASS(MAINW_CLASS32,1002
#define IS_MAINW(IS_MAINW34,1092
#define IS_MAINW_CLASS(IS_MAINW_CLASS35,1154
#define GET_MAINW(GET_MAINW40,1275
struct _Mainw {_Mainw43,1347
	iWindow parent_object;parent_object44,1363
	Workspace *ws;ws48,1419
	guint changed_sid;changed_sid49,1435
	guint destroy_sid;destroy_sid50,1455
	guint imageinfo_changed_sid;imageinfo_changed_sid54,1538
	guint heap_changed_sid;heap_changed_sid55,1568
	guint watch_changed_sid;watch_changed_sid56,1593
	guint begin_sid;	begin_sid60,1654
	guint update_sid;	update_sid61,1673
	guint end_sid;	end_sid62,1693
	gboolean cancel;cancel63,1710
	gboolean free_type;free_type67,1785
	gboolean toolbar_visible;toolbar_visible72,1925
	gboolean statusbar_visible;statusbar_visible73,1952
	Row *row_last_error;row_last_error77,2045
	guint compat_timeout;compat_timeout83,2231
	Toolkitgroupview *kitgview;kitgview87,2283
	Toolkitbrowser *toolkitbrowser;toolkitbrowser88,2312
	Workspacedefs *workspacedefs;workspacedefs89,2345
	Workspaceview *wsview;wsview90,2376
	GtkWidget *toolbar;toolbar91,2400
	GtkWidget *recent_menu;recent_menu92,2421
	GtkWidget *jump_to_column_menu;jump_to_column_menu93,2446
	GtkWidget *popup;popup95,2480
	GtkWidget *popup_jump;popup_jump96,2499
	GtkWidget *statusbar_main;statusbar_main98,2524
	GtkWidget *statusbar;statusbar99,2552
	GtkWidget *space_free;	space_free100,2575
	GtkWidget *space_free_eb;	space_free_eb101,2600
	GtkWidget *progress_box;progress_box102,2628
	GtkWidget *progress;progress103,2654
	Pane *lpane;lpane107,2747
	Pane *rpane;rpane108,2761
typedef struct _MainwClass {_MainwClass111,2779
	iWindowClass parent_class;parent_class112,2808
} MainwClass;MainwClass116,2858

doubleclick.c,1179
#define FREEFI(FREEFI47,1224
typedef struct doubleclick_info {doubleclick_info55,1377
	GtkWidget *wid;		/* Widget we are attached to */wid56,1411
	guint click;		/* Timer for click determination */click57,1461
	gboolean dsingle;	/* Do single click on first click of double */dsingle58,1512
	guint state;		/* State from last event */state59,1578
	DoubleclickFunc single;	/* Callback for single click */single61,1622
	void *clients;		/* Client data for single */clients62,1679
	DoubleclickFunc dub;	/* Callback for double click */dub63,1725
	void *clientd;		/* Client data for double */clientd64,1779
} Doubleclick; Doubleclick65,1825
doubleclick_new()doubleclick_new70,1896
doubleclick_free( Doubleclick *click )doubleclick_free88,2156
doubleclick_time_cb( Doubleclick *click )doubleclick_time_cb96,2283
doubleclick_trigger_cb( GtkWidget *wid, GdkEvent *ev, Doubleclick *click )doubleclick_trigger_cb123,2910
doubleclick_destroy_cb( GtkWidget *wid, Doubleclick *click )doubleclick_destroy_cb182,4352
doubleclick_realize_cb( GtkWidget *wid )doubleclick_realize_cb199,4717
doubleclick_add( GtkWidget *wid, gboolean dsingle,doubleclick_add207,4859

editview.c,732
static GraphicviewClass *parent_class = NULL;parent_class36,938
editview_destroy( GtkObject *object )editview_destroy39,997
editview_link( View *view, Model *model, View *parent )editview_link58,1343
editview_refresh( vObject *vobject )editview_refresh70,1640
editview_class_init( EditviewClass *class )editview_class_init86,1965
editview_event_cb( GtkWidget *widget, GdkEvent *ev, Editview *editview )editview_event_cb109,2453
editview_activate_cb( GtkWidget *wid, Editview *editview )editview_activate_cb127,2772
editview_init( Editview *editview )editview_init143,3124
editview_get_type( void )editview_get_type171,4270
editview_set_entry( Editview *editview, const char *fmt, ... )editview_set_entry194,4691

option.c,429
static ClassmodelClass *parent_class = NULL;parent_class36,949
option_finalize( GObject *gobject )option_finalize39,1007
option_view_new( Model *model, View *parent )option_view_new56,1329
static ClassmodelMember option_members[] = {option_members63,1447
option_class_init( OptionClass *class )option_class_init76,1870
option_init( Option *option )option_init102,2463
option_get_type( void )option_get_type111,2611

main.c,4548
#undef DEBUG_FATALDEBUG_FATAL53,1454
GdkWindow *main_window_gdk;			/* Top GdkWindow */main_window_gdk74,1875
GtkWidget *main_window_top = NULL;		/* Secret top window */main_window_top75,1925
Workspacegroup *main_workspacegroup = NULL;	/* All the workspaces */main_workspacegroup77,1986
Toolkitgroup *main_toolkitgroup = NULL;		/* All the toolkits */main_toolkitgroup78,2055
Symbol *main_symbol_root = NULL;		/* Root of symtable */main_symbol_root79,2119
Watchgroup *main_watchgroup = NULL;		/* All of the watches */main_watchgroup80,2176
Imageinfogroup *main_imageinfogroup = NULL;	/* All of the images */main_imageinfogroup81,2238
void *main_c_stack_base = NULL;			/* Base of C stack */main_c_stack_base83,2307
gboolean main_starting = TRUE;			/* In startup */main_starting85,2364
static const char *main_argv0 = NULL;		/* argv[0] */main_argv087,2415
static iOpenFile *main_stdin = NULL;		/* stdin as an iOpenFile */main_stdin88,2468
static GtkIconFactory *main_icon_factory = NULL;/* Add stocks to this */main_icon_factory89,2534
static Splash *main_splash = NULL;main_splash90,2607
static char *main_option_script = NULL;main_option_script92,2643
static char *main_option_expression = NULL;main_option_expression93,2683
gboolean main_option_batch = FALSE;main_option_batch94,2727
static gboolean main_option_no_load_menus = FALSE;main_option_no_load_menus95,2763
static gboolean main_option_no_load_args = FALSE;main_option_no_load_args96,2814
static gboolean main_option_stdin_ws = FALSE;main_option_stdin_ws97,2864
static gboolean main_option_stdin_def = FALSE;main_option_stdin_def98,2910
static char *main_option_output = NULL;main_option_output99,2957
static char **main_option_set = NULL;main_option_set100,2997
static gboolean main_option_benchmark = FALSE;main_option_benchmark101,3035
gboolean main_option_time_save = FALSE;main_option_time_save102,3082
gboolean main_option_i18n = FALSE;main_option_i18n103,3122
static gboolean main_option_print_main = FALSE;main_option_print_main104,3157
static gboolean main_option_version = FALSE;main_option_version105,3205
static gboolean main_option_verbose = FALSE;main_option_verbose106,3250
static gboolean main_option_test = FALSE;main_option_test107,3295
static char *main_option_prefix = NULL;main_option_prefix108,3337
static GOptionEntry main_option[] = {main_option110,3378
static char main_start_error_txt[MAX_STRSIZE];main_start_error_txt158,5434
static VipsBuf main_start_error = VIPS_BUF_STATIC( main_start_error_txt );main_start_error159,5481
main_log_add( const char *fmt, ... )main_log_add162,5569
main_log_get( void )main_log_get172,5746
main_log_is_empty( void )main_log_is_empty178,5834
main_log_null( const char *log_domain, GLogLevelFlags log_level,main_log_null188,6044
main_error_exit( const char *fmt, ... )main_error_exit198,6262
main_print_main( Symbol *sym )main_print_main224,6770
main_print_ws( Workspace *ws, gboolean *found )main_print_ws248,7346
main_quit( void )main_quit265,7702
static gboolean main_quit_running = FALSE;main_quit_running377,10007
main_quit_test_cb( void *sys, iWindowResult result )main_quit_test_cb380,10063
main_quit_test( void )main_quit_test399,10369
main_splash_enabled( void )main_splash_enabled425,10877
main_watchgroup_changed_cb( void )main_watchgroup_changed_cb432,11003
main_load( Workspace *ws, const char *filename )main_load445,11394
main_load_plug( char *name )main_load_plug486,12317
main_load_def( const char *filename )main_load_def501,12663
main_load_ws( const char *filename )main_load_ws519,13064
main_link_package( im_package *pack)main_link_package542,13524
main_load_startup( void )main_load_startup576,14345
main_junk_auto_load( Filemodel *filemodel )main_junk_auto_load627,15425
main_reload( void )main_reload640,15646
main_file_for_stock( GtkIconFactory *icon_factory,main_file_for_stock666,16123
main_register_icons( void )main_register_icons690,16812
main_x_init( int *argc, char ***argv )main_x_init784,20456
main_toobig_done_sub( const char *filename )main_toobig_done_sub856,22410
main_toobig_done( iWindow *iwnd, main_toobig_done866,22552
main_check_temp( double total )main_check_temp891,23281
main_mkdir( const char *dir )main_mkdir920,24006
main_set( const char *str )main_set929,24286
main( int argc, char *argv[] )main981,25260
breakargs( char *program, char *line, char **argv ) breakargs1530,39395
WinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, WinMain1575,40110

plotmodel.h,684
#define TYPE_PLOTMODEL TYPE_PLOTMODEL30,946
#define PLOTMODEL(PLOTMODEL31,992
#define PLOTMODEL_CLASS(PLOTMODEL_CLASS33,1073
#define IS_PLOTMODEL(IS_PLOTMODEL35,1175
#define IS_PLOTMODEL_CLASS(IS_PLOTMODEL_CLASS36,1245
struct _Plotmodel {_Plotmodel39,1335
	iObject parent_class;parent_class40,1355
	Plot *plot;plot44,1414
	guint changed_sid;changed_sid45,1427
	guint destroy_sid;destroy_sid46,1447
	int width;width50,1539
	int height;height51,1551
	int mag;mag55,1588
	gboolean show_status;show_status56,1598
typedef struct _PlotmodelClass {_PlotmodelClass59,1625
	iObjectClass parent_class;parent_class60,1658
} PlotmodelClass;PlotmodelClass64,1708

secret.c,719
secret_add( Symbol *secret, Compile *compile, gboolean *changed )secret_add111,2029
secret_set_class( Compile *compile ) secret_set_class173,3791
secret_is_nonlocal( Symbol *child, Compile *compile )secret_is_nonlocal191,4229
secret_find_nonlocal( Compile *compile )secret_find_nonlocal208,4626
secret_test( Symbol *child, Compile *compile, gboolean *changed )secret_test222,4896
secret_close( Compile *compile, gboolean *changed )secret_close241,5365
secret_all_add( Compile *compile, Symbol *param )secret_all_add267,5994
secret_all_sym( Symbol *param, Compile *compile )secret_all_sym277,6212
secret_all( Compile *compile ) secret_all287,6453
secret_build( Compile *compile )secret_build302,6771

iimageview.h,688
#define TYPE_IIMAGEVIEW TYPE_IIMAGEVIEW30,901
#define IIMAGEVIEW(IIMAGEVIEW31,949
#define IIMAGEVIEW_CLASS(IIMAGEVIEW_CLASS32,1030
#define IS_IIMAGEVIEW(IS_IIMAGEVIEW34,1135
#define IS_IIMAGEVIEW_CLASS(IS_IIMAGEVIEW_CLASS35,1207
typedef struct _iImageview {_iImageview38,1299
	Graphicview parent_object;parent_object39,1328
        guint popup_sid;	/* id for popup menu */popup_sid41,1357
	Imagedisplay *id;id43,1407
	Conversion *conv;conv44,1426
	GtkWidget *label;label45,1445
} iImageview;iImageview46,1464
typedef struct _iImageviewClass {_iImageviewClass48,1479
	GraphicviewClass parent_class;parent_class49,1513
} iImageviewClass;iImageviewClass53,1567

graphwindow.h,759
#define TYPE_GRAPHWINDOW TYPE_GRAPHWINDOW30,906
#define GRAPHWINDOW(GRAPHWINDOW31,956
#define GRAPHWINDOW_CLASS(GRAPHWINDOW_CLASS33,1043
#define IS_GRAPHWINDOW(IS_GRAPHWINDOW35,1151
#define IS_GRAPHWINDOW_CLASS(IS_GRAPHWINDOW_CLASS36,1225
struct _Graphwindow {_Graphwindow39,1319
	Floatwindow parent_class;parent_class40,1341
	char *dot;dot44,1411
	guint layout_timeout;layout_timeout49,1510
	Imagemodel *imagemodel;imagemodel53,1569
	Imagepresent *ip;ip54,1594
	guint workspace_changed_sid;workspace_changed_sid58,1647
	GVC_t *gvc;gvc61,1697
	graph_t *graph;graph62,1710
typedef struct _GraphwindowClass {_GraphwindowClass66,1754
	FloatwindowClass parent_class;parent_class67,1789
} GraphwindowClass;GraphwindowClass71,1843

reduce.c,5231
Reduce *reduce_context;reduce_context58,1317
static int nargs[] = {3, 3, 3, 1, 2, 3};nargs68,1510
int reduce_total_recomputations = 0;reduce_total_recomputations72,1578
static Expr *reduce_current_expr = NULL;reduce_current_expr76,1695
reduce_throw( Reduce *rc )reduce_throw81,1787
reduce_safe_pointer_wrap( Reduce *rc, reduce_safe_pointer_wrap91,1965
reduce_safe_pointer( Reduce *rc, reduce_safe_pointer_fn fn, reduce_safe_pointer107,2357
reduce_error_typecheck( Reduce *rc, reduce_error_typecheck129,2819
reduce_error_toobig( Reduce *rc, const char *name )reduce_error_toobig146,3230
reduce_get_list( Reduce *rc, PElement *list )reduce_get_list156,3464
reduce_map_list( Reduce *rc, reduce_map_list166,3663
typedef struct _ReduceMapDict {_ReduceMapDict197,4203
	reduce_map_dict_fn fn;fn198,4235
	void *a;a199,4259
	void *b;b200,4269
} ReduceMapDict;ReduceMapDict201,4279
reduce_map_dict_entry( Reduce *rc, PElement *head, ReduceMapDict *map_dict )reduce_map_dict_entry204,4311
reduce_map_dict( Reduce *rc, PElement *base, reduce_map_dict239,5150
reduce_clone_list_sub( Reduce *rc, PElement *head, PElement *out )reduce_clone_list_sub253,5442
reduce_clone_list( Reduce *rc, PElement *base, PElement *out )reduce_clone_list271,5894
reduce_add_char( Reduce *rc, PElement *base, char **buf, int *sz )reduce_add_char282,6151
reduce_get_string( Reduce *rc, PElement *base, char *buf, int n )reduce_get_string311,6703
reduce_get_lstring_sub( Reduce *rc, PElement *base, GSList **labels, int *n )reduce_get_lstring_sub339,7281
reduce_get_lstring( Reduce *rc, PElement *base, GSList **labels )reduce_get_lstring352,7591
reduce_get_bool( Reduce *rc, PElement *base )reduce_get_bool367,7853
reduce_get_real( Reduce *rc, PElement *base )reduce_get_real380,8095
reduce_get_class( Reduce *rc, PElement *base )reduce_get_class397,8393
reduce_get_image( Reduce *rc, PElement *base )reduce_get_image412,8673
reduce_add_real( Reduce *rc, PElement *base, double **buf, int *sz )reduce_add_real429,8999
reduce_get_realvec( Reduce *rc, PElement *base, double *buf, int n )reduce_get_realvec448,9315
reduce_add_image( Reduce *rc, PElement *base, Imageinfo ***buf, int *sz )reduce_add_image461,9575
reduce_get_imagevec( Reduce *rc, PElement *base, Imageinfo **buf, int n )reduce_get_imagevec480,9898
reduce_test_real( Reduce *rc, PElement *base, int *sz )reduce_test_real493,10190
reduce_get_real_size( Reduce *rc, PElement *base )reduce_get_real_size509,10432
reduce_get_line_size( Reduce *rc, PElement *base, int *w, int *h )reduce_get_line_size523,10698
reduce_get_matrix_size( Reduce *rc, reduce_get_matrix_size546,11135
	double *buf;		/* Start of output buffer */buf569,11592
	int mx;			/* Size of output buffer */mx570,11636
	int w, h;		/* Size of matrix we have generated */w571,11675
	int w, h;		/* Size of matrix we have generated */h571,11675
	int i;			/* Current write point */i572,11726
} GetMatrixInfo;GetMatrixInfo573,11762
reduce_get_line( Reduce *rc, PElement *base, GetMatrixInfo *gmi )reduce_get_line578,11853
reduce_get_matrix( Reduce *rc, reduce_get_matrix615,12572
reduce_is_elist( Reduce *rc, PElement *base )reduce_is_elist637,12949
reduce_is_list( Reduce *rc, PElement *base )reduce_is_list649,13135
reduce_test_char( Reduce *rc, PElement *base, int *sz )reduce_test_char667,13645
reduce_n_is_string( Reduce *rc, PElement *base, int sz )reduce_n_is_string694,14064
reduce_is_string( Reduce *rc, PElement *base )reduce_is_string722,14629
reduce_is_finitestring( Reduce *rc, PElement *base )reduce_is_finitestring730,14778
reduce_is_realvec( Reduce *rc, PElement *base )reduce_is_realvec738,14925
reduce_test_line( Reduce *rc, PElement *base, int *w, int *h )reduce_test_line756,15264
reduce_is_matrix( Reduce *rc, PElement *base )reduce_is_matrix769,15522
reduce_is_class( Reduce *rc, PElement *klass )reduce_is_class785,15817
reduce_is_instanceof_exact( Reduce *rc, const char *name, PElement *instance )reduce_is_instanceof_exact800,16068
reduce_is_instanceof( Reduce *rc, const char *name, PElement *instance )reduce_is_instanceof818,16537
reduce_list_length_max( Reduce *rc, PElement *base, int max_length )reduce_list_length_max837,17064
reduce_list_length( Reduce *rc, PElement *base )reduce_list_length883,17884
reduce_list_index( Reduce *rc, PElement *base, int n, PElement *out )reduce_list_index891,18057
argserror( Reduce *rc,  PElement *a )argserror948,19119
is_WHNF( PElement *out )is_WHNF965,19501
reduce_spine( Reduce *rc, PElement *out )reduce_spine1047,21234
reduce_spine_strict( Reduce *rc, PElement *np )reduce_spine_strict1907,38274
reduce_destroy( Reduce *rc )reduce_destroy1933,38823
reduce_heap_max_fn( Heap *heap )reduce_heap_max_fn1944,39073
reduce_new( void )reduce_new1952,39189
reduce_pelement( Reduce *rc, ReduceFunction fn, PElement *out )reduce_pelement1984,39863
reduce_register( Symbol *sym )reduce_register1998,40121
reduce_unregister( Symbol *sym )reduce_unregister2009,40331
reduce_regenerate( Expr *expr, PElement *out )reduce_regenerate2020,40550
reduce_regenerate_member( Expr *expr, PElement *ths, PElement *out )reduce_regenerate_member2085,41895

predicate.c,637
is_system( Symbol *sym )is_system37,1147
is_separator( Symbol *sym )is_separator63,1720
is_class( Compile *compile )is_class80,2054
is_super( Symbol *sym )is_super88,2175
is_this( Symbol *sym )is_this101,2450
is_member_enclosing( Compile *compile, Symbol *sym )is_member_enclosing112,2709
is_scope( Symbol *sym )is_scope126,3081
is_top( Symbol *sym )is_top136,3383
is_member( Symbol *sym )is_member147,3579
is_memberfunc( Compile *compile )is_memberfunc156,3760
is_value( Symbol *sym )is_value165,3935
is_ancestor( Symbol *context, Symbol *sym )is_ancestor173,4060
is_menuable( Symbol *sym )is_menuable185,4272

iregiongroup.h,576
#define TYPE_IREGIONGROUP TYPE_IREGIONGROUP30,922
#define IREGIONGROUP(IREGIONGROUP31,974
#define IREGIONGROUP_CLASS(IREGIONGROUP_CLASS33,1076
#define IS_IREGIONGROUP(IS_IREGIONGROUP36,1193
#define IS_IREGIONGROUP_CLASS(IS_IREGIONGROUP_CLASS38,1284
#define IREGIONGROUP_GET_CLASS(IREGIONGROUP_GET_CLASS40,1382
struct _iRegiongroup {_iRegiongroup44,1503
	Classmodel parent_class;parent_class45,1526
typedef struct _iRegiongroupClass {_iRegiongroupClass49,1557
	ClassmodelClass parent_class;parent_class50,1593
} iRegiongroupClass;iRegiongroupClass54,1646

view.h,1923
#define TYPE_VIEW TYPE_VIEW30,913
#define VIEW(VIEW31,949
#define VIEW_CLASS(VIEW_CLASS32,1012
#define IS_VIEW(IS_VIEW34,1099
#define IS_VIEW_CLASS(IS_VIEW_CLASS35,1159
#define VIEW_GET_CLASS(VIEW_GET_CLASS37,1238
	View *parent_view;		/* Us */parent_view44,1491
	Model *child_model;		/* The child we are watching */child_model45,1521
	guint child_model_changed_sid;	/* Listen to "changed" on child here */child_model_changed_sid46,1575
	View *child_view;		/* The child view for this model */child_view47,1647
} ViewChild;ViewChild48,1703
struct _View {_View50,1717
	vObject parent_object;parent_object51,1732
	guint pos_changed_sid;		/* Signals we use to watch iObject */pos_changed_sid55,1784
	guint scrollto_sid;scrollto_sid56,1847
	guint layout_sid;layout_sid57,1868
	guint reset_sid;reset_sid58,1887
	guint child_add_sid;child_add_sid59,1905
	guint child_remove_sid;child_remove_sid60,1927
	View *parent;			/* Enclosing view (if any) */parent62,1953
	GSList *managed;		/* List of ViewChild for us */managed63,2000
	gboolean scannable;		/* On scannable list */scannable65,2051
	gboolean resettable;		/* On resettable list */resettable66,2097
typedef struct _ViewClass {_ViewClass69,2149
	vObjectClass parent_class;parent_class70,2177
	void (*link)( View *, Model *, View * );link89,2550
	void (*child_add)( View *parent, View *child );child_add90,2592
	void (*child_remove)( View *parent, View *child );child_remove91,2641
	void (*child_position)( View *parent, View *child );child_position92,2693
	void (*child_front)( View *parent, View *child );child_front93,2747
	gboolean (*display)( View *parent, Model *child );display94,2798
	void (*reset)( View * );reset109,3086
	void *(*scan)( View * );	scan110,3112
	void (*scrollto)( View *, ModelScrollPosition );scrollto111,3139
	void (*layout)( View * );layout112,3189
} ViewClass;ViewClass113,3216

tool.c,2952
static FilemodelClass *parent_class = NULL;parent_class39,1013
#define MAX_NAME MAX_NAME43,1118
tool_error( Tool *tool, VipsBuf *buf )tool_error46,1147
tool_linkreport_sym_sym( Symbol *child, tool_linkreport_sym_sym60,1489
tool_linkreport_sym( Symbol *sym, VipsBuf *buf, gboolean *found )tool_linkreport_sym89,2199
tool_linkreport_tool( Tool *tool, VipsBuf *buf, gboolean *found )tool_linkreport_tool100,2431
tool_dispose( GObject *gobject )tool_dispose117,2790
tool_view_new( Model *model, View *parent )tool_view_new159,3608
tool_save_text( Model *model, iOpenFile *of )tool_save_text167,3744
tool_type_to_char( Tooltype type )tool_type_to_char199,4324
tool_info( iObject *iobject, VipsBuf *buf )tool_info212,4540
tool_parent_add( iContainer *child )tool_parent_add230,5058
tool_class_init( ToolClass *class )tool_class_init241,5287
tool_init( Tool *tool )tool_init266,5873
tool_get_type( void )tool_get_type275,6018
tool_link( Tool *tool, Toolkit *kit, int pos, const char *name )tool_link302,6564
toolitem_free( Toolitem *toolitem )toolitem_free314,6880
toolitem_new( Toolitem *parent, Compile *compile, Tool *tool )toolitem_new345,7570
toolitem_set_name( Toolitem *toolitem, PElement *root )toolitem_set_name384,8424
toolitem_set_tooltip( Toolitem *toolitem, PElement *root )toolitem_set_tooltip435,9708
toolitem_set_pullright( Toolitem *toolitem, PElement *root )toolitem_set_pullright481,10673
toolitem_set_action( Toolitem *toolitem, PElement *root )toolitem_set_action501,11141
toolitem_set_path( Toolitem *toolitem )toolitem_set_path538,12122
toolitem_set_user_path( Toolitem *toolitem )toolitem_set_user_path553,12519
toolitem_set_help_sub( Symbol *param, VipsBuf *buf )toolitem_set_help_sub567,12901
toolitem_set_help( Toolitem *toolitem )toolitem_set_help576,13070
toolitem_build( Tool *tool, toolitem_build598,13669
toolitem_build_all_sub( Symbol *sym, Toolitem *parent )toolitem_build_all_sub639,14904
toolitem_build_all( Tool *tool, Compile *compile, PElement *root,toolitem_build_all649,15110
toolitem_print( Toolitem *toolitem ) toolitem_print710,16523
toolitem_print_all( Toolitem *toolitem )toolitem_print_all720,16726
tool_toolitem_rebuild( Tool *tool )tool_toolitem_rebuild735,17003
tool_new_value_cb( Symbol *sym, Tool *tool )tool_new_value_cb774,17790
tool_new_sym( Toolkit *kit, int pos, Symbol *sym )tool_new_sym788,18037
tool_new_sep( Toolkit *kit, int pos )tool_new_sep832,18966
tool_find( Toolkit *kit, const char *name )tool_find851,19404
tool_new_dia( Toolkit *kit, int pos, tool_new_dia860,19621
toolitem_lookup_toolitem( Toolitem *toolitem, Symbol *action )toolitem_lookup_toolitem896,20470
toolitem_lookup_tool( Tool *tool, Symbol *action )toolitem_lookup_tool906,20730
toolitem_lookup_toolkit( Toolkit *kit, Symbol *action )toolitem_lookup_toolkit915,20914
toolitem_lookup( Toolkitgroup *kitg, Symbol *action )toolitem_lookup926,21179

doubleclick.h,136
typedef void (*DoubleclickFunc)( GtkWidget *, void *, guint );DoubleclickFunc30,914
#define DOUBLECLICK_FUNC(DOUBLECLICK_FUNC31,977

editview.h,619
#define TYPE_EDITVIEW TYPE_EDITVIEW30,924
#define EDITVIEW(EDITVIEW31,968
#define EDITVIEW_CLASS(EDITVIEW_CLASS32,1043
#define IS_EDITVIEW(IS_EDITVIEW34,1142
#define IS_EDITVIEW_CLASS(IS_EDITVIEW_CLASS35,1210
typedef struct _Editview {_Editview38,1298
	Graphicview parent_object;parent_object39,1325
        GtkWidget *label;		/* Display caption here */label43,1372
        GtkWidget *text;		/* Edit value here */text44,1426
} Editview;Editview45,1474
typedef struct _EditviewClass {_EditviewClass47,1487
	GraphicviewClass parent_class;parent_class48,1519
} EditviewClass;EditviewClass52,1573

option.h,624
#define TYPE_OPTION TYPE_OPTION30,898
#define OPTION(OPTION31,938
#define OPTION_CLASS(OPTION_CLASS33,1022
#define IS_OPTION(IS_OPTION35,1117
#define IS_OPTION_CLASS(IS_OPTION_CLASS37,1196
#define OPTION_GET_CLASS(OPTION_GET_CLASS39,1282
typedef struct _Option {_Option42,1381
	Classmodel parent_class;parent_class43,1406
	GSList *labels;		/* [[char]] for option fields */labels47,1461
	int value;		/* Index of current option */value48,1512
} Option;Option49,1555
typedef struct _OptionClass {_OptionClass51,1566
	ClassmodelClass parent_class;parent_class52,1596
} OptionClass;OptionClass56,1649

main.h,0

columnview.c,3095
static ViewClass *parent_class = NULL;parent_class36,933
static GtkWidget *columnview_menu = NULL;columnview_menu40,1007
columnview_caption_cb( GtkWidget *wid, GtkWidget *host, Columnview *cview )columnview_caption_cb45,1118
columnview_select_cb( GtkWidget *wid, GtkWidget *host, Columnview *cview )columnview_select_cb59,1440
columnview_clone_cb( GtkWidget *wid, GtkWidget *host, Columnview *cview )columnview_clone_cb71,1703
columnview_save_as_sub( iWindow *iwnd, columnview_save_as_sub96,2467
columnview_save_as_cb( GtkWidget *wid, GtkWidget *host, Columnview *cview )columnview_save_as_cb126,3217
columnview_filename( char *file, const char *caption )columnview_filename148,4056
static char *columnview_to_menu_last_toolkit = NULL;columnview_to_menu_last_toolkit169,4524
columnview_to_menu_done_cb( iWindow *iwnd, void *client, columnview_to_menu_done_cb174,4614
columnview_to_menu_cb( GtkWidget *wid, GtkWidget *host, Columnview *cview )columnview_to_menu_cb222,5849
columnview_get_position( Columnview *cview, int *x, int *y, int *w, int *h )columnview_get_position263,7148
columnview_left_press( Columnview *cview, GdkEvent *ev )columnview_left_press293,8023
	Column *col;		/* Column we are snapping */col357,9552
	Column *best;		/* Closest we've found so far */best358,9596
} ColumnviewSnap;ColumnviewSnap359,9645
columnview_snap_column( Column *col, ColumnviewSnap *snap )columnview_snap_column362,9678
columnview_snap( Column *col )columnview_snap374,9923
columnview_left_motion( Columnview *cview, GdkEvent *ev )columnview_left_motion392,10317
columnview_left_release( Columnview *cview, GdkEvent *ev )columnview_left_release476,12259
columnview_event_cb( GtkWidget *widget, GdkEvent *ev, Columnview *cview )columnview_event_cb516,13208
columnview_updown_cb( GtkWidget *wid, Columnview *cview )columnview_updown_cb570,14509
columnview_destroy_cb( GtkWidget *wid, GtkWidget *host, Columnview *cview )columnview_destroy_cb580,14721
columnview_destroy2_cb( GtkWidget *wid, Columnview *cview )columnview_destroy2_cb590,14999
columnview_caption_enter_cb( GtkWidget *wid, Columnview *cview )columnview_caption_enter_cb600,15250
columnview_caption_cancel_cb( GtkWidget *widget, columnview_caption_cancel_cb622,15823
columnview_add_caption( Columnview *cview )columnview_add_caption639,16235
columnview_text_enter_cb( GtkWidget *wid, Columnview *cview )columnview_text_enter_cb660,17026
columnview_add_text( Columnview *cview )columnview_add_text682,17558
columnview_refresh( vObject *vobject )columnview_refresh705,18348
columnview_link( View *view, Model *model, View *parent )columnview_link827,21884
columnview_child_add( View *parent, View *child )columnview_child_add838,22132
columnview_scrollto( View *view, ModelScrollPosition position )columnview_scrollto854,22672
columnview_class_init( ColumnviewClass *class )columnview_class_init873,23176
columnview_init( Columnview *cview )columnview_init911,24256
columnview_get_type( void )columnview_get_type1010,28040
columnview_new( void )columnview_new1033,28468

secret.h,0

reduce.h,1141
#define SPINE_SIZE SPINE_SIZE34,1116
struct _Reduce {_Reduce38,1214
	HeapNode *nstack[SPINE_SIZE];nstack41,1271
	int sp;sp45,1356
	int fstack[SPINE_SIZE];fstack49,1431
	PElement wbstack[SPINE_SIZE];wbstack53,1523
	int fsp;fsp57,1585
	Heap *heap;heap61,1623
	int running;running66,1746
	jmp_buf error[SPINE_SIZE];error67,1760
	int sps[SPINE_SIZE];sps68,1788
	int fsps[SPINE_SIZE];fsps69,1810
	int tsp[SPINE_SIZE];tsp70,1833
#define RSPUSH(RSPUSH73,1859
#define RSFRAMESIZE(RSFRAMESIZE85,2142
#define RSCHECKARGS(RSCHECKARGS89,2250
#define RSFRAMEEMPTY(RSFRAMEEMPTY93,2325
#define RSGET(RSGET97,2430
#define RSGETWB(RSGETWB101,2529
#define RSPUSHFRAME(RSPUSHFRAME103,2581
#define RSPOPFRAME(RSPOPFRAME117,2912
#define RSPOP(RSPOP129,3181
#define REDUCE_CATCH_START(REDUCE_CATCH_START143,3579
#define REDUCE_CATCH_STOP REDUCE_CATCH_STOP159,3990
typedef void *(*reduce_safe_pointer_fn)( Reduce *rc, PElement *, reduce_safe_pointer_fn169,4152
typedef void *(*reduce_map_list_fn)( Reduce *rc,reduce_map_list_fn177,4506
typedef void *(*reduce_map_dict_fn)( Reduce *, reduce_map_dict_fn181,4682

predicate.h,0

tool.h,1873
struct _Toolitem {_Toolitem32,956
	Compile *compile;compile39,1209
	Tool *tool;tool43,1271
	Symbol *action_sym;action_sym47,1360
	gboolean is_separator;is_separator51,1412
	gboolean is_pullright;is_pullright55,1514
	GSList *children;children60,1634
	Toolitem *parent;parent61,1653
	gboolean is_action;is_action65,1727
	char *label;		/* eg. "W_hite Balance" */label67,1749
	char *name;		/* eg. "White Balance" */name68,1791
	char *icon;		/* eg. "$VIPSHOME/icons/wb.png" */icon69,1831
	char *tooltip;		/* eg. "move whitepoint to region neutral" */tooltip70,1880
	char *help;		/* eg. "White Balance r: move ..." */help71,1943
	char *action;		/* eg. "White_balance_widget._action" */action72,1995
	char *path;		/* eg. "<mainw>/Toolkits/Image" */path73,2052
	char *user_path;	/* eg. "Image / White Balance" */user_path74,2101
#define TYPE_TOOL TYPE_TOOL77,2157
#define TOOL(TOOL78,2193
#define TOOL_CLASS(TOOL_CLASS80,2271
#define IS_TOOL(IS_TOOL82,2360
#define IS_TOOL_CLASS(IS_TOOL_CLASS84,2435
#define TOOL_GET_CLASS(TOOL_GET_CLASS86,2517
	TOOL_SYM,TOOL_SYM93,2748
	TOOL_DIA,TOOL_DIA94,2759
	TOOL_SEPTOOL_SEP95,2770
} Tooltype;Tooltype96,2780
struct _Tool {_Tool100,2829
	Filemodel parent_class;parent_class101,2844
	Tooltype type;		type103,2870
	Symbol *sym;		/* For SYM tools: symbol this tool represents */sym104,2888
	guint new_value_sid;	/* Watch for new_value with this */new_value_sid105,2952
	Symbol *link_sym;	/* the sym we are watching (in case ->sym islink_sym106,3010
	Toolkit *kit; 		/* Link back to toolkit */kit109,3120
	int lineno;		/* -1 for not known, or lineno in kit */lineno110,3164
	Toolitem *toolitem;	/* Items made by this tool */toolitem112,3220
typedef struct _ToolClass {_ToolClass115,3275
	FilemodelClass parent_class;parent_class116,3303
} ToolClass;ToolClass120,3355

watch.c,5343
static iContainerClass *watchgroup_parent_class = NULL;watchgroup_parent_class36,948
	SIG_WATCH_CHANGED,	/* "changed" on one of our watches */SIG_WATCH_CHANGED41,1033
	SIG_LASTSIG_LAST42,1091
static guint watchgroup_signals[SIG_LAST] = { 0 };watchgroup_signals45,1105
watchgroup_changed( Watchgroup *watchgroup, Watch *watch )watchgroup_changed48,1170
watchgroup_class_init( WatchgroupClass *class )watchgroup_class_init55,1340
watchgroup_init( Watchgroup *watchgroup )watchgroup_init70,1735
watchgroup_get_type( void )watchgroup_get_type80,1887
watchgroup_new( Workspacegroup *workspacegroup, const char *name )watchgroup_new105,2483
watchgroup_get_workspace( Watchgroup *watchgroup )watchgroup_get_workspace123,2908
watchgroup_save( Watchgroup *watchgroup )watchgroup_save143,3299
watchgroup_dirty_timeout_cb( Watchgroup *watchgroup )watchgroup_dirty_timeout_cb165,3752
watchgroup_dirty( Watchgroup *watchgroup )watchgroup_dirty175,3904
watchgroup_flush( Watchgroup *watchgroup )watchgroup_flush195,4384
static iContainerClass *watch_parent_class = NULL;watch_parent_class206,4606
static GSList *watch_all = NULL;watch_all207,4657
watch_finalize( GObject *gobject )watch_finalize210,4703
watch_dispose( GObject *gobject )watch_dispose229,5086
watch_changed( iObject *iobject )watch_changed252,5561
watch_class_init( WatchClass *class )watch_class_init268,5961
watch_init( Watch *watch )watch_init286,6422
watch_get_type( void )watch_get_type297,6601
watch_link( Watch *watch, Watchgroup *watchgroup, const char *name )watch_link322,7146
watch_destroy_cb( Row *row, Watch *watch )watch_destroy_cb330,7357
watch_changed_cb( Row *row, Watch *watch )watch_changed_cb345,7615
watch_attach( Watch *watch )watch_attach360,7939
watch_find( Watchgroup *watchgroup, const char *name )watch_find386,8620
watch_get( Watch *watch, void **out )watch_get393,8780
watch_relink( Watch *watch )watch_relink416,9178
watch_relink_all( void )watch_relink_all428,9344
watch_vset( Watch *watch, const char *fmt, va_list args )watch_vset434,9437
watch_set( Watch *watch, const char *fmt, ... )watch_set458,10024
static WatchClass *watch_double_parent_class = NULL;watch_double_parent_class467,10167
watch_double_update( Watch *watch )watch_double_update470,10237
watch_double_get_value( Watch *watch )watch_double_get_value492,10673
watch_double_class_init( WatchDoubleClass *class )watch_double_class_init500,10824
watch_double_init( WatchDouble *watch_double )watch_double_init511,11101
watch_double_get_type( void )watch_double_get_type521,11253
watch_double_new( Watchgroup *watchgroup, const char *name )watch_double_new546,11863
watch_double_get( Watchgroup *watchgroup, const char *name, double fallback )watch_double_get557,12118
static WatchClass *watch_int_parent_class = NULL;watch_int_parent_class576,12502
watch_int_update( Watch *watch )watch_int_update579,12569
watch_int_get_value( Watch *watch )watch_int_get_value608,13261
watch_int_class_init( WatchIntClass *class )watch_int_class_init616,13397
watch_int_init( WatchInt *watch_int )watch_int_init627,13659
watch_int_get_type( void )watch_int_get_type637,13794
watch_int_new( Watchgroup *watchgroup, const char *name )watch_int_new662,14374
watch_int_get( Watchgroup *watchgroup, const char *name, int fallback )watch_int_get672,14601
static WatchClass *watch_path_parent_class = NULL;watch_path_parent_class691,14979
watch_path_finalize( GObject *gobject )watch_path_finalize694,15043
watch_path_update( Watch *watch )watch_path_update715,15470
watch_path_get_value( Watch *watch )watch_path_get_value735,15849
watch_path_class_init( WatchPathClass *class )watch_path_class_init743,15990
watch_path_init( WatchPath *watch_path )watch_path_init757,16361
watch_path_get_type( void )watch_path_get_type767,16503
watch_path_new( Watchgroup *watchgroup, const char *name )watch_path_new792,17093
watch_path_get( Watchgroup *watchgroup, const char *name, GSList *fallback )watch_path_get803,17335
static WatchClass *watch_bool_parent_class = NULL;watch_bool_parent_class822,17716
watch_bool_update( Watch *watch )watch_bool_update825,17784
watch_bool_get_value( Watch *watch )watch_bool_get_value847,18242
watch_bool_class_init( WatchBoolClass *class )watch_bool_class_init855,18383
watch_bool_init( WatchBool *watch_bool )watch_bool_init866,18650
watch_bool_get_type( void )watch_bool_get_type876,18793
watch_bool_new( Watchgroup *watchgroup, const char *name )watch_bool_new901,19383
watch_bool_get( Watchgroup *watchgroup, const char *name, gboolean fallback )watch_bool_get912,19626
static WatchClass *watch_string_parent_class = NULL;watch_string_parent_class931,20008
watch_string_finalize( GObject *gobject )watch_string_finalize934,20074
watch_string_update( Watch *watch )watch_string_update955,20502
watch_string_get_value( Watch *watch )watch_string_get_value974,20864
watch_string_class_init( WatchStringClass *class )watch_string_class_init982,21015
watch_string_init( WatchString *watch_string )watch_string_init996,21398
watch_string_get_type( void )watch_string_get_type1006,21550
watch_string_new( Watchgroup *watchgroup, const char *name )watch_string_new1031,22160
watch_string_get( Watchgroup *watchgroup, watch_string_get1042,22421

toggleview.c,537
static GraphicviewClass *parent_class = NULL;parent_class36,950
toggleview_destroy( GtkObject *object )toggleview_destroy39,1009
toggleview_change_cb( GtkWidget *widget, Toggleview *togview )toggleview_change_cb57,1326
toggleview_refresh( vObject *vobject )toggleview_refresh71,1685
toggleview_class_init( ToggleviewClass *class )toggleview_class_init85,2072
toggleview_init( Toggleview *togview )toggleview_init103,2444
toggleview_get_type( void )toggleview_get_type114,2820
toggleview_new( void )toggleview_new137,3299

vector.c,283
static ValueClass *parent_class = NULL;parent_class36,930
vector_finalize( GObject *gobject )vector_finalize39,983
vector_class_init( VectorClass *class )vector_class_init59,1321
vector_init( Vector *vector )vector_init74,1607
vector_get_type( void )vector_get_type80,1703

iwindow.c,3948
static GtkWindowClass *parent_class = NULL;parent_class77,1874
static GSList *iwindow_all = NULL;iwindow_all81,1948
static GdkCursor *iwindow_cursor[IWINDOW_SHAPE_LAST] = { NULL };iwindow_cursor85,2008
static const char *iwindow_cursor_name[] = {iwindow_cursor_name90,2134
iwindow_number( void )iwindow_number123,2904
iwindow_map_all( iWindowMapFn fn, void *a )iwindow_map_all131,3006
iwindow_make_cursor_data( guchar *src_bits, guchar *msk_bits, iwindow_make_cursor_data139,3214
iwindow_make_cursors( void )iwindow_make_cursors162,3786
iwindow_get_work_window( iWindow *iwnd )iwindow_get_work_window236,5952
iwindow_cursor_update( iWindow *iwnd )iwindow_cursor_update247,6153
iwindow_cursor_set( iWindow *iwnd, iWindowShape *shape )iwindow_cursor_set310,7742
static gboolean hourglass_showing = FALSE;hourglass_showing320,7913
hourglass_begin( void )hourglass_begin323,7969
hourglass_update( void )hourglass_update329,8037
hourglass_end( void )hourglass_end343,8314
iwindow_cursor_context_new( iWindow *iwnd, int priority, const char *name )iwindow_cursor_context_new354,8531
iwindow_cursor_context_destroy( iWindowCursorContext *cntxt )iwindow_cursor_context_destroy372,8955
iwindow_cursor_context_set_cursor( iWindowCursorContext *cntxt, iwindow_cursor_context_set_cursor382,9168
iwindow_susp_new( iWindowFn fn, iwindow_susp_new397,9507
iwindow_susp_return( void *sys, iWindowResult result )iwindow_susp_return417,9920
iwindow_susp_comp( void *sys, iWindowResult result )iwindow_susp_comp430,10200
iwindow_true_cb( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys ) iwindow_true_cb445,10496
iwindow_false_cb( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys ) iwindow_false_cb451,10614
void iwindow_notify_null( void *client, iWindowResult result ) { }iwindow_notify_null458,10755
iwindow_final_death( iWindow *iwnd )iwindow_final_death463,10874
iwindow_notify_return( iWindow *iwnd )iwindow_notify_return480,11248
iwindow_notify_send( iWindow *iwnd, iwindow_notify_send502,11712
iwindow_finalize( GObject *gobject )iwindow_finalize518,12041
iwindow_destroy( GtkObject *gobject )iwindow_destroy541,12593
iwindow_popdown_notify( iWindow *iwnd, iWindowResult result )iwindow_popdown_notify562,13062
iwindow_delete_event( GtkWidget *widget, GdkEventAny *event )iwindow_delete_event601,14056
iwindow_configure_event( GtkWidget *widget, GdkEventConfigure *event )iwindow_configure_event624,14505
iwindow_parent_unmap_cb( GtkWidget *par, iWindow *iwnd )iwindow_parent_unmap_cb642,14946
static GtkActionEntry iwnd_actions[] = {iwnd_actions656,15252
iwindow_real_build( GtkWidget *widget )iwindow_real_build693,16148
iwindow_real_popdown( GtkWidget *widget )iwindow_real_popdown773,18570
iwindow_class_init( iWindowClass *class )iwindow_class_init779,18658
iwindow_init( iWindow *iwnd )iwindow_init816,19590
iwindow_get_type( void )iwindow_get_type854,20336
iwindow_new( GtkWindowType type )iwindow_new877,20757
iwindow_set_title( iWindow *iwnd, const char *title, ... )iwindow_set_title890,20967
iwindow_set_build( iWindow *iwnd, iwindow_set_build906,21327
iwindow_set_popdown( iWindow *iwnd, iWindowFn popdown, void *popdown_a )iwindow_set_popdown916,21544
iwindow_set_size_prefs( iWindow *iwnd, iwindow_set_size_prefs923,21684
iwindow_set_work_window( iWindow *iwnd, GdkWindow *work_window )iwindow_set_work_window931,21852
iwindow_set_parent( iWindow *iwnd, GtkWidget *parent )iwindow_set_parent938,21994
iwindow_kill( iWindow *iwnd )iwindow_kill953,22300
iwindow_kill_action_cb( GtkAction *action, iWindow *iwnd )iwindow_kill_action_cb978,22790
iwindow_build( iWindow *iwnd )iwindow_build984,22883
iwindow_get_root( GtkWidget *widget )iwindow_get_root996,23112
iwindow_get_root_noparent( GtkWidget *widget )iwindow_get_root_noparent1016,23595
iwindow_alert( GtkWidget *parent, GtkMessageType type )iwindow_alert1029,23922

gtksheet.c,619
const guint gtksheet_major_version = GTKSHEET_MAJOR_VERSION;gtksheet_major_version25,933
const guint gtksheet_minor_version = GTKSHEET_MINOR_VERSION;gtksheet_minor_version26,994
const guint gtksheet_micro_version = GTKSHEET_MICRO_VERSION;gtksheet_micro_version27,1055
const guint gtksheet_binary_age = GTKSHEET_BINARY_AGE;gtksheet_binary_age28,1116
const guint gtksheet_interface_age = GTKSHEET_INTERFACE_AGE;gtksheet_interface_age29,1171
gtksheet_check_version (guint required_major,gtksheet_check_version32,1248
_gtksheet_signal_emit(GtkObject *object, guint signal_id, ...)_gtksheet_signal_emit52,2051

expressionview.c,945
static GraphicviewClass *parent_class = NULL;parent_class36,938
expressionview_destroy( GtkObject *object )expressionview_destroy39,997
expressionview_scan( View *view )expressionview_scan60,1430
expressionview_activate_cb( GtkWidget *wid, Expressionview *expressionview )expressionview_activate_cb92,2166
expressionview_refresh( vObject *vobject )expressionview_refresh113,2740
expressionview_set_edit( Expressionview *expressionview, gboolean edit )expressionview_set_edit140,3534
expressionview_link( View *view, Model *model, View *parent )expressionview_link149,3744
expressionview_reset( View *view )expressionview_reset176,4501
expressionview_class_init( ExpressionviewClass *class )expressionview_class_init188,4821
expressionview_init( Expressionview *expressionview )expressionview_init211,5381
expressionview_get_type( void )expressionview_get_type226,5993
expressionview_new( void )expressionview_new250,6546

imagedisplay.c,2106
	SIG_AREA_CHANGED,	/* xywh area changed, canvas cods */SIG_AREA_CHANGED46,1127
	SIG_LASTSIG_LAST47,1183
static GtkDrawingAreaClass *parent_class = NULL;parent_class50,1197
static guint imagedisplay_signals[SIG_LAST] = { 0 };imagedisplay_signals52,1247
imagedisplay_queue_draw_area( Imagedisplay *id, Rect *area )imagedisplay_queue_draw_area57,1320
imagedisplay_paint_image( Imagedisplay *id, Rect *area )imagedisplay_paint_image72,1728
imagedisplay_paint_background( Imagedisplay *id, Rect *expose )imagedisplay_paint_background166,3909
imagedisplay_paint_background_clipped( Imagedisplay *id, Rect *expose )imagedisplay_paint_background_clipped181,4335
imagedisplay_paint( Imagedisplay *id, Rect *area )imagedisplay_paint217,5261
imagedisplay_expose( GtkWidget *widget, GdkEventExpose *event )imagedisplay_expose262,6260
imagedisplay_configure_event( GtkWidget *widget, GdkEventConfigure *event )imagedisplay_configure_event307,7239
imagedisplay_destroy( GtkObject *object )imagedisplay_destroy339,8056
imagedisplay_real_conversion_changed( Imagedisplay *id )imagedisplay_real_conversion_changed362,8541
imagedisplay_real_area_changed( Imagedisplay *id, Rect *dirty )imagedisplay_real_area_changed396,9441
imagedisplay_realize( GtkWidget *widget )imagedisplay_realize402,9566
imagedisplay_class_init( ImagedisplayClass *class )imagedisplay_class_init413,9822
imagedisplay_make_gcs( Imagedisplay *id )imagedisplay_make_gcs440,10675
imagedisplay_init( Imagedisplay *id )imagedisplay_init476,11589
imagedisplay_get_type( void )imagedisplay_get_type491,11829
imagedisplay_conversion_changed_cb( Conversion *conv, Imagedisplay *id )imagedisplay_conversion_changed_cb518,12452
imagedisplay_conversion_area_changed_cb( Conversion *conv, imagedisplay_conversion_area_changed_cb534,12852
imagedisplay_set_conversion( Imagedisplay *id, Conversion *conv )imagedisplay_set_conversion551,13322
imagedisplay_new( Conversion *conv )imagedisplay_new576,14019
imagedisplay_set_shrink_to_fit( Imagedisplay *id, gboolean shrink_to_fit )imagedisplay_set_shrink_to_fit591,14286

columnview.h,2572
#define TYPE_COLUMNVIEW TYPE_COLUMNVIEW30,890
#define COLUMNVIEW(COLUMNVIEW31,938
#define COLUMNVIEW_CLASS(COLUMNVIEW_CLASS33,1022
#define IS_COLUMNVIEW(IS_COLUMNVIEW35,1127
#define IS_COLUMNVIEW_CLASS(IS_COLUMNVIEW_CLASS36,1199
	COL_WAIT,		/* Rest state */COL_WAIT42,1356
	COL_SELECT,		/* Select start, but no drag yet */COL_SELECT43,1385
	COL_DRAG,		/* Drag state */COL_DRAG44,1435
        COL_EDIT		/* Editing caption */COL_EDIT45,1464
} ColumnviewState;ColumnviewState46,1504
struct _Columnview {_Columnview48,1524
	View view;view49,1545
	Workspaceview *wview;wview53,1596
        GtkWidget *main; 		/* Enclosing window for whole cview */main57,1658
        GtkWidget *lab;               	/* Columnview name label */lab58,1724
        GtkWidget *vbox;               	/* Outermost vbox for cview */vbox59,1791
        GtkWidget *frame;              	/* Enclosing frame for tally stuff */frame60,1862
        GtkWidget *title;              	/* Eventbox wrapper for title bar */title61,1940
        GtkWidget *titlehb;            	/* Title bar hbox */titlehb62,2017
        GtkWidget *updown;             	/* Fold up/down arrow */updown63,2078
        GtkWidget *updownb;            	/* Fold up/down button */updownb64,2143
        GtkWidget *head;               	/* Label on columnview */head65,2209
        GtkWidget *headfr;             	/* Frame wrapper around label */headfr66,2275
        GtkWidget *text;               	/* Text entry at bottom */text67,2348
        GtkWidget *textfr;             	/* Enclosing stuff for text entry */textfr68,2415
        GtkWidget *capedit;            	/* Shadow text for editing caption */capedit69,2492
        int lx, ly;			/* last pos we set */lx73,2617
        int lx, ly;			/* last pos we set */ly73,2617
        ColumnviewState state;         	/* Waiting or dragging */state74,2661
        int sx, sy;                     /* Drag start point */sx75,2727
        int sx, sy;                     /* Drag start point */sy75,2727
        int rx, ry;                     /* Drag offset */rx76,2790
        int rx, ry;                     /* Drag offset */ry76,2790
        int tx, ty;                     /* Tally window pos in root cods */tx77,2848
        int tx, ty;                     /* Tally window pos in root cods */ty77,2848
	gboolean selected;		/* Last drawn in selected state? */selected78,2924
typedef struct _ColumnviewClass {_ColumnviewClass81,2985
	ViewClass parent_class;parent_class82,3019
} ColumnviewClass;ColumnviewClass86,3066

managedgvalue.c,618
static ManagedClass *parent_class = NULL;parent_class36,938
managedgvalue_dispose( GObject *gobject )managedgvalue_dispose39,993
managedgvalue_info( iObject *iobject, VipsBuf *buf )managedgvalue_info54,1319
managedgvalue_class_init( ManagedgvalueClass *class )managedgvalue_class_init67,1674
managedgvalue_init( Managedgvalue *managedgvalue )managedgvalue_init80,2002
managedgvalue_get_type( void )managedgvalue_get_type90,2204
managedgvalue_set_value( Managedgvalue *managedgvalue, GValue *value )managedgvalue_set_value115,2764
managedgvalue_new( Heap *heap, GValue *value )managedgvalue_new123,3007

watch.h,7622
#define TYPE_WATCHGROUP TYPE_WATCHGROUP33,942
#define WATCHGROUP(WATCHGROUP34,990
#define WATCHGROUP_CLASS(WATCHGROUP_CLASS36,1086
#define IS_WATCHGROUP(IS_WATCHGROUP38,1193
#define IS_WATCHGROUP_CLASS(IS_WATCHGROUP_CLASS40,1280
#define WATCHGROUP_GET_CLASS(WATCHGROUP_GET_CLASS42,1374
typedef struct _Watchgroup {_Watchgroup45,1485
	iContainer parent_object;parent_object46,1514
	Workspacegroup *workspacegroup;workspacegroup50,1615
	const char *name;name54,1711
	guint auto_save_timeout;auto_save_timeout59,1820
} Watchgroup;Watchgroup60,1846
typedef struct _WatchgroupClass {_WatchgroupClass62,1861
	iContainerClass parent_class;parent_class63,1895
	void (*watch_changed)( Watchgroup *, Watch * );watch_changed70,2132
} WatchgroupClass;WatchgroupClass71,2181
#define TYPE_WATCH TYPE_WATCH80,2428
#define WATCH(WATCH81,2466
#define WATCH_CLASS(WATCH_CLASS83,2547
#define IS_WATCH(IS_WATCH85,2639
#define IS_WATCH_CLASS(IS_WATCH_CLASS87,2716
#define WATCH_GET_CLASS(WATCH_GET_CLASS89,2800
typedef void (*WatchCallbackFn)( void * );WatchCallbackFn92,2896
struct _Watch {_Watch94,2940
	iContainer parent_class;parent_class95,2956
	Row *row;			/* Row we watch */row97,2983
	gboolean ok;			/* Value read OK on last change */ok98,3015
	guint destroy_sid;		/* Listen for events */destroy_sid100,3067
	guint changed_sid;changed_sid101,3112
typedef struct _WatchClass {_WatchClass104,3136
	iContainerClass parent_class;parent_class105,3165
	gboolean (*update)( Watch * );update109,3229
	void *(*get_value)( Watch * );get_value113,3295
} WatchClass;WatchClass114,3327
typedef struct _WatchInt WatchInt;WatchInt126,3684
#define TYPE_WATCH_INT TYPE_WATCH_INT128,3720
#define WATCH_INT(WATCH_INT129,3766
#define WATCH_INT_CLASS(WATCH_INT_CLASS131,3858
#define IS_WATCH_INT(IS_WATCH_INT133,3961
#define IS_WATCH_INT_CLASS(IS_WATCH_INT_CLASS135,4046
#define WATCH_INT_GET_CLASS(WATCH_INT_GET_CLASS137,4138
struct _WatchInt {_WatchInt140,4245
	Watch parent_class;parent_class141,4264
	int value;value143,4286
typedef struct _WatchIntClass {_WatchIntClass146,4302
	WatchClass parent_class;parent_class147,4334
} WatchIntClass;WatchIntClass149,4361
typedef struct _WatchDouble WatchDouble;WatchDouble157,4543
#define TYPE_WATCH_DOUBLE TYPE_WATCH_DOUBLE159,4585
#define WATCH_DOUBLE(WATCH_DOUBLE160,4637
#define WATCH_DOUBLE_CLASS(WATCH_DOUBLE_CLASS162,4738
#define IS_WATCH_DOUBLE(IS_WATCH_DOUBLE164,4850
#define IS_WATCH_DOUBLE_CLASS(IS_WATCH_DOUBLE_CLASS166,4941
#define WATCH_DOUBLE_GET_CLASS(WATCH_DOUBLE_GET_CLASS168,5039
struct _WatchDouble {_WatchDouble172,5159
	Watch parent_class;parent_class173,5181
	double value;value175,5203
typedef struct _WatchDoubleClass {_WatchDoubleClass178,5222
	WatchClass parent_class;parent_class179,5257
} WatchDoubleClass;WatchDoubleClass181,5284
typedef struct _WatchPath WatchPath;WatchPath189,5458
#define TYPE_WATCH_PATH TYPE_WATCH_PATH191,5496
#define WATCH_PATH(WATCH_PATH192,5544
#define WATCH_PATH_CLASS(WATCH_PATH_CLASS194,5639
#define IS_WATCH_PATH(IS_WATCH_PATH196,5745
#define IS_WATCH_PATH_CLASS(IS_WATCH_PATH_CLASS198,5832
#define WATCH_PATH_GET_CLASS(WATCH_PATH_GET_CLASS200,5926
struct _WatchPath {_WatchPath203,6036
	Watch parent_class;parent_class204,6056
	GSList *value;value206,6078
typedef struct _WatchPathClass {_WatchPathClass209,6098
	WatchClass parent_class;parent_class210,6131
} WatchPathClass;WatchPathClass212,6158
typedef struct _WatchBool WatchBool;WatchBool217,6291
#define TYPE_WATCH_BOOL TYPE_WATCH_BOOL219,6329
#define WATCH_BOOL(WATCH_BOOL220,6377
#define WATCH_BOOL_CLASS(WATCH_BOOL_CLASS222,6472
#define IS_WATCH_BOOL(IS_WATCH_BOOL224,6578
#define IS_WATCH_BOOL_CLASS(IS_WATCH_BOOL_CLASS226,6665
#define WATCH_BOOL_GET_CLASS(WATCH_BOOL_GET_CLASS228,6759
struct _WatchBool {_WatchBool231,6869
	Watch parent_class;parent_class232,6889
	gboolean value;value234,6911
typedef struct _WatchBoolClass {_WatchBoolClass237,6932
	WatchClass parent_class;parent_class238,6965
} WatchBoolClass;WatchBoolClass240,6992
typedef struct _WatchString WatchString;WatchString245,7127
#define TYPE_WATCH_STRING TYPE_WATCH_STRING247,7169
#define WATCH_STRING(WATCH_STRING248,7221
#define WATCH_STRING_CLASS(WATCH_STRING_CLASS250,7322
#define IS_WATCH_STRING(IS_WATCH_STRING252,7434
#define IS_WATCH_STRING_CLASS(IS_WATCH_STRING_CLASS254,7525
#define WATCH_STRING_GET_CLASS(WATCH_STRING_GET_CLASS256,7623
struct _WatchString {_WatchString260,7743
	Watch parent_class;parent_class261,7765
	char *value;value263,7787
typedef struct _WatchStringClass {_WatchStringClass266,7805
	WatchClass parent_class;parent_class267,7840
} WatchStringClass;WatchStringClass269,7867
#define DISPLAY_RULERS DISPLAY_RULERS280,8076
#define DISPLAY_STATUS DISPLAY_STATUS282,8163
#define DISPLAY_CONVERSION DISPLAY_CONVERSION284,8250
#define DISPLAY_CROSSHAIR DISPLAY_CROSSHAIR290,8472
#define PAINTBOX_RECOMP PAINTBOX_RECOMP295,8602
#define BOX_BROWSER BOX_BROWSER300,8712
#define BOX_BROWSER_REMOTE BOX_BROWSER_REMOTE301,8792
#define DISPLAY_THUMBNAIL DISPLAY_THUMBNAIL306,8927
#define DISPLAY_THUMBNAIL_HQ DISPLAY_THUMBNAIL_HQ311,9049
#define PIN_FILESEL PIN_FILESEL316,9168
#define IP_JPEG_Q IP_JPEG_Q318,9254
#define IP_JPEG_ICC_PROFILE IP_JPEG_ICC_PROFILE320,9324
#define IP_JPEG_ICC_PROFILE_FILE IP_JPEG_ICC_PROFILE_FILE322,9413
#define IP_PPM_MODE IP_PPM_MODE325,9554
#define IP_CSV_SEPARATOR IP_CSV_SEPARATOR327,9627
#define IP_PNG_COMPRESSION IP_PNG_COMPRESSION329,9716
#define IP_PNG_INTERLACE IP_PNG_INTERLACE331,9803
#define IP_TIFF_COMPRESSION IP_TIFF_COMPRESSION333,9886
#define IP_TIFF_JPEG_Q IP_TIFF_JPEG_Q335,9975
#define IP_TIFF_LAYOUT IP_TIFF_LAYOUT337,10055
#define IP_TIFF_TILE_WIDTH IP_TIFF_TILE_WIDTH339,10134
#define IP_TIFF_TILE_HEIGHT IP_TIFF_TILE_HEIGHT341,10223
#define IP_TIFF_MULTI_RES IP_TIFF_MULTI_RES343,10314
#define IP_TIFF_FORMAT IP_TIFF_FORMAT345,10399
#define IP_TIFF_PREDICTOR IP_TIFF_PREDICTOR347,10478
#define CALC_RELOAD CALC_RELOAD352,10584
#define LINELENGTH LINELENGTH356,10691
#define VIPS_CPUS VIPS_CPUS363,10835
#define MAINW_TOOLBAR MAINW_TOOLBAR368,10926
#define MAINW_TOOLBAR_STYLE MAINW_TOOLBAR_STYLE370,11010
#define MAINW_STATUSBAR MAINW_STATUSBAR372,11102
#define WORKSPACE_LPANE_OPEN WORKSPACE_LPANE_OPEN375,11191
#define WORKSPACE_LPANE_POSITION WORKSPACE_LPANE_POSITION377,11290
#define WORKSPACE_RPANE_OPEN WORKSPACE_RPANE_OPEN379,11394
#define WORKSPACE_RPANE_POSITION WORKSPACE_RPANE_POSITION381,11493
#define MAX_HEAPSIZE MAX_HEAPSIZE387,11702
#define CALC_RECOMP_REGION CALC_RECOMP_REGION395,11863
#define CALC_RECOMP_REGION CALC_RECOMP_REGION398,11964
#define CALC_RECOMP_SLIDER CALC_RECOMP_SLIDER404,12090
#define POPUP_NEW_ROWS POPUP_NEW_ROWS409,12212
#define CALC_DISPLAY_LED CALC_DISPLAY_LED414,12356
#define VIPS_HISTORY_MAX VIPS_HISTORY_MAX419,12488
#define AUTO_WS_SAVE AUTO_WS_SAVE424,12600
#define IMAGE_WINDOW_WIDTH IMAGE_WINDOW_WIDTH429,12718
#define IMAGE_WINDOW_HEIGHT IMAGE_WINDOW_HEIGHT431,12810
#define PAINTBOX_FONT PAINTBOX_FONT436,12926
#define PAINTBOX_MAX_UNDO PAINTBOX_MAX_UNDO441,13061
#define IMAGE_FILE_TYPE IMAGE_FILE_TYPE446,13183
#define PATH_SEARCH PATH_SEARCH451,13291
#define PATH_START PATH_START453,13391
#define PATH_TMP PATH_TMP455,13488
#define TRACE_FUNCTIONS TRACE_FUNCTIONS460,13609
#define PRINT_CARTESIAN PRINT_CARTESIAN462,13703
#define PROGRAM_PANE_POSITION PROGRAM_PANE_POSITION467,13822

toggleview.h,561
#define TYPE_TOGGLEVIEW TYPE_TOGGLEVIEW30,908
#define TOGGLEVIEW(TOGGLEVIEW31,956
#define TOGGLEVIEW_CLASS(TOGGLEVIEW_CLASS32,1037
#define IS_TOGGLEVIEW(IS_TOGGLEVIEW34,1142
#define IS_TOGGLEVIEW_CLASS(IS_TOGGLEVIEW_CLASS35,1214
typedef struct _Toggleview {_Toggleview38,1306
	Graphicview parent_object;parent_object39,1335
	GtkWidget *toggle;toggle43,1391
} Toggleview;Toggleview44,1411
typedef struct _ToggleviewClass {_ToggleviewClass46,1426
	GraphicviewClass parent_class;parent_class47,1460
} ToggleviewClass;ToggleviewClass51,1514

vector.h,442
#define TYPE_VECTOR TYPE_VECTOR30,898
#define VECTOR(VECTOR31,938
#define VECTOR_CLASS(VECTOR_CLASS32,1007
#define IS_VECTOR(IS_VECTOR34,1100
#define IS_VECTOR_CLASS(IS_VECTOR_CLASS35,1164
typedef struct _Vector {_Vector38,1248
	Value parent_object;parent_object39,1273
} Vector;Vector41,1296
typedef struct _VectorClass {_VectorClass43,1307
	ValueClass parent_class;parent_class44,1337
} VectorClass;VectorClass48,1385

iwindow.h,4605
#define IWINDOW_HIWINDOW_H31,954
#define TYPE_IWINDOW TYPE_IWINDOW37,1031
#define IWINDOW(IWINDOW38,1073
#define IWINDOW_CLASS(IWINDOW_CLASS39,1145
#define IS_IWINDOW(IS_IWINDOW41,1241
#define IS_IWINDOW_CLASS(IS_IWINDOW_CLASS42,1307
#define IWINDOW_GET_CLASS(IWINDOW_GET_CLASS44,1392
typedef struct _iWindow iWindow;iWindow47,1488
typedef enum _iWindowShape {_iWindowShape51,1549
	IWINDOW_SHAPE_DROPPER = 0,IWINDOW_SHAPE_DROPPER54,1600
	IWINDOW_SHAPE_PEN,IWINDOW_SHAPE_PEN55,1628
	IWINDOW_SHAPE_SMUDGE,IWINDOW_SHAPE_SMUDGE56,1648
	IWINDOW_SHAPE_SMEAR,IWINDOW_SHAPE_SMEAR57,1671
	IWINDOW_SHAPE_TEXT,IWINDOW_SHAPE_TEXT58,1693
	IWINDOW_SHAPE_RECT,IWINDOW_SHAPE_RECT59,1714
	IWINDOW_SHAPE_FLOOD,IWINDOW_SHAPE_FLOOD60,1735
	IWINDOW_SHAPE_MOVE,IWINDOW_SHAPE_MOVE61,1757
	IWINDOW_SHAPE_EDIT,IWINDOW_SHAPE_EDIT62,1778
	IWINDOW_SHAPE_MAGIN,	IWINDOW_SHAPE_MAGIN63,1799
	IWINDOW_SHAPE_MAGOUT,	IWINDOW_SHAPE_MAGOUT64,1822
	IWINDOW_SHAPE_TOP,IWINDOW_SHAPE_TOP68,1871
	IWINDOW_SHAPE_BOTTOM,IWINDOW_SHAPE_BOTTOM69,1891
	IWINDOW_SHAPE_LEFT,IWINDOW_SHAPE_LEFT70,1914
	IWINDOW_SHAPE_RIGHT,IWINDOW_SHAPE_RIGHT71,1935
	IWINDOW_SHAPE_TOPRIGHT,IWINDOW_SHAPE_TOPRIGHT72,1957
	IWINDOW_SHAPE_TOPLEFT,IWINDOW_SHAPE_TOPLEFT73,1982
	IWINDOW_SHAPE_BOTTOMRIGHT,IWINDOW_SHAPE_BOTTOMRIGHT74,2006
	IWINDOW_SHAPE_BOTTOMLEFT,IWINDOW_SHAPE_BOTTOMLEFT75,2034
	IWINDOW_SHAPE_HGLASS1,IWINDOW_SHAPE_HGLASS179,2088
	IWINDOW_SHAPE_HGLASS2,IWINDOW_SHAPE_HGLASS280,2112
	IWINDOW_SHAPE_HGLASS3,IWINDOW_SHAPE_HGLASS381,2136
	IWINDOW_SHAPE_HGLASS4,IWINDOW_SHAPE_HGLASS482,2160
	IWINDOW_SHAPE_HGLASS5,IWINDOW_SHAPE_HGLASS583,2184
	IWINDOW_SHAPE_HGLASS6,IWINDOW_SHAPE_HGLASS684,2208
	IWINDOW_SHAPE_HGLASS7,IWINDOW_SHAPE_HGLASS785,2232
	IWINDOW_SHAPE_HGLASS8,IWINDOW_SHAPE_HGLASS886,2256
	IWINDOW_SHAPE_NONE,IWINDOW_SHAPE_NONE90,2323
	IWINDOW_SHAPE_LASTIWINDOW_SHAPE_LAST92,2345
} iWindowShape;iWindowShape93,2365
	iWindow *iwnd;iwnd99,2504
	int priority;			/* Higher priority == more on top */priority100,2520
	const char *name;		/* For debugging */name101,2574
	iWindowShape shape;shape105,2664
} iWindowCursorContext;iWindowCursorContext106,2685
typedef enum iwindow_result {iwindow_result110,2779
	IWINDOW_ERROR = 0,		/* Tried but failed */IWINDOW_ERROR111,2809
	IWINDOW_YES,			/* User tried the action */IWINDOW_YES112,2853
	IWINDOW_NO			/* User cancelled */IWINDOW_NO113,2897
} iWindowResult;iWindowResult114,2932
typedef void (*iWindowNotifyFn)( void *, iWindowResult );iWindowNotifyFn120,3140
typedef void (*iWindowFn)( iWindow *, void *, iWindowNotifyFn, void * );iWindowFn124,3236
typedef void (*iWindowBuildFn)( iWindow *, iWindowBuildFn128,3353
	iWindowFn fn;fn134,3536
	iWindow *iwnd;iwnd135,3551
	void *client;			client136,3567
	iWindowNotifyFn nfn;nfn137,3585
	void *sys;sys138,3607
} iWindowSusp;iWindowSusp139,3619
#define IWINDOW_SUSP(IWINDOW_SUSP141,3635
struct _iWindow {_iWindow143,3684
	GtkWindow parent_object;parent_object144,3702
	GtkWidget *parent;		/* Our parent widget */parent149,3843
	iWindow *parent_window;		/* Our parent window */parent_window150,3888
	guint parent_unmap_sid; 	/* Watch parent death here */parent_unmap_sid151,3938
	GtkWidget *work;work153,3995
	GtkAccelGroup *accel_group;accel_group154,4013
	Infobar *infobar;infobar155,4042
	char *title;title157,4062
	GtkActionGroup *action_group;action_group162,4170
	GtkUIManager *ui_manager;ui_manager163,4201
	iWindowBuildFn build;build167,4267
	void *build_a, *build_b, *build_c;build_a168,4290
	void *build_a, *build_b, *build_c;build_b168,4290
	void *build_a, *build_b, *build_c;build_c168,4290
	iWindowFn popdown;popdown173,4466
	void *popdown_a;popdown_a174,4486
	gboolean destroy;		/* True if being destroyed */destroy178,4531
	int pending;			/* Number of notifies waiting on */pending179,4581
	iWindowShape shape;		/* Global shape ... for hglass */shape183,4660
	GSList *contexts;		/* Set of other requested shapes */contexts184,4716
	GdkWindow *work_window;		/* The window we actually set */work_window185,4772
	const char *width_pref;		/* Prefs we save width/height in */width_pref189,4860
	const char *height_pref;height_pref190,4922
typedef struct _iWindowClass {_iWindowClass193,4952
	GtkWindowClass parent_class;parent_class194,4983
	void (*build)( GtkWidget * );build198,5058
	void (*popdown)( GtkWidget * );popdown199,5089
	gboolean transient;transient204,5241
} iWindowClass;iWindowClass205,5262
typedef void (*iWindowMapFn)( iWindow *, void * );iWindowMapFn208,5307

value.c,422
static ClassmodelClass *parent_class = NULL;parent_class36,948
value_finalize( GObject *gobject )value_finalize39,1006
value_generate_caption( iObject *iobject )value_generate_caption62,1445
value_view_new( Model *model, View *parent )value_view_new78,1883
value_class_init( ValueClass *class )value_class_init84,1973
value_init( Value *value )value_init103,2411
value_get_type( void )value_get_type109,2515

classmodel.c,4243
static HeapmodelClass *parent_class = NULL;parent_class36,968
image_value_init( ImageValue *image, Classmodel *classmodel )image_value_init39,1018
image_value_destroy( ImageValue *image )image_value_destroy47,1172
image_value_file_changed_cb( Imageinfo *ii, ImageValue *image )image_value_file_changed_cb54,1307
image_value_set( ImageValue *image, Imageinfo *ii )image_value_set70,1660
image_value_caption( ImageValue *value, VipsBuf *buf )image_value_caption91,2126
classmodel_get_instance( Classmodel *classmodel )classmodel_get_instance108,2630
classmodel_graphic_save_cb( iWindow *iwnd, classmodel_graphic_save_cb119,2861
classmodel_graphic_save( Classmodel *classmodel, GtkWidget *parent )classmodel_graphic_save146,3514
classmodel_graphic_replace_cb( iWindow *iwnd, classmodel_graphic_replace_cb184,4830
classmodel_graphic_replace( Classmodel *classmodel, GtkWidget *parent )classmodel_graphic_replace219,5681
classmodel_iimage_link( Classmodel *classmodel, iImage *iimage )classmodel_iimage_link260,7098
classmodel_iimage_unlink( Classmodel *classmodel, iImage *iimage )classmodel_iimage_unlink279,7601
classmodel_iimage_unlink_rev( iImage *iimage, Classmodel *classmodel )classmodel_iimage_unlink_rev300,8134
	Classmodel *classmodel;classmodel306,8286
	Imageinfo *ii;ii307,8311
} ClassmodelSearch;ClassmodelSearch308,8327
classmodel_iimage_expr_model( Model *model, ClassmodelSearch *parms )classmodel_iimage_expr_model311,8362
classmodel_iimage_expr( Expr *expr, ClassmodelSearch *parms )classmodel_iimage_expr332,9021
classmodel_iimage_update( Classmodel *classmodel, Imageinfo *ii )classmodel_iimage_update355,9583
classmodel_dict_new( Classmodel *classmodel, classmodel_dict_new385,10465
classmodel_class_member_new( Classmodel *classmodel,classmodel_class_member_new414,11137
classmodel_class_instance_new( Classmodel *classmodel )classmodel_class_instance_new502,13147
classmodel_dispose( GObject *gobject )classmodel_dispose562,14511
classmodel_info( iObject *iobject, VipsBuf *buf )classmodel_info586,15150
classmodel_parent_add( iContainer *child )classmodel_parent_add591,15217
#define MAX_WIDGETS MAX_WIDGETS600,15420
typedef struct _ClassmodelEdit {_ClassmodelEdit604,15482
	iDialog *idlg;idlg605,15515
	Classmodel *classmodel;classmodel607,15532
	GtkWidget *widgets[MAX_WIDGETS];widgets609,15558
} ClassmodelEdit;ClassmodelEdit610,15592
classmodel_done_member( Classmodel *classmodel,classmodel_done_member613,15627
classmodel_done_cb( iWindow *iwnd, void *client, classmodel_done_cb657,16550
classmodel_buildedit_member( Classmodel *classmodel, classmodel_buildedit_member681,17112
classmodel_buildedit( iDialog *idlg, GtkWidget *vb, ClassmodelEdit *eds )classmodel_buildedit730,18390
classmodel_edit( GtkWidget *parent, Model *model )classmodel_edit747,18877
classmodel_save_member( Classmodel *classmodel, classmodel_save_member784,19966
classmodel_save( Model *model, xmlNode *xnode )classmodel_save869,21936
classmodel_load_member( Classmodel *classmodel, classmodel_load_member895,22544
classmodel_load( Model *model, classmodel_load1018,25313
classmodel_parse_option( const char *key, PElement *value, classmodel_parse_option1058,26392
classmodel_get_item( Classmodel *classmodel, classmodel_get_item1082,26951
classmodel_update_model_member( Classmodel *classmodel, classmodel_update_model_member1209,29704
classmodel_update_model( Heapmodel *heapmodel )classmodel_update_model1230,30138
classmodel_update_heap( Heapmodel *heapmodel )classmodel_update_heap1268,31024
classmodel_clear_edited( Heapmodel *heapmodel )classmodel_clear_edited1301,31833
classmodel_real_class_get( Classmodel *classmodel, PElement *root )classmodel_real_class_get1311,32071
classmodel_class_init( ClassmodelClass *class )classmodel_class_init1317,32173
classmodel_init( Classmodel *classmodel )classmodel_init1360,33474
classmodel_get_type( void )classmodel_get_type1375,33736
classmodel_set_edited( Classmodel *classmodel, gboolean edited )classmodel_set_edited1400,34279
classmodel_update( Classmodel *classmodel )classmodel_update1427,34948
classmodel_new_classmodel( GType type, Rhs *rhs )classmodel_new_classmodel1452,35526

gtksheet.h,39
#define GTK_SHEET_HGTK_SHEET_H21,871

real.c,262
static ValueClass *parent_class = NULL;parent_class36,947
real_finalize( GObject *gobject )real_finalize39,1000
real_class_init( RealClass *class )real_class_init59,1324
real_init( Real *real )real_init74,1604
real_get_type( void )real_get_type80,1690

expressionview.h,640
#define TYPE_EXPRESSIONVIEW TYPE_EXPRESSIONVIEW30,906
#define EXPRESSIONVIEW(EXPRESSIONVIEW31,962
#define EXPRESSIONVIEW_CLASS(EXPRESSIONVIEW_CLASS33,1058
#define IS_EXPRESSIONVIEW(IS_EXPRESSIONVIEW36,1179
#define IS_EXPRESSIONVIEW_CLASS(IS_EXPRESSIONVIEW_CLASS37,1259
typedef struct _Expressionview {_Expressionview40,1359
	Graphicview parent_object;parent_object41,1392
        Formula *formula;formula43,1421
} Expressionview;Expressionview44,1447
typedef struct _ExpressionviewClass {_ExpressionviewClass46,1466
	GraphicviewClass parent_class;parent_class47,1504
} ExpressionviewClass;ExpressionviewClass51,1558

imagedisplay.h,1083
#define TYPE_IMAGEDISPLAY TYPE_IMAGEDISPLAY30,900
#define IMAGEDISPLAY(IMAGEDISPLAY31,952
#define IMAGEDISPLAY_CLASS(IMAGEDISPLAY_CLASS33,1054
#define IS_IMAGEDISPLAY(IS_IMAGEDISPLAY36,1171
#define IS_IMAGEDISPLAY_CLASS(IS_IMAGEDISPLAY_CLASS38,1262
#define IMAGEDISPLAY_GET_CLASS(IMAGEDISPLAY_GET_CLASS40,1360
struct _Imagedisplay {_Imagedisplay46,1562
	GtkDrawingArea parent_object;parent_object47,1585
	Conversion *conv;		/* Conversion we display */conv51,1644
	guint changed_sid;		/* Watch conv with these */changed_sid52,1692
	guint area_changed_sid; area_changed_sid53,1741
	gboolean shrink_to_fit; 	/* Auto-shrink mode */shrink_to_fit54,1767
	GdkGC *back_gc;back_gc58,1857
	GdkGC *top_gc;top_gc59,1874
	GdkGC *bottom_gc;bottom_gc60,1890
typedef struct _ImagedisplayClass {_ImagedisplayClass65,1937
	GtkDrawingAreaClass parent_class;parent_class68,2008
	void (*conversion_changed)( Imagedisplay * );conversion_changed72,2070
	void (*area_changed)( Imagedisplay *, Rect * );area_changed73,2117
} ImagedisplayClass;ImagedisplayClass74,2166

gtkutil.c,6643
static GtkTooltips *our_tooltips = NULL;our_tooltips38,957
adjustments_set_value( GtkAdjustment *hadj, GtkAdjustment *vadj,adjustments_set_value43,1041
object_destroy( void *obj )object_destroy72,1824
null_g_free( void *obj )null_g_free82,1975
widget_visible( GtkWidget *widget, gboolean visible )widget_visible92,2068
build_button( const char *stock_id, GtkSignalFunc cb, gpointer user )build_button103,2282
get_geo( GtkWidget *widget, const char *text, Rect *geo )get_geo118,2707
set_fixed( GtkWidget *widget, int nchars )set_fixed138,3142
build_entry( int nchars )build_entry149,3387
menu_build( const char *name )menu_build162,3578
menu_add_but( GtkWidget *menu, menu_add_but175,3758
menu_add_tog( GtkWidget *menu, const char *name, GtkSignalFunc cb, void *user )menu_add_tog193,4185
menu_add_sep( GtkWidget *menu )menu_add_sep208,4538
menu_add_pullright( GtkWidget *menu, const char *stock_id )menu_add_pullright223,4809
static GQuark quark_main = 0;quark_main242,5475
static GQuark quark_host = 0;quark_host243,5505
static GQuark quark_data = 0;quark_data244,5535
static GQuark quark_popup = 0;quark_popup245,5565
popup_build( const char *name )popup_build250,5640
popup_activate_cb( GtkWidget *item, PopupFunc cb )popup_activate_cb267,6058
popup_add_but( GtkWidget *popup, const char *name, PopupFunc cb )popup_add_but282,6441
popup_add_tog( GtkWidget *popup, const char *name, PopupFunc cb )popup_add_tog295,6748
popup_add_pullright( GtkWidget *popup, const char *name )popup_add_pullright308,7085
popup_show( GtkWidget *host, GdkEvent *ev )popup_show320,7333
popup_handle_event( GtkWidget *host, GdkEvent *ev, gpointer dummy )popup_handle_event333,7695
popup_link( GtkWidget *host, GtkWidget *popup, void *data )popup_link353,8124
popup_attach( GtkWidget *host, GtkWidget *popup, void *data )popup_attach362,8372
popup_detach( GtkWidget *host, guint sid )popup_detach374,8634
set_tooltip_events( GtkWidget *wid )set_tooltip_events380,8745
set_tooltip( GtkWidget *wid, const char *fmt, ... )set_tooltip389,8909
typedef struct _TooltipGenerate {_TooltipGenerate420,9472
	GtkWidget *widget;widget421,9506
	TooltipGenerateFn generate;generate423,9527
	void *a;a424,9556
	void *b;b425,9566
	VipsBuf buf;buf427,9577
	char txt[256];txt428,9591
} TooltipGenerate;TooltipGenerate429,9607
tooltip_generate_free( GtkWidget *widget, TooltipGenerate *gen )tooltip_generate_free432,9639
tooltip_generate_rebuild( GtkWidget *widget, tooltip_generate_rebuild443,9819
tooltip_generate_attach( GtkWidget *widget, TooltipGenerate *gen )tooltip_generate_attach458,10153
set_tooltip_generate( GtkWidget *widget, set_tooltip_generate474,10546
junk_tooltips( void )junk_tooltips500,11167
set_gentryv( GtkWidget *edit, const char *fmt, va_list ap )set_gentryv509,11296
set_gentry( GtkWidget *edit, const char *fmt, ... )set_gentry540,11870
set_glabel( GtkWidget *label, const char *fmt, ... )set_glabel550,12014
set_glabel1( GtkWidget *label, const char *fmt, ... )set_glabel1566,12335
set_gcaption( GtkWidget *label, const char *fmt, ... )set_gcaption582,12665
get_geditable_name( GtkWidget *text, char *out, int sz )get_geditable_name599,13034
get_geditable_string( GtkWidget *text, char *out, int sz )get_geditable_string622,13559
get_geditable_filename( GtkWidget *text, char *out, int sz )get_geditable_filename634,13770
get_geditable_double( GtkWidget *text, double *out )get_geditable_double654,14180
get_geditable_int( GtkWidget *text, int *n )get_geditable_int687,14822
get_geditable_uint( GtkWidget *text, int *n )get_geditable_uint710,15225
get_geditable_pint( GtkWidget *text, int *n )get_geditable_pint726,15465
build_glabelframe2( GtkWidget *widget, const char *name )build_glabelframe2742,15716
build_glabeltext3( GtkWidget *box, const char *label )build_glabeltext3768,16465
build_glabeltext4( GtkWidget *box, GtkSizeGroup *group, const char *text )build_glabeltext4783,16802
build_gtoggle( GtkWidget *box, const char *caption )build_gtoggle811,17489
build_goption( GtkWidget *box, GtkSizeGroup *group, build_goption834,18114
	GtkWidget *widget;widget869,19120
	FiledropFunc fn;fn870,19140
	void *client;client871,19158
} FiledropInfo;FiledropInfo872,19173
filedrop_drag_data_received( GtkWidget *widget, filedrop_drag_data_received875,19202
	TARGET_URI_LIST,TARGET_URI_LIST924,20292
	TARGET_TEXT_PLAINTARGET_TEXT_PLAIN925,20310
filedrop_destroy( GtkWidget *widget, FiledropInfo *fdi )filedrop_destroy929,20345
filedrop_register( GtkWidget *widget, FiledropFunc fn, void *client )filedrop_register935,20429
set_symbol_drag_type( GtkWidget *widget )set_symbol_drag_type965,21343
typedef struct _Listen {_Listen996,22139
	GObject *gobject;		/* This object */gobject997,22164
	GObject *source;		/* Listens for signals from this */source998,22202
	GObject **zap;			/* NULL this on destroy */zap999,22257
	const char *name;		/* Signal name */name1000,22302
	GCallback gcallback;		/* Call this handler */gcallback1001,22340
	guint name_sid;name_sid1003,22388
	guint gobject_destroy_sid;gobject_destroy_sid1004,22405
	guint source_destroy_sid;source_destroy_sid1005,22433
} Listen;Listen1006,22460
listen_gobject_destroy_cb( GObject *gobject, Listen *listen )listen_gobject_destroy_cb1009,22483
listen_source_destroy_cb( GObject *gobject, Listen *listen )listen_source_destroy_cb1020,22755
listen_add( GObject *gobject, GObject **zap, listen_add1043,23253
widget_update_pointer( GtkWidget *widget, GdkEvent *ev )widget_update_pointer1064,23877
gobject_print( GObject *gobject )gobject_print1079,24248
get_dpi( void )get_dpi1089,24401
image_new_from_file( const char *name )image_new_from_file1104,24675
vfatal( GError **error )vfatal1124,25079
text_view_get_text( GtkTextView *text_view )text_view_get_text1137,25282
text_view_set_text( GtkTextView *text_view, text_view_set_text1153,25689
text_view_select_text( GtkTextView *text_view, int start, int end )text_view_select_text1164,25986
typedef struct _DestroyIfDestroyed {_DestroyIfDestroyed1180,26600
	GObject *child;child1181,26637
	GObject *parent;parent1182,26654
	DestroyFn destroy_fn;destroy_fn1183,26672
} DestroyIfDestroyed;DestroyIfDestroyed1184,26695
destroy_if_destroyed_parent_cb( DestroyIfDestroyed *difd, GObject *parent )destroy_if_destroyed_parent_cb1192,26911
destroy_if_destroyed_child_cb( DestroyIfDestroyed *difd, GObject *child )destroy_if_destroyed_child_cb1217,27494
destroy_if_destroyed( GObject *child, GObject *parent, DestroyFn destroy_fn )destroy_if_destroyed1233,27845

conversion.c,3757
	SIG_AREA_CHANGED,	/* Area of repaint image has changed */SIG_AREA_CHANGED39,979
	SIG_IMAGEINFO_CHANGED,	/* The imageinfo we hold has been replaced */SIG_IMAGEINFO_CHANGED40,1038
	SIG_LASTSIG_LAST41,1108
static guint conversion_signals[SIG_LAST] = { 0 };conversion_signals44,1122
static ModelClass *parent_class = NULL;parent_class46,1174
static GSList *conversion_all = NULL;conversion_all50,1246
conversion_imageinfo_changed( Conversion *conv )conversion_imageinfo_changed53,1299
conversion_area_changed( Conversion *conv, Rect *dirty )conversion_area_changed67,1580
conversion_dispose( GObject *gobject )conversion_dispose74,1741
conversion_finalize( GObject *gobject )conversion_finalize95,2178
conversion_make_visualise( Conversion *conv, IMAGE *in )conversion_make_visualise127,2958
typedef struct _ConversionUpdate {_ConversionUpdate214,5245
	Conversion *conv;conv215,5280
	IMAGE *im;		im217,5300
	Rect area;area218,5314
} ConversionUpdate;ConversionUpdate219,5326
conversion_render_idle_cb( gpointer data )conversion_render_idle_cb222,5363
conversion_render_notify_cb( IMAGE *im, Rect *area, void *client )conversion_render_notify_cb266,6529
conversion_get_default_tiles( Conversion *conv )conversion_get_default_tiles284,7034
conversion_make_display( Conversion *conv, IMAGE *in, IMAGE **mask_out )conversion_make_display296,7360
        double a, b;a376,8874
        double a, b;b376,8874
	IMAGE *in, *out;in377,8895
	IMAGE *in, *out;out377,8895
} LintraInfo;LintraInfo378,8913
#define LOOP(LOOP383,9017
#define LOOPCMPLX(LOOPCMPLX403,9332
lintrauc_gen( PEL *in, PEL *out, int width, IMAGE *im, LintraInfo *inf )lintrauc_gen424,9679
im_lintrauc( double a, IMAGE *in, double b, IMAGE *out )im_lintrauc465,10824
conversion_make_repaint( Conversion *conv, IMAGE *in )conversion_make_repaint502,11654
conversion_rebuild_repaint( Conversion *conv )conversion_rebuild_repaint794,17688
conversion_rebuild_display( Conversion *conv )conversion_rebuild_display847,18887
conversion_rebuild_visual( Conversion *conv )conversion_rebuild_visual910,20314
conversion_changed( iObject *iobject )conversion_changed967,21566
conversion_class_init( ConversionClass *class )conversion_class_init1001,22306
conversion_init( Conversion *conv )conversion_init1034,23242
conversion_get_type( void )conversion_get_type1078,24153
conversion_link( Conversion *conv, Imageinfo *ii )conversion_link1103,24699
conversion_new( Imageinfo *ii )conversion_new1110,24864
conversion_ii_changed_cb( Imageinfo *ii, Conversion *conv )conversion_ii_changed_cb1125,25211
conversion_ii_area_changed_cb( Imageinfo *imageinfo, conversion_ii_area_changed_cb1134,25409
conversion_set_image( Conversion *conv, Imageinfo *ii )conversion_set_image1146,25650
conversion_dmag( int mag )conversion_dmag1200,26854
conversion_double( int mag )conversion_double1214,27093
conversion_halve( int mag )conversion_halve1229,27295
conversion_disp_to_im( Conversion *conv, int dx, int dy, int *ix, int *iy )conversion_disp_to_im1244,27513
conversion_im_to_disp( Conversion *conv, int ix, int iy, int *dx, int *dy )conversion_im_to_disp1253,27698
conversion_disp_to_im_rect( Conversion *conv, Rect *dr, Rect *ir )conversion_disp_to_im_rect1264,27905
conversion_im_to_disp_rect( Conversion *conv, Rect *ir, Rect *dr )conversion_im_to_disp_rect1282,28287
conversion_set_mag( Conversion *conv, int mag )conversion_set_mag1300,28669
conversion_set_synchronous( Conversion *conv, gboolean synchronous )conversion_set_synchronous1366,30332
conversion_set_params( Conversion *conv, gboolean enabled,conversion_set_params1381,30677
conversion_header_dialog( Conversion *conv, conversion_header_dialog1407,31261

stringview.c,433
static EditviewClass *parent_class = NULL;parent_class36,938
stringview_scan( View *view )stringview_scan41,1039
stringview_refresh( vObject *vobject )stringview_refresh75,1819
stringview_class_init( StringviewClass *class )stringview_class_init101,2421
stringview_init( Stringview *stringview )stringview_init119,2773
stringview_get_type( void )stringview_get_type124,2828
stringview_new( void )stringview_new147,3260

managedgvalue.h,619
#define TYPE_MANAGEDGVALUE TYPE_MANAGEDGVALUE30,892
#define MANAGEDGVALUE(MANAGEDGVALUE31,946
#define MANAGEDGVALUE_CLASS(MANAGEDGVALUE_CLASS33,1051
#define IS_MANAGEDGVALUE(IS_MANAGEDGVALUE36,1171
#define IS_MANAGEDGVALUE_CLASS(IS_MANAGEDGVALUE_CLASS38,1264
#define MANAGEDGVALUE_GET_CLASS(MANAGEDGVALUE_GET_CLASS40,1364
struct _Managedgvalue {_Managedgvalue44,1488
	Managed parent_object;parent_object45,1512
	GValue value;value47,1537
typedef struct _ManagedgvalueClass {_ManagedgvalueClass50,1556
	ManagedClass parent_class;parent_class51,1593
} ManagedgvalueClass;ManagedgvalueClass53,1622

tslider.c,1799
	CHANGED,		CHANGED39,970
	ACTIVATE,	ACTIVATE40,982
	SLIDER_CHANGED,SLIDER_CHANGED41,994
	TEXT_CHANGED,	TEXT_CHANGED42,1011
	LAST_SIGNALLAST_SIGNAL43,1027
static GtkHBoxClass *parent_class = NULL;parent_class46,1044
static guint tslider_signals[LAST_SIGNAL] = { 0 };tslider_signals48,1087
#define DEQ(DEQ53,1285
tslider_destroy( GtkObject *object )tslider_destroy56,1344
tslider_value_to_slider( Tslider *tslider, double value )tslider_value_to_slider83,1874
tslider_slider_to_value( Tslider *tslider, double value )tslider_slider_to_value108,2461
tslider_real_changed( Tslider *tslider )tslider_real_changed133,3063
tslider_class_init( TsliderClass *class )tslider_class_init185,4524
tslider_changed( Tslider *tslider )tslider_changed236,5928
tslider_activate( Tslider *tslider )tslider_activate248,6130
tslider_slider_changed( Tslider *tslider )tslider_slider_changed260,6349
tslider_text_changed( Tslider *tslider )tslider_text_changed273,6587
tslider_value_activate_cb( GtkWidget *entry, Tslider *tslider )tslider_value_activate_cb285,6815
tslider_value_changed_cb( GtkAdjustment *adj, Tslider *tslider )tslider_value_changed_cb307,7203
tslider_text_changed_cb( GtkWidget *widget, Tslider *tslider )tslider_text_changed_cb330,7676
tslider_conversion_id( double from, double to, double value )tslider_conversion_id342,7899
tslider_init( Tslider *tslider )tslider_init348,7996
tslider_get_type( void )tslider_get_type401,9930
tslider_new()tslider_new424,10381
tslider_set_conversions( Tslider *tslider, tslider_set_conversions432,10476
tslider_log_value_to_slider( double from, double to, double value )tslider_log_value_to_slider442,10739
tslider_log_slider_to_value( double from, double to, double value )tslider_log_slider_to_value458,11110

prefs.c,690
static iDialogClass *parent_class = NULL;parent_class36,933
prefs_destroy( GtkObject *object )prefs_destroy39,988
prefs_build( GtkWidget *widget )prefs_build70,1685
prefs_class_init( PrefsClass *class )prefs_class_init120,3056
prefs_init( Prefs *prefs )prefs_init139,3407
prefs_get_type( void )prefs_get_type146,3489
prefs_workspace_destroy_cb( Workspace *ws, Prefs *prefs )prefs_workspace_destroy_cb171,4007
prefs_link( Prefs *prefs, Workspace *ws )prefs_link180,4162
prefs_column_compare( Column *a, Column *b )prefs_column_compare191,4415
prefs_new( const char *caption_filter )prefs_new197,4497
prefs_set( const char *name, const char *fmt, ... )prefs_set225,5271

value.h,515
#define TYPE_VALUE TYPE_VALUE30,916
#define VALUE(VALUE31,954
#define VALUE_CLASS(VALUE_CLASS33,1035
#define IS_VALUE(IS_VALUE35,1127
#define IS_VALUE_CLASS(IS_VALUE_CLASS37,1204
#define VALUE_GET_CLASS(VALUE_GET_CLASS39,1288
typedef struct _Value {_Value42,1384
	Classmodel model;model43,1408
	VipsBuf caption_buffer;caption_buffer47,1464
} Value;Value48,1489
typedef struct _ValueClass {_ValueClass50,1499
	ClassmodelClass parent_class;parent_class51,1528
} ValueClass;ValueClass55,1581

classmodel.h,3001
	CLASSMODEL_MEMBER_INT,CLASSMODEL_MEMBER_INT33,977
	CLASSMODEL_MEMBER_ENUM,		/* Like int, but extent has max value */CLASSMODEL_MEMBER_ENUM34,1001
	CLASSMODEL_MEMBER_BOOLEAN,CLASSMODEL_MEMBER_BOOLEAN35,1068
	CLASSMODEL_MEMBER_DOUBLE,CLASSMODEL_MEMBER_DOUBLE36,1096
	CLASSMODEL_MEMBER_STRING,CLASSMODEL_MEMBER_STRING37,1123
	CLASSMODEL_MEMBER_STRING_LIST,CLASSMODEL_MEMBER_STRING_LIST38,1150
	CLASSMODEL_MEMBER_REALVEC_FIXED,/* Eg. Colour's triplet */CLASSMODEL_MEMBER_REALVEC_FIXED39,1182
	CLASSMODEL_MEMBER_MATRIX,CLASSMODEL_MEMBER_MATRIX40,1242
	CLASSMODEL_MEMBER_OPTIONS,CLASSMODEL_MEMBER_OPTIONS41,1269
	CLASSMODEL_MEMBER_IMAGECLASSMODEL_MEMBER_IMAGE42,1297
} ClassmodelMemberType;ClassmodelMemberType43,1322
typedef struct _MatrixValue {_MatrixValue47,1370
	double *coeff;			/* Base coeffs */coeff48,1400
	int width;			/* Size of matrix */width49,1436
	int height;height50,1471
} MatrixValue;MatrixValue51,1484
	Imageinfo *ii;ii56,1540
	guint file_changed_sid;file_changed_sid61,1676
	Classmodel *classmodel;classmodel62,1701
} ImageValue;ImageValue63,1726
	ClassmodelMemberType type;type68,1794
	void *details;			/* eg. the set of allowed options */details69,1822
	int extent;			/* Vector length, enum max, etc. */extent70,1877
	const char *member_name;	/* Name as known in nip class defs */member_name72,1929
	const char *save_name;		/* As known in save files */save_name73,1993
	const char *user_name;		/* i18n'd name for dialogs */user_name74,2047
	guint offset;			/* Struct offset */offset76,2103
} ClassmodelMember;ClassmodelMember77,2140
#define TYPE_CLASSMODEL TYPE_CLASSMODEL79,2161
#define CLASSMODEL(CLASSMODEL80,2209
#define CLASSMODEL_CLASS(CLASSMODEL_CLASS82,2305
#define IS_CLASSMODEL(IS_CLASSMODEL84,2412
#define IS_CLASSMODEL_CLASS(IS_CLASSMODEL_CLASS86,2499
#define CLASSMODEL_GET_CLASS(CLASSMODEL_GET_CLASS88,2593
struct _Classmodel {_Classmodel91,2704
	Heapmodel parent_class;parent_class92,2725
	gboolean edited;edited96,2819
	GSList *iimages;	/* All the iimage we are defined on */iimages100,2875
	GSList *views;		/* All the regionview we have made */views101,2932
	char *filename;filename106,3127
typedef struct _ClassmodelClass {_ClassmodelClass109,3148
	HeapmodelClass parent_class;parent_class110,3182
	void *(*get_instance)( Classmodel * );get_instance115,3317
	gboolean (*class_get)( Classmodel *, PElement *root );class_get119,3432
	gboolean (*class_new)( Classmodel *, PElement *fn, PElement *out );class_new120,3488
	gboolean (*graphic_save)( Classmodel *, GtkWidget *, const char * );graphic_save124,3623
	gboolean (*graphic_replace)( Classmodel *, GtkWidget *, const char * );graphic_replace125,3693
	FileselFileType **filetype;filetype127,3767
	const char *filetype_pref;filetype_pref128,3796
	ClassmodelMember *members;members130,3825
	int n_members;n_members131,3853
	void (*reset)( Classmodel * );reset132,3869
} ClassmodelClass;ClassmodelClass133,3901

workspacegroup.c,1045
static ModelClass *parent_class = NULL;parent_class36,950
workspacegroup_dispose( GObject *gobject )workspacegroup_dispose39,1003
workspacegroup_child_add( iContainer *parent, iContainer *child, int pos )workspacegroup_child_add58,1353
workspacegroup_child_remove( iContainer *parent, iContainer *child )workspacegroup_child_remove69,1621
workspacegroup_class_init( WorkspacegroupClass *class )workspacegroup_class_init75,1773
workspacegroup_init( Workspacegroup *wsg )workspacegroup_init94,2238
workspacegroup_get_type( void )workspacegroup_get_type100,2310
workspacegroup_link( Workspacegroup *wsg, const char *name )workspacegroup_link125,2880
workspacegroup_new( const char *name )workspacegroup_new140,3224
workspacegroup_name_new( Workspacegroup *wsg, char *name )workspacegroup_name_new160,3681
workspacegroup_workspace_new_done_cb( iWindow *iwnd, void *client, workspacegroup_workspace_new_done_cb172,3924
workspacegroup_workspace_new( Workspacegroup *wsg, GtkWidget *parent )workspacegroup_workspace_new206,4751

tree.c,1773
tree_const_destroy( ParseConst *pc )tree_const_destroy35,963
tree_const_copy( ParseConst *from, ParseConst *to )tree_const_copy43,1101
tree_node_destroy( ParseNode *n )tree_node_destroy53,1298
tree_new( Compile *compile )tree_new92,1856
tree_binop_new( Compile *compile, BinOp op, ParseNode *l, ParseNode *r )tree_binop_new118,2335
tree_compose_new( Compile *compile, ParseNode *f, ParseNode *g )tree_compose_new133,2587
tree_generator_new( Compile *compile, ParseNode *s, ParseNode *n, ParseNode *f )tree_generator_new147,2810
tree_ifelse_new( Compile *compile, ParseNode *c, ParseNode *t, ParseNode *e )tree_ifelse_new162,3060
tree_class_new( Compile *compile )tree_class_new174,3396
tree_tag_new( Compile *compile, const char *r )tree_tag_new217,4444
tree_unop_new( Compile *compile, UnOp op, ParseNode *a )tree_unop_new230,4650
tree_leaf_new( Compile *compile, const char *name )tree_leaf_new242,4831
tree_leafsym_new( Compile *compile, Symbol *sym )tree_leafsym_new262,5369
tree_lconst_new( Compile *compile, ParseNode *a )tree_lconst_new288,5918
tree_lconst_extend( Compile *compile, ParseNode *base, ParseNode *new )tree_lconst_extend305,6179
tree_super_new( Compile *compile )tree_super_new317,6403
tree_super_extend( Compile *compile, ParseNode *base, ParseNode *new )tree_super_extend329,6557
tree_const_new( Compile *compile, ParseConst n )tree_const_new341,6788
tree_appl_new( Compile *compile, ParseNode *l, ParseNode *r )tree_appl_new354,6978
tree_pattern_class_new( Compile *compile, const char *class_name, ParseNode *l )tree_pattern_class_new366,7167
tree_map( Compile *compile, tree_map_fn fn, ParseNode *node, void *a, void *b ) tree_map378,7404
tree_copy( Compile *compile, ParseNode *node )tree_copy441,8743

real.h,405
#define TYPE_REAL TYPE_REAL30,896
#define REAL(REAL31,932
#define REAL_CLASS(REAL_CLASS32,995
#define IS_REAL(IS_REAL34,1082
#define IS_REAL_CLASS(IS_REAL_CLASS35,1142
typedef struct _Real {_Real38,1222
	Value parent_object;parent_object39,1245
} Real;Real43,1317
typedef struct _RealClass {_RealClass45,1326
	ValueClass parent_class;parent_class46,1354
} RealClass;RealClass50,1402

gtkutil.h,555
#define PARENT_CLASS_DYNAMIC(PARENT_CLASS_DYNAMIC32,961
#define TYPE_EXACT(TYPE_EXACT39,1140
#define DESTROY_GTK(DESTROY_GTK42,1222
typedef void (*PopupFunc)( GtkWidget *, GtkWidget *, void * );PopupFunc75,2237
#define POPUP_FUNC(POPUP_FUNC76,2300
typedef void (*TooltipGenerateFn)( GtkWidget *, VipsBuf *, void *a, void *b );TooltipGenerateFn91,2952
typedef gboolean (*FiledropFunc)( void *client, const char *file );FiledropFunc125,4537
	TARGET_SYMBOL = 99TARGET_SYMBOL132,4786
typedef void (*DestroyFn)( GObject * );DestroyFn155,5383

conversion.h,2303
#define TYPE_CONVERSION TYPE_CONVERSION30,912
#define CONVERSION(CONVERSION31,960
#define CONVERSION_CLASS(CONVERSION_CLASS33,1056
#define IS_CONVERSION(IS_CONVERSION35,1163
#define IS_CONVERSION_CLASS(IS_CONVERSION_CLASS37,1250
#define CONVERSION_GET_CLASS(CONVERSION_GET_CLASS39,1344
struct _Conversion {_Conversion42,1455
	Model parent_class;parent_class43,1476
	Imageinfo *ii;		/* Underlying image */ii47,1514
	guint changed_sid;	/* Watch ii with these two */changed_sid48,1554
	guint area_changed_sid;	area_changed_sid49,1604
	REGION *reg;		/* Region for input from underlying image */reg50,1630
	gboolean synchronous;	/* TRUE to disable BG stuff */synchronous51,1690
	int priority;		/* render priority */priority52,1744
	Imageinfo *visual_ii;	/* Visualisation image ... eg. histplot */visual_ii54,1783
	Imageinfo *display_ii;	/* Sized and cached */display_ii55,1849
	int display_mag;	/* What mag the display_ii is built for */display_mag56,1896
	IMAGE *mask;		/* Read display mask from here */mask57,1957
	Imageinfo *repaint_ii;	/* Colour converted for screen */repaint_ii58,2006
	REGION *ireg;		/* Region for input from repaint image */ireg59,2064
	REGION *mreg;		/* Region for input from repaint mask */mreg60,2122
	int tile_size;		/* Set smaller for thumbnails */tile_size61,2179
	Rect underlay;		/* Size of underlying image (at 0,0) */underlay65,2255
	Rect image;		/* Size of visualisation image (at 0,0) */image66,2312
	Rect canvas;		/* Size of image we display (always at 0,0) */canvas67,2369
	Rect visible;		/* hint ... visible region of display image */visible68,2431
	int mag;		/* -ve for shrink, +ve for expand */mag69,2494
	gboolean enabled;enabled74,2641
	gboolean changed;	/* Trigger a rebuild with these */changed75,2660
	double scale;		/* Contrast/brightness */scale76,2714
	double offset;offset77,2756
	gboolean falsecolour;	/* False colour display on */falsecolour78,2772
	gboolean type;		/* Interpret type field */type79,2825
typedef struct _ConversionClass {_ConversionClass82,2873
	ModelClass parent_class;parent_class83,2907
	void (*area_changed)( Conversion *, Rect * );area_changed91,3066
	void (*imageinfo_changed)( Conversion * );imageinfo_changed95,3169
} ConversionClass;ConversionClass96,3213

column.c,2084
static FilemodelClass *parent_class = NULL;parent_class36,945
static int column_left_offset = 0;column_left_offset40,1031
static int column_top_offset = 0;column_top_offset41,1066
static const int column_open_max_frames = 10;	/* Max frames we animate */column_open_max_frames43,1101
column_map( Column *col, row_map_fn fn, void *a, void *b )column_map48,1209
column_map_symbol_sub( Row *row, symbol_map_fn fn, void *a )column_map_symbol_sub56,1355
column_map_symbol( Column *col, symbol_map_fn fn, void *a )column_map_symbol64,1531
column_finalize( GObject *gobject )column_finalize71,1693
column_select_symbols( Column *col )column_select_symbols91,2069
column_get_subcolumn( Column *col )column_get_subcolumn97,2204
column_child_add( iContainer *parent, iContainer *child, int pos )column_child_add105,2382
column_child_remove( iContainer *parent, iContainer *child )column_child_remove117,2640
column_get_workspace( Column *col )column_get_workspace127,2881
column_parent_add( iContainer *child )column_parent_add133,2985
column_view_new( Model *model, View *parent )column_view_new147,3247
column_save( Model *model, xmlNode *xnode )column_save156,3423
column_save_test( Model *model )column_save_test190,4390
column_load( Model *model, column_load205,4710
column_class_init( ColumnClass *class )column_class_init241,5588
column_init( Column *col )column_init274,6458
column_get_type( void )column_get_type293,6746
column_new( Workspace *ws, const char *name )column_new318,7297
column_get_bottom( Column *col )column_get_bottom353,8025
column_add_n_names( Column *col, const char *name, VipsBuf *buf, int nparam )column_add_n_names374,8470
column_is_empty( Column *col )column_is_empty403,9151
column_set_offset( int x_off, int y_off )column_set_offset414,9336
column_name_new( Column *col )column_name_new425,9547
column_open_find( Row *row, Column *col )column_open_find438,9793
column_open_timeout_cb( Column *col )column_open_timeout_cb447,9933
column_set_open( Column *col, gboolean open )column_set_open481,10566

stringview.h,520
#define TYPE_STRINGVIEW TYPE_STRINGVIEW30,887
#define STRINGVIEW(STRINGVIEW31,935
#define STRINGVIEW_CLASS(STRINGVIEW_CLASS32,1016
#define IS_STRINGVIEW(IS_STRINGVIEW34,1121
#define IS_STRINGVIEW_CLASS(IS_STRINGVIEW_CLASS35,1193
typedef struct _Stringview {_Stringview38,1285
	Editview parent_object;parent_object39,1314
} Stringview;Stringview41,1340
typedef struct _StringviewClass {_StringviewClass43,1355
	EditviewClass parent_class;parent_class44,1389
} StringviewClass;StringviewClass48,1440

tslider.h,1535
#define TYPE_TSLIDER TYPE_TSLIDER30,905
#define TSLIDER(TSLIDER31,947
#define TSLIDER_CLASS(TSLIDER_CLASS32,1019
#define IS_TSLIDER(IS_TSLIDER34,1115
#define IS_TSLIDER_CLASS(IS_TSLIDER_CLASS35,1181
typedef double (*tslider_fn)( double from, double to, double value );tslider_fn38,1267
typedef struct _Tslider {_Tslider40,1338
	GtkHBox parent_class;parent_class41,1364
	double from;from45,1408
	double to;to46,1422
	double value;		/* Real value, as displayed in text */value48,1435
	double svalue;		/* Slider value ... secret linear scale */svalue49,1490
	int digits;		/* How many sf to display */digits50,1550
	double last_from, last_to, last_svalue;last_from55,1711
	double last_from, last_to, last_svalue;last_to55,1711
	double last_from, last_to, last_svalue;last_svalue55,1711
	GtkWidget *entry;entry57,1753
	GtkWidget *slider;slider58,1772
	GtkAdjustment *adj;adj59,1792
	gboolean auto_link;auto_link65,2000
	tslider_fn value_to_slider;value_to_slider66,2021
	tslider_fn slider_to_value;slider_to_value67,2050
} Tslider;Tslider68,2079
typedef struct _TsliderClass {_TsliderClass70,2091
	GtkHBoxClass parent_class;parent_class71,2122
	void (*changed)( Tslider * );		/* from/to/value change */changed73,2151
	void (*activate)( Tslider * );		/* enter in text */activate74,2210
	void (*slider_changed)( Tslider * );	/* slider drag */slider_changed75,2263
	void (*text_changed)( Tslider * );	/* text has been touched */text_changed76,2319
} TsliderClass;TsliderClass77,2383

class.c,3555
class_is_class( PElement *instance )class_is_class41,1085
class_get_compile( PElement *instance )class_get_compile60,1454
class_get_super( PElement *instance, PElement *out )class_get_super71,1664
class_map( PElement *instance, class_map_fn fn, void *a, void *b )class_map83,1910
class_get_member( PElement *instance, const char *name, class_get_member122,2791
class_get_symbol( PElement *instance, Symbol *sym, PElement *out )class_get_symbol201,4621
class_get_exact( PElement *instance, const char *name, PElement *out )class_get_exact269,6034
	Heap *heap;		/* Heap to build on */heap287,6378
	Symbol *sym;		/* Sym we are local to */sym288,6415
	PElement *arg;		/* Args to constructor */arg289,6456
	PElement *this;		/* Base of instance we are building */this290,6499
	int i;			/* Index in arg list */i291,6556
	Compile *compile;	/* Compile for our class */compile292,6590
} ClassBuildInfo;ClassBuildInfo293,6637
class_member_secret( ClassBuildInfo *pbi, class_member_secret298,6748
add_class_member( Symbol *sym, ClassBuildInfo *pbi, PElement *out )add_class_member368,8440
add_class_svpair( ClassBuildInfo *pbi, add_class_svpair420,9655
add_class_parameter( Symbol *sym, ClassBuildInfo *pbi, PElement *out )add_class_parameter463,10640
class_new_single_name( Heap *heap, PElement *pe,class_new_single_name480,10970
class_new_single( Heap *heap, class_new_single506,11612
class_guess_constructor( PElement *fn )class_guess_constructor622,14444
class_guess_args( PElement arg[], PElement *fn )class_guess_args645,14929
class_new_super_sub( Heap *heap, PElement *p1,class_new_super_sub674,15500
class_clone_super( Heap *heap, Compile *compile,class_clone_super693,16061
class_clone_super_sub( Heap *heap, PElement *p1,class_clone_super_sub732,16998
class_new_super( Heap *heap, class_new_super749,17434
class_new( Heap *heap, Compile *compile, HeapNode **arg, PElement *out )class_new873,20920
class_clone_args( Heap *heap, PElement *instance, PElement *out )class_clone_args919,22131
class_newv( Heap *heap, const char *name, PElement *out, ... )class_newv961,23194
class_typecheck_error( PElement *instance, const char *name, const char *type )class_typecheck_error1000,24220
typedef gboolean (*ClassGetFn)( PElement *, void * );ClassGetFn1025,24874
class_get_member_check( PElement *instance, const char *name, const char *type,class_get_member_check1028,24945
class_get_member_bool( PElement *instance, const char *name, gboolean *out )class_get_member_bool1045,25269
class_get_member_real( PElement *instance, const char *name, double *out )class_get_member_real1052,25456
class_get_member_int( PElement *instance, const char *name, int *out )class_get_member_int1059,25641
class_get_member_class( PElement *instance, const char *name, class_get_member_class1072,25888
class_get_member_image( PElement *instance, const char *name, Imageinfo **out )class_get_member_image1092,26305
class_get_member_lstring( PElement *instance, const char *name, class_get_member_lstring1099,26497
class_get_member_string( PElement *instance, const char *name, class_get_member_string1107,26708
class_get_member_instance( PElement *instance, class_get_member_instance1124,27041
class_get_member_matrix_size( PElement *instance, const char *name, class_get_member_matrix_size1135,27293
class_get_member_matrix( PElement *instance, const char *name, class_get_member_matrix1153,27664
class_get_member_realvec( PElement *instance, const char *name, class_get_member_realvec1171,28053

gtkitementry.c,6790
#define MIN_ENTRY_WIDTH MIN_ENTRY_WIDTH49,1593
#define DRAW_TIMEOUT DRAW_TIMEOUT50,1622
#define INNER_BORDER INNER_BORDER51,1650
#define MIN_SIZE MIN_SIZE54,1717
#define MAX_SIZE MAX_SIZE57,1782
  CURSOR_STANDARD,CURSOR_STANDARD60,1827
  CURSOR_DNDCURSOR_DND61,1846
} CursorType;CursorType62,1859
gtk_item_entry_class_init (GtkItemEntryClass *class)gtk_item_entry_class_init192,8332
gtk_item_entry_editable_init (GtkEditableClass *iface)gtk_item_entry_editable_init216,9214
gtk_item_entry_init (GtkItemEntry *entry)gtk_item_entry_init227,9617
gtk_item_entry_realize (GtkWidget *widget)gtk_item_entry_realize249,10531
get_borders (GtkEntry *entry,get_borders305,12654
gtk_item_entry_size_request (GtkWidget      *widget,gtk_item_entry_size_request338,13255
get_text_area_size (GtkEntry *entry,get_text_area_size373,14294
get_widget_window_size (GtkEntry *entry,get_widget_window_size401,14890
gtk_item_entry_size_allocate (GtkWidget     *widget,gtk_item_entry_size_allocate436,15726
gtk_item_entry_draw_frame (GtkWidget *widget)gtk_item_entry_draw_frame470,16810
gtk_item_entry_expose (GtkWidget      *widget,gtk_item_entry_expose475,16873
gtk_item_entry_grab_focus (GtkWidget        *widget)gtk_item_entry_grab_focus508,17870
gtk_item_entry_direction_changed (GtkWidget        *widget,gtk_item_entry_direction_changed525,18368
gtk_item_entry_state_changed (GtkWidget      *widget,gtk_item_entry_state_changed536,18661
gtk_item_entry_insert_text (GtkEditable *editable,gtk_item_entry_insert_text559,19324
gtk_item_entry_delete_text (GtkEditable *editable,gtk_item_entry_delete_text590,20058
gtk_item_entry_style_set	(GtkWidget      *widget,gtk_item_entry_style_set611,20565
gtk_item_entry_real_set_position (GtkEditable *editable,gtk_item_entry_real_set_position626,21011
gtk_item_entry_get_position (GtkEditable *editable)gtk_item_entry_get_position643,21474
gtk_item_entry_real_insert_text (GtkEditable * editable,gtk_item_entry_real_insert_text652,21619
gtk_item_entry_real_delete_text (GtkEditable * editable,gtk_item_entry_real_delete_text674,22176
get_better_cursor_x (GtkEntry *entry,get_better_cursor_x705,23064
gtk_item_entry_move_cursor (GtkEntry       *entry,gtk_item_entry_move_cursor732,23992
gtk_item_entry_insert_at_cursor (GtkEntry    *entry,gtk_item_entry_insert_at_cursor823,26752
gtk_item_entry_delete_from_cursor (GtkEntry       *entry,gtk_item_entry_delete_from_cursor839,27119
gtk_item_entry_commit_cb (GtkIMContext *context,gtk_item_entry_commit_cb915,29253
gtk_item_entry_preedit_changed_cb (GtkIMContext *context,gtk_item_entry_preedit_changed_cb923,29443
gtk_item_entry_retrieve_surrounding_cb (GtkIMContext *context,gtk_item_entry_retrieve_surrounding_cb941,30012
gtk_item_entry_delete_surrounding_cb (GtkIMContext *slave,gtk_item_entry_delete_surrounding_cb956,30519
gtk_item_entry_enter_text (GtkEntry       *entry,gtk_item_entry_enter_text974,31035
gtk_item_entry_set_positions (GtkEntry *entry,gtk_item_entry_set_positions997,31698
gtk_item_entry_reset_layout (GtkEntry *entry)gtk_item_entry_reset_layout1030,32464
update_im_cursor_location (GtkEntry *entry)update_im_cursor_location1040,32658
recompute_idle_func (gpointer data)recompute_idle_func1069,33355
gtk_item_entry_recompute (GtkEntry *entry)gtk_item_entry_recompute1090,33675
append_char (GString *str,append_char1104,34017
gtk_item_entry_create_layout (GtkEntry *entry,gtk_item_entry_create_layout1123,34321
gtk_item_entry_ensure_layout (GtkEntry *entry,gtk_item_entry_ensure_layout1226,37461
get_layout_position (GtkEntry *entry,get_layout_position1243,37926
gtk_item_entry_draw_text (GtkEntry *entry)gtk_item_entry_draw_text1287,39044
typedef struct _CursorInfo CursorInfo;CursorInfo1375,41491
struct _CursorInfo_CursorInfo1377,41531
  GType for_type;for_type1379,41552
  GdkGC *primary_gc;primary_gc1380,41570
  GdkGC *secondary_gc;secondary_gc1381,41591
make_cursor_gc (GtkWidget *widget,make_cursor_gc1385,41633
_gtkextra_get_insertion_cursor_gc (GtkWidget *widget,_gtkextra_get_insertion_cursor_gc1410,42295
_gtkextra_draw_insertion_cursor (GtkWidget *widget,_gtkextra_draw_insertion_cursor1472,44076
gtk_item_entry_draw_cursor (GtkEntry  *entry,gtk_item_entry_draw_cursor1536,46014
gtk_item_entry_queue_draw (GtkEntry *entry)gtk_item_entry_queue_draw1611,48224
gtk_item_entry_reset_im_context (GtkEntry *entry)gtk_item_entry_reset_im_context1618,48384
gtk_item_entry_get_cursor_locations (GtkEntry   *entry,gtk_item_entry_get_cursor_locations1628,48571
gtk_item_entry_adjust_scroll (GtkEntry *entry)gtk_item_entry_adjust_scroll1660,49459
gtk_item_entry_move_visually (GtkEntry *entry,gtk_item_entry_move_visually1785,53476
gtk_item_entry_move_logically (GtkEntry *entry,gtk_item_entry_move_logically1842,54847
gtk_item_entry_move_forward_word (GtkEntry *entry,gtk_item_entry_move_forward_word1885,55729
gtk_item_entry_move_backward_word (GtkEntry *entry,gtk_item_entry_move_backward_word1916,56403
gtk_item_entry_delete_whitespace (GtkEntry *entry)gtk_item_entry_delete_whitespace1947,57051
gtk_item_entry_get_public_chars (GtkEntry *entry,gtk_item_entry_get_public_chars1976,57721
primary_get_cb (GtkClipboard     *clipboard,primary_get_cb2002,58201
primary_clear_cb (GtkClipboard *clipboard,primary_clear_cb2019,58654
gtk_item_entry_update_primary_selection (GtkEntry *entry)gtk_item_entry_update_primary_selection2028,58870
gtk_item_entry_new (void)gtk_item_entry_new2057,59608
gtk_item_entry_new_with_max_length (gint max)gtk_item_entry_new_with_max_length2077,60289
gtk_item_entry_set_text (GtkItemEntry    *entry,gtk_item_entry_set_text2096,60787
gtk_item_entry_get_layout_offsets (GtkItemEntry *entry,gtk_item_entry_get_layout_offsets2157,62877
gtk_item_entry_set_justification(GtkItemEntry *entry, GtkJustification just)gtk_item_entry_set_justification2186,63664
#define CURSOR_ON_MULTIPLIER CURSOR_ON_MULTIPLIER2200,63926
#define CURSOR_OFF_MULTIPLIER CURSOR_OFF_MULTIPLIER2201,63960
#define CURSOR_PEND_MULTIPLIER CURSOR_PEND_MULTIPLIER2202,63995
cursor_blinks (GtkEntry *entry)cursor_blinks2205,64047
get_cursor_time (GtkEntry *entry)get_cursor_time2221,64410
show_cursor (GtkEntry *entry)show_cursor2232,64639
hide_cursor (GtkEntry *entry)hide_cursor2244,64898
blink_cb (gpointer data)blink_cb2259,65174
gtk_item_entry_check_cursor_blink (GtkEntry *entry)gtk_item_entry_check_cursor_blink2292,65845
gtk_item_entry_pend_cursor_blink (GtkEntry *entry)gtk_item_entry_pend_cursor_blink2318,66324
gtk_item_entry_set_cursor_visible(GtkItemEntry *entry, gboolean visible)gtk_item_entry_set_cursor_visible2340,66841
gtk_item_entry_get_cursor_visible(GtkItemEntry *entry)gtk_item_entry_get_cursor_visible2355,67191

lex.l,0

prefs.h,584
#define TYPE_PREFS TYPE_PREFS30,915
#define PREFS(PREFS31,953
#define PREFS_CLASS(PREFS_CLASS32,1019
#define IS_PREFS(IS_PREFS34,1109
#define IS_PREFS_CLASS(IS_PREFS_CLASS35,1171
typedef struct _Prefs {_Prefs38,1253
	iDialog parent_object;parent_object39,1277
	Workspace *ws;ws43,1333
	guint destroy_sid;destroy_sid44,1349
	Prefworkspaceview *pwview;pwview46,1370
	char *caption_filter;caption_filter50,1445
} Prefs;Prefs51,1468
typedef struct _PrefsClass {_PrefsClass53,1478
	iWindowClass parent_class;parent_class54,1507
} PrefsClass;PrefsClass58,1557

iregiongroupview.c,1106
static ViewClass *parent_class = NULL;parent_class36,965
iregiongroupview_destroy( GtkObject *object )iregiongroupview_destroy39,1017
	GSList *notused;notused67,1698
	iRegiongroupview *iregiongroupview;iregiongroupview68,1716
	Classmodel *classmodel;classmodel69,1753
	iImage *iimage;iimage70,1778
	Imagepresent *ip;ip71,1795
} iRegiongroupviewRefreshState;iRegiongroupviewRefreshState72,1814
iregiongroupview_refresh_imageview_test( Regionview *regionview,iregiongroupview_refresh_imageview_test75,1867
iregiongroupview_refresh_imageview( Imagepresent *ip, iregiongroupview_refresh_imageview86,2111
iregiongroupview_refresh_iimage( iImage *iimage, iregiongroupview_refresh_iimage127,3063
iregiongroupview_refresh( vObject *vobject )iregiongroupview_refresh138,3294
iregiongroupview_class_init( iRegiongroupviewClass *class )iregiongroupview_class_init169,4223
iregiongroupview_init( iRegiongroupview *iregiongroupview )iregiongroupview_init187,4619
iregiongroupview_get_type( void )iregiongroupview_get_type195,4760
iregiongroupview_new( void )iregiongroupview_new218,5292

subcolumn.c,2645
static HeapmodelClass *parent_class = NULL;parent_class36,927
subcolumn_row_pred_none( Row *row )subcolumn_row_pred_none39,988
subcolumn_row_pred_members( Row *row )subcolumn_row_pred_members47,1091
subcolumn_row_pred_params( Row *row )subcolumn_row_pred_params62,1320
subcolumn_row_pred_super( Row *row )subcolumn_row_pred_super70,1461
const SubcolumnVisibility subcolumn_visibility[] = {subcolumn_visibility82,1770
const int subcolumn_nvisibility = IM_NUMBER( subcolumn_visibility );subcolumn_nvisibility88,1989
subcolumn_map( Subcolumn *scol, row_map_fn fn, void *a, void *b )subcolumn_map93,2095
subcolumn_dispose( GObject *gobject )subcolumn_dispose100,2260
	Subcolumn *scol;		/* Enclosing column */scol130,2867
	GSList *notused;		/* List of row we've not used */notused131,2909
} ClassRefreshInfo;ClassRefreshInfo132,2961
subcolumn_test_sym( Row *row, Symbol *sym )subcolumn_test_sym137,3034
subcolumn_test_row_name( Row *row, Symbol *sym )subcolumn_test_row_name148,3206
subcolumn_class_new_heap_sub( ClassRefreshInfo *cri,subcolumn_class_new_heap_sub160,3428
subcolumn_class_dump_tiny_row( Row *row )subcolumn_class_dump_tiny_row204,4598
subcolumn_class_new_heap( Subcolumn *scol, PElement *root )subcolumn_class_new_heap216,4780
subcolumn_new_heap( Heapmodel *heapmodel, PElement *root )subcolumn_new_heap359,8323
subcolumn_child_add( iContainer *parent, iContainer *child, int pos )subcolumn_child_add378,8811
subcolumn_child_remove( iContainer *parent, iContainer *child )subcolumn_child_remove401,9414
subcolumn_get_column( Subcolumn *scol )subcolumn_get_column417,9794
subcolumn_get_subcolumn( Subcolumn *scol )subcolumn_get_subcolumn427,10002
subcolumn_get_top_column( Subcolumn *scol )subcolumn_get_top_column445,10289
subcolumn_get_top_subcolumn( Subcolumn *scol )subcolumn_get_top_subcolumn458,10635
subcolumn_parent_add( iContainer *child )subcolumn_parent_add473,10912
subcolumn_view_new( Model *model, View *parent )subcolumn_view_new511,11822
subcolumn_load( Model *model, subcolumn_load517,11924
subcolumn_save( Model *model, xmlNode *xnode )subcolumn_save534,12314
subcolumn_class_init( SubcolumnClass *class )subcolumn_class_init550,12620
subcolumn_init( Subcolumn *scol )subcolumn_init582,13467
subcolumn_get_type( void )subcolumn_get_type604,13888
subcolumn_link( Subcolumn *scol, Rhs *rhs, Column *col )subcolumn_link629,14472
subcolumn_new( Rhs *rhs, Column *col )subcolumn_new644,14795
subcolumn_set_vislevel( Subcolumn *scol, int vislevel )subcolumn_set_vislevel655,14975
subcolumn_make_private( Subcolumn *scol )subcolumn_make_private669,15319

prefcolumnview.c,502
static ViewClass *parent_class = NULL;parent_class36,933
prefcolumnview_refresh( vObject *vobject )prefcolumnview_refresh39,986
prefcolumnview_child_add( View *parent, View *child )prefcolumnview_child_add58,1483
prefcolumnview_class_init( PrefcolumnviewClass *class )prefcolumnview_class_init70,1794
prefcolumnview_init( Prefcolumnview *pcview )prefcolumnview_init88,2172
prefcolumnview_get_type( void )prefcolumnview_get_type99,2523
prefcolumnview_new( void )prefcolumnview_new122,2975

workspacegroup.h,670
#define TYPE_WORKSPACEGROUP TYPE_WORKSPACEGROUP30,908
#define WORKSPACEGROUP(WORKSPACEGROUP31,964
#define WORKSPACEGROUP_CLASS(WORKSPACEGROUP_CLASS34,1076
#define IS_WORKSPACEGROUP(IS_WORKSPACEGROUP37,1199
#define IS_WORKSPACEGROUP_CLASS(IS_WORKSPACEGROUP_CLASS39,1294
#define WORKSPACEGROUP_GET_CLASS(WORKSPACEGROUP_GET_CLASS41,1396
struct _Workspacegroup {_Workspacegroup47,1548
	Model parent_object;parent_object48,1573
	Symbol *sym;			/* Workspace in this group in this */sym50,1596
typedef struct _WorkspacegroupClass {_WorkspacegroupClass53,1654
	ModelClass parent_class;parent_class54,1692
} WorkspacegroupClass;WorkspacegroupClass58,1737

tree.h,4186
	NODE_NONE,		/* Empty */NODE_NONE33,980
	NODE_APPLY,		/* A function application */NODE_APPLY34,1005
	NODE_BINOP,		/* A binary operator */NODE_BINOP35,1048
	NODE_UOP,		/* A unary operator */NODE_UOP36,1086
	NODE_LEAF,		/* A leaf .. a symbol of some sort */NODE_LEAF37,1121
	NODE_CLASS,		/* A class */NODE_CLASS38,1172
	NODE_TAG,		/* A tag .. rhs of '.' */NODE_TAG39,1200
	NODE_CONST,		/* A constant */NODE_CONST40,1238
	NODE_GENERATOR,		/* A list generator */NODE_GENERATOR41,1269
	NODE_COMPOSE,		/* Function composition */NODE_COMPOSE42,1310
	NODE_SUPER,		/* Superclass constructor */NODE_SUPER43,1353
	NODE_PATTERN_CLASS,	/* A class pattern match */NODE_PATTERN_CLASS44,1396
	NODE_LISTCONST		/* A list expression "[1, 2, 3]" */NODE_LISTCONST45,1445
} NodeTypes;NodeTypes46,1498
	BI_NONE = 0,		/* Nothing */BI_NONE55,1628
	BI_ADD,			/* Addition and subtraction */BI_ADD56,1657
	BI_SUB,BI_SUB57,1699
	BI_REM,			/* Remainder after division */BI_REM58,1708
	BI_POW,			/* Raise to power */BI_POW59,1750
	BI_SELECT,		/* Select a channel/subscript */BI_SELECT60,1782
	BI_LSHIFT,		/* Shift left */BI_LSHIFT61,1828
	BI_RSHIFT,		/* Shift right */BI_RSHIFT62,1858
	BI_DIV,			/* Divide by a constant */BI_DIV63,1889
	BI_JOIN,		/* Join of two objects */BI_JOIN64,1927
	BI_DOT,			/* Projection operator */BI_DOT65,1964
	BI_COMMA,		/* Form complex number */BI_COMMA66,2001
	BI_MUL,			/* Mult by a constant */BI_MUL67,2039
	BI_LAND,		/* Logical and */BI_LAND68,2075
	BI_LOR,			/* Logical or */BI_LOR69,2104
	BI_BAND,		/* Bitwise and */BI_BAND70,2132
	BI_BOR,			/* Bitwise or */BI_BOR71,2161
	BI_EOR,			/* Either - or */BI_EOR72,2189
	BI_EQ,			/* Equality */BI_EQ73,2218
	BI_NOTEQ,BI_NOTEQ74,2243
	BI_PEQ,			/* Pointer equality */BI_PEQ75,2254
	BI_PNOTEQ,BI_PNOTEQ76,2288
	BI_LESS,		/* Relational ops */BI_LESS77,2300
	BI_LESSEQ,BI_LESSEQ78,2332
	BI_MORE,		BI_MORE79,2344
	BI_MOREEQ,BI_MOREEQ80,2356
	BI_IF,			/* if-then-else */BI_IF81,2368
	BI_CONS			/* List cons ... has to be last, see below */BI_CONS82,2397
} BinOp;BinOp83,2454
	UN_NONE = BI_CONS + 1,	/* Nothing */UN_NONE92,2579
	UN_CSCHAR,		/* Convert to signed char */UN_CSCHAR93,2617
	UN_CUCHAR,		/* Convert to unsigned char */UN_CUCHAR94,2659
	UN_CSSHORT,		/* Convert to signed short */UN_CSSHORT95,2703
	UN_CUSHORT,		/* Convert to unsigned short */UN_CUSHORT96,2747
	UN_CSINT,		/* Convert to signed int */UN_CSINT97,2793
	UN_CUINT,		/* Convert to unsigned int */UN_CUINT98,2833
	UN_CFLOAT,		/* Convert to signed float */UN_CFLOAT99,2875
	UN_CDOUBLE,		/* Convert to signed double */UN_CDOUBLE100,2918
	UN_CCOMPLEX,		/* Convert to complex */UN_CCOMPLEX101,2963
	UN_CDCOMPLEX,		/* Convert to double complex */UN_CDCOMPLEX102,3003
	UN_MINUS,		/* Unary minus */UN_MINUS103,3051
	UN_NEG,			/* Logical negation, "!" */UN_NEG104,3081
	UN_COMPLEMENT,		/* 1s complement, "~" */UN_COMPLEMENT105,3120
	UN_PLUS,		/* Unary plus */UN_PLUS106,3162
	UN_LAST			/* Sanity check with this */UN_LAST107,3190
} UnOp;UnOp108,3230
	PARSE_CONST_NONE,PARSE_CONST_NONE113,3313
	PARSE_CONST_STR,PARSE_CONST_STR114,3332
	PARSE_CONST_BOOL,PARSE_CONST_BOOL115,3350
	PARSE_CONST_NUM,PARSE_CONST_NUM116,3369
	PARSE_CONST_COMPLEX,		/* Eg. 12j == (0, 12) */PARSE_CONST_COMPLEX117,3387
	PARSE_CONST_CHAR,PARSE_CONST_CHAR118,3435
	PARSE_CONST_ELIST		/* Empty list [] */PARSE_CONST_ELIST119,3454
} ParseConstTypes;ParseConstTypes120,3494
struct _ParseConst {_ParseConst124,3548
	ParseConstTypes type;type125,3569
		double num;num127,3601
		char *str;str128,3615
		gboolean bool;bool129,3628
		int ch;ch130,3645
	} val;val131,3655
struct _ParseNode {_ParseNode136,3693
	Compile *compile;compile139,3740
	NodeTypes type;type141,3760
	BinOp biop;biop145,3835
	UnOp uop;uop146,3848
	ParseNode *arg1;arg1147,3859
	ParseNode *arg2;arg2148,3877
	ParseNode *arg3;arg3152,3942
	Symbol *leaf;leaf156,3990
	Compile *klass;klass160,4024
	GSList *elist;elist164,4118
	char *tag;tag168,4151
	ParseConst con;con172,4185
typedef ParseNode *(*tree_map_fn)( Compile *, ParseNode *, void *, void * );tree_map_fn201,5494

clock.c,710
static ValueClass *parent_class = NULL;parent_class36,958
clock_dispose( GObject *gobject )clock_dispose39,1011
clock_done_cb( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys )clock_done_cb54,1317
clock_edit( GtkWidget *parent, Model *model )clock_edit84,2077
clock_timeout_cb( Clock *clock )clock_timeout_cb113,3037
clock_update_model( Heapmodel *heapmodel )clock_update_model137,3563
clock_generate_caption( iObject *iobject )clock_generate_caption171,4501
static ClassmodelMember clock_members[] = {clock_members188,4987
clock_class_init( ClockClass *class )clock_class_init198,5288
clock_init( Clock *clock )clock_init230,6095
clock_get_type( void )clock_get_type252,6553

column.h,1109
#define TYPE_COLUMN TYPE_COLUMN30,898
#define COLUMN(COLUMN31,938
#define COLUMN_CLASS(COLUMN_CLASS33,1022
#define IS_COLUMN(IS_COLUMN35,1117
#define IS_COLUMN_CLASS(IS_COLUMN_CLASS37,1196
#define COLUMN_GET_CLASS(COLUMN_GET_CLASS39,1282
struct _Column {_Column42,1381
	Filemodel parent_object;parent_object43,1398
	Subcolumn *scol;	/* Subcolumn we enclose */scol47,1447
	Workspace *ws;		/* Enclosing workspace */ws48,1492
        int x, y;		/* Position */x52,1582
        int x, y;		/* Position */y52,1582
        gboolean open;		/* Currently popped down */open53,1616
        gboolean open_timeout;	/* Open animate timeout */open_timeout54,1668
        gboolean open_frames;	/* Frames we've animated */open_frames55,1726
        gboolean selected;	/* Currently selected */selected56,1784
        int next;		/* Index of next symbol we make */next60,1859
        Row *last_select;	/* Last row clicked ... for x sel */last_select61,1913
typedef struct _ColumnClass {_ColumnClass64,1980
	FilemodelClass parent_class;parent_class65,2010
} ColumnClass;ColumnClass69,2062

util.c,10491
#define DEBUG_SAVEFILEDEBUG_SAVEFILE44,1111
static char error_top_text[MAX_STRSIZE];error_top_text52,1356
static char error_sub_text[MAX_STRSIZE];error_sub_text53,1397
VipsBuf error_top_buf = VIPS_BUF_STATIC( error_top_text );error_top_buf55,1439
VipsBuf error_sub_buf = VIPS_BUF_STATIC( error_sub_text );error_sub_buf56,1498
error( const char *fmt, ... )error62,1653
static int error_level = 0;error_level87,2117
error_block( void )error_block90,2151
error_unblock( void )error_unblock96,2197
error_set( VipsBuf *buf, const char *fmt, va_list ap )error_set106,2307
error_clear_nip( void )error_clear_nip127,2787
error_clear( void )error_clear140,2996
error_top( const char *fmt, ... )error_top149,3092
error_sub( const char *fmt, ... )error_sub165,3431
error_vips( void )error_vips177,3610
error_vips_all( void )error_vips_all189,3891
const char *error_get_top( void ) { return( vips_buf_all( &error_top_buf ) ); }error_get_top195,3976
const char *error_get_sub( void ) { return( vips_buf_all( &error_sub_buf ) ); }error_get_sub196,4056
set_prop( xmlNode *xnode, const char *name, const char *fmt, ... )set_prop201,4189
set_sprop( xmlNode *xnode, const char *name, const char *value )set_sprop224,4724
set_slprop( xmlNode *xnode, const char *name, GSList *labels )set_slprop236,5015
set_dprop( xmlNode *xnode, const char *name, double value )set_dprop261,5584
set_dlprop( xmlNode *xnode, const char *name, double *values, int n )set_dlprop274,5908
get_sprop( xmlNode *xnode, const char *name, char *buf, int sz )get_sprop293,6287
get_spropb( xmlNode *xnode, const char *name, VipsBuf *buf )get_spropb307,6543
get_iprop( xmlNode *xnode, const char *name, int *out )get_iprop321,6797
get_dprop( xmlNode *xnode, const char *name, double *out )get_dprop334,6987
get_bprop( xmlNode *xnode, const char *name, gboolean *out )get_bprop347,7196
get_slprop( xmlNode *xnode, const char *name, GSList **out )get_slprop363,7534
get_dlprop( xmlNode *xnode, const char *name, double **out )get_dlprop388,8089
get_node( xmlNode *base, const char *name )get_node412,8567
prettify_tree_sub( xmlNode *xnode, int indent )prettify_tree_sub424,8765
prettify_tree( xmlDoc *xdoc )prettify_tree462,9580
static int rect_n_rects = 0;rect_n_rects471,9744
rect_dup( Rect *init )rect_dup476,9813
rect_free( Rect *rect )rect_free491,9988
slist_equal( GSList *l1, GSList *l2 )slist_equal502,10117
slist_map( GSList *list, SListMapFn fn, gpointer a )slist_map521,10356
slist_map2( GSList *list, SListMap2Fn fn, gpointer a, gpointer b )slist_map2537,10623
slist_map3( GSList *list, SListMap3Fn fn, gpointer a, gpointer b, gpointer c )slist_map3553,10907
slist_map4( GSList *list, SListMap4Fn fn, slist_map4569,11206
slist_map5( GSList *list, SListMap5Fn fn, slist_map5587,11525
slist_map_rev( GSList *list, SListMapFn fn, gpointer a )slist_map_rev607,11881
slist_map2_rev( GSList *list, SListMap2Fn fn, gpointer a, gpointer b )slist_map2_rev624,12185
slist_map3_rev( GSList *list, SListMap3Fn fn, void *a, void *b, void *c )slist_map3_rev641,12506
map_equal( void *a, void *b )map_equal658,12833
slist_fold( GSList *list, void *start, SListFoldFn fn, void *a )slist_fold667,12922
slist_fold2( GSList *list, void *start, SListFold2Fn fn, void *a, void *b )slist_fold2683,13238
slist_free_all_cb( gpointer thing, gpointer dummy )slist_free_all_cb699,13573
slist_free_all( GSList *list )slist_free_all707,13709
slist_remove_all( GSList *list, gpointer data )slist_remove_all716,13881
queue_new( void )queue_new747,14283
queue_head( Queue *q )queue_head759,14412
queue_add( Queue *q, void *data )queue_add780,14650
queue_remove( Queue *q, void *data )queue_remove801,15033
queue_length( Queue *q )queue_length819,15302
vips_buf_appendi( VipsBuf *buf, IMAGE *im )vips_buf_appendi827,15402
vips_buf_appendsc( VipsBuf *buf, gboolean quote, const char *str )vips_buf_appendsc853,16046
is_postfix( const char *a, const char *b )is_postfix872,16443
is_casepostfix( const char *a, const char *b )is_casepostfix886,16673
is_prefix( const char *a, const char *b )is_prefix900,16896
is_caseprefix( const char *a, const char *b )is_caseprefix918,17187
my_strcasestr( const char *haystack, const char *needle )my_strcasestr936,17482
my_strccpy( char *output, const char *input )my_strccpy956,17915
my_strecpy( char *output, const char *input, gboolean quote )my_strecpy1010,18639
instr( char c, const char *spn )instr1069,19348
my_strrspn( const char *p, const char *spn )my_strrspn1084,19641
my_strrcspn( const char *p, const char *spn )my_strrcspn1099,19923
findrightmost( const char *a, const char *b )findrightmost1113,20163
change_suffix( const char *name, char *out, change_suffix1133,20545
trim_nonalpha( char *text )trim_nonalpha1170,21224
trim_white( char *text )trim_white1195,21646
get_element( REGION *ireg, int x, int y, int b )get_element1219,22044
static const char *bandfmt_names[] = {bandfmt_names1256,22717
static const int nbandfmt_names = IM_NUMBER( bandfmt_names );nbandfmt_names1268,23292
decode_bandfmt( int f )decode_bandfmt1271,23368
static const char *type_names[] = {type_names1281,23571
static const int ntype_names = IM_NUMBER( type_names );ntype_names1310,24503
decode_type( int t )decode_type1313,24573
get_image_info( VipsBuf *buf, const char *name )get_image_info1324,24745
isvariable( int ch )isvariable1365,25755
expand_once( char *in, char *out )expand_once1374,25963
expand_variables( const char *in, char *out )expand_variables1447,27340
swap_chars( char *buf, char from, char to )swap_chars1472,27774
nativeize_path( char *buf )nativeize_path1485,28055
swap_string( char *buffer, const char *from, const char *to )swap_string1507,28563
canonicalize_path( char *path )canonicalize_path1525,28959
absoluteize_path( char *path )absoluteize_path1574,29909
get_vipshome( const char *argv0 )get_vipshome1592,30260
callv_string( callv_string_fn fn, const char *arg, void *a, void *b, void *c )callv_string1619,30859
callv_stringva( callv_string_fn fn, callv_stringva1629,31039
callv_stringf( callv_string_fn fn, const char *fmt, ... )callv_stringf1640,31277
callv_string_filename( callv_string_fn fn, callv_string_filename1655,31583
callv_string_filenameva( callv_string_fn fn, callv_string_filenameva1668,31841
callv_string_filenamef( callv_string_fn fn, const char *fmt, ... )callv_string_filenamef1679,32097
calli_string( calli_string_fn fn, const char *arg, void *a, void *b, void *c )calli_string1695,32444
calli_stringva( calli_string_fn fn, calli_stringva1705,32621
calli_stringf( calli_string_fn fn, const char *fmt, ... )calli_stringf1716,32856
calli_string_filename( calli_string_fn fn, calli_string_filename1731,33157
calli_string_filenameva( calli_string_fn fn, calli_string_filenameva1744,33412
calli_string_filenamef( calli_string_fn fn, const char *fmt, ... )calli_string_filenamef1755,33665
f2utf8( const char *filename )f2utf81770,33965
setenvf( const char *name, const char *fmt, ... )setenvf1781,34165
check( const char *filename )check1794,34404
existsf( const char *name, ... )existsf1804,34559
isdir_sub( const char *filename )isdir_sub1818,34796
isdir( const char *filename, ... )isdir1833,35017
mkdirf( const char *name, ... )mkdirf1847,35273
systemf( const char *fmt, ... )systemf1864,35593
touchf( const char *fmt, ... )touchf1878,35819
unlinkf( const char *fmt, ... )unlinkf1895,36112
is_absolute( const char *fname )is_absolute1911,36417
is_valid_filename( const char *name )is_valid_filename1927,36693
char *im_strdupn( const char *txt ) { return( im_strdup( NULL, txt ) ); }im_strdupn1948,37157
ifile_close( iOpenFile *of )ifile_close1953,37263
ifile_build( const char *fname )ifile_build1964,37439
ifile_open_read( const char *name, ... )ifile_open_read1988,37786
ifile_open_read_stdin()ifile_open_read_stdin2026,38696
ifile_open_write( const char *name, ... )ifile_open_write2046,39001
ifile_write( iOpenFile *of, const char *fmt, ... )ifile_write2081,39779
ifile_write_var( iOpenFile *of, const char *name, const char *value )ifile_write_var2102,40228
ifile_read( iOpenFile *of )ifile_read2113,40435
ifile_read_buffer( iOpenFile *of, char *buffer, size_t max )ifile_read_buffer2151,41262
ifile_getc( iOpenFile *of )ifile_getc2175,41794
statf( const char *fmt, ... )statf2190,41978
directory_size_sub( const char *filename, double *total )directory_size_sub2208,42310
directory_size( const char *dirname )directory_size2219,42528
escape_percent( const char *in, char *out, int len )escape_percent2233,42742
escape_markup( const char *in, char *out, int len )escape_markup2253,43004
escape_mode( const char *in, char *out, int len )escape_mode2283,43544
rpt( char ch, int n )rpt2303,43860
spc( int n )spc2320,44094
break_token( char *str, const char *brk )break_token2332,44499
number_to_string( int n, char *buf )number_to_string2366,45112
find_space( const char *name )find_space2383,45409
find_space( const char *name )find_space2400,45743
find_space( const char *name )find_space2415,46022
find_space( const char *name )find_space2439,46434
to_size( VipsBuf *buf, double sz )to_size2449,46617
temp_name( char *name, const char *type )temp_name2491,47284
findmaxmin( IMAGE *in, findmaxmin2529,48088
char_to_bool( char *str, void *out )char_to_bool2557,48680
bool_to_char( gboolean b )bool_to_char2570,48855
increment_name( char *buf )increment_name2583,49135
increment_filename( char *filename )increment_filename2608,49621
extract_first_line( char *buf, char *str, int len )extract_first_line2650,50567
name_from_filename( const char *in, char *out )name_from_filename2674,51067
util_check_all_destroyed( void )util_check_all_destroyed2703,51675
imalloc( IMAGE *im, size_t len )imalloc2712,51840
recent_add( GSList *recent, const char *filename )recent_add2736,52383
recent_load( const char *filename )recent_load2775,53219
recent_free( GSList *recent )recent_free2803,53657
recent_save_sub( const char *filename, GSList **old_recent )recent_save_sub2817,53858
recent_save_sub2( const char *filename, iOpenFile *of )recent_save_sub22825,54008
recent_save( GSList *recent, const char *filename )recent_save2833,54130
get_savedir( void )get_savedir2860,54912
slist_to_array( GSList *list )slist_to_array2884,55568
array_len( void **array )array_len2900,55835

pathname.c,533
static ClassmodelClass *parent_class = NULL;parent_class36,951
pathname_dispose( GObject *gobject )pathname_dispose39,1009
pathname_view_new( Model *model, View *parent )pathname_view_new53,1256
pathname_update_model( Heapmodel *heapmodel )pathname_update_model59,1354
static ClassmodelMember pathname_members[] = {pathname_members79,1761
pathname_class_init( PathnameClass *class )pathname_class_init89,2066
pathname_init( Pathname *pathname )pathname_init118,2787
pathname_get_type( void )pathname_get_type129,3013

dump.c,1429
#define DEBUGDEBUG35,1029
decode_BinOp( BinOp op )decode_BinOp40,1082
decode_UnOp( UnOp op )decode_UnOp84,2143
decode_NodeType( NodeType tag )decode_NodeType115,2911
decode_CombinatorType( CombinatorType comb ) decode_CombinatorType141,3495
decode_SymbolType( SymbolType t )decode_SymbolType162,3890
decode_SymbolType_user( SymbolType t )decode_SymbolType_user183,4431
dump_tiny( Symbol *sym )dump_tiny210,5093
dump_expr_tiny( Expr *expr )dump_expr_tiny228,5413
dump_expr( Expr *expr )dump_expr240,5579
dump_compile_tiny( Compile *compile )dump_compile_tiny275,6482
dump_compile( Compile *compile )dump_compile287,6661
dump_symbol( Symbol *sym )dump_symbol367,9097
dump_symbol_table( void )dump_symbol_table420,10287
dump_tiny_tool( Tool *tool )dump_tiny_tool429,10474
dump_kit( Toolkit *kit )dump_kit454,10821
sym( char *name )sym468,11121
psym( char *name )psym476,11240
pgraph( PElement *graph )pgraph489,11418
psymv( char *name )psymv501,11652
print_element( int nsp, EType type, void *arg )print_element518,11951
graph_heap( int nsp, HeapNode *hn )graph_heap589,13301
dump_parseconst( ParseConst *pc )dump_parseconst677,15055
dump_tree( ParseNode *n )dump_tree711,15577
dump_link_expr( LinkExpr *le )dump_link_expr804,17404
dump_link( Link *link )dump_link813,17534
dump_links( Symbol *sym )dump_links840,18148
dump_symbol_heap( Symbol *sym )dump_symbol_heap852,18428

icontainer.c,3849
	SIG_POS_CHANGED,	/* Member has moved */SIG_POS_CHANGED41,1019
	SIG_CHILD_ADD,		/* iContainer is about to gain a child */SIG_CHILD_ADD42,1060
	SIG_CHILD_REMOVE,	/* iContainer is about to loose a child */SIG_CHILD_REMOVE43,1119
	SIG_LASTSIG_LAST44,1181
static iObjectClass *parent_class = NULL;parent_class47,1195
static guint icontainer_signals[SIG_LAST] = { 0 };icontainer_signals49,1238
icontainer_get_n_children( iContainer *icontainer )icontainer_get_n_children52,1294
icontainer_get_children( iContainer *icontainer )icontainer_get_children58,1411
icontainer_map( iContainer *icontainer, icontainer_map_fn fn, void *a, void *b )icontainer_map64,1522
icontainer_map3( iContainer *icontainer, icontainer_map370,1686
icontainer_map4( iContainer *icontainer, icontainer_map477,1866
icontainer_map5( iContainer *icontainer, icontainer_map585,2061
icontainer_map_rev( iContainer *icontainer, icontainer_map_rev95,2297
icontainer_map_all( iContainer *icontainer, icontainer_map_fn fn, void *a )icontainer_map_all105,2535
icontainer_map2_all( iContainer *icontainer, icontainer_map2_all117,2810
icontainer_map3_all( iContainer *icontainer, icontainer_map3_all130,3100
icontainer_map4_all( iContainer *icontainer, icontainer_map4_all144,3410
icontainer_map_all_intrans( iContainer *icontainer, icontainer_map_all_intrans160,3792
icontainer_sanity_child( iContainer *child, iContainer *parent )icontainer_sanity_child168,3997
icontainer_sanity( iContainer *icontainer )icontainer_sanity185,4432
icontainer_pos_compare( iContainer *a, iContainer *b )icontainer_pos_compare196,4720
icontainer_pos_sort( iContainer *icontainer )icontainer_pos_sort202,4820
icontainer_pos_last_sub( iContainer *icontainer, int *max )icontainer_pos_last_sub210,5039
icontainer_pos_last( iContainer *icontainer )icontainer_pos_last219,5182
icontainer_pos_changed( iContainer *icontainer )icontainer_pos_changed230,5370
icontainer_pos_renumber_sub( iContainer *icontainer, int *n, GSList **changed )icontainer_pos_renumber_sub244,5652
icontainer_print_element( iContainer *element, int *n )icontainer_print_element258,5913
icontainer_pos_renumber( iContainer *icontainer )icontainer_pos_renumber269,6119
icontainer_name_compare( iContainer *a, iContainer *b )icontainer_name_compare320,7274
icontainer_custom_sort( iContainer *icontainer, GCompareFunc fn )icontainer_custom_sort326,7412
icontainer_child_add( iContainer *parent, iContainer *child, int pos )icontainer_child_add336,7664
icontainer_child_add_before( iContainer *parent, icontainer_child_add_before358,8189
icontainer_child_move( iContainer *child, int pos )icontainer_child_move375,8609
icontainer_child_remove( iContainer *child )icontainer_child_remove392,9078
icontainer_dispose( GObject *gobject )icontainer_dispose422,9726
icontainer_finalize( GObject *gobject )icontainer_finalize445,10246
icontainer_info( iObject *iobject, VipsBuf *buf )icontainer_info462,10617
icontainer_real_pos_changed( iContainer *icontainer )icontainer_real_pos_changed472,10850
icontainer_real_child_add( iContainer *parent, iContainer *child, int pos )icontainer_real_child_add477,10921
icontainer_real_child_remove( iContainer *parent, iContainer *child )icontainer_real_child_remove529,12505
icontainer_real_parent_add( iContainer *child )icontainer_real_parent_add564,13486
icontainer_real_parent_remove( iContainer *child )icontainer_real_parent_remove577,13810
icontainer_class_init( iContainerClass *class )icontainer_class_init592,14161
icontainer_init( iContainer *icontainer )icontainer_init642,15696
icontainer_get_type( void )icontainer_get_type654,15927
icontainer_set_hash( iContainer *icontainer )icontainer_set_hash681,16525
icontainer_child_lookup( iContainer *parent, const char *name )icontainer_child_lookup693,16825

path.c,1715
GSList *path_session = NULL;path_session42,1102
GSList *path_start_default = NULL;path_start_default46,1175
GSList *path_search_default = NULL;path_search_default47,1210
const char *path_tmp_default = NULL;path_tmp_default48,1246
path_parse( const char *path )path_parse53,1377
path_free2( GSList *path )path_free289,2052
path_add_component( const char *str, int c )path_add_component98,2231
path_add_string( const char *str, char *buf )path_add_string106,2404
path_unparse( GSList *path )path_unparse117,2616
typedef struct _Search {_Search137,3041
	const char *basename;basename141,3175
	GPatternSpec *wild;wild142,3198
	char *dirname; dirname148,3422
	path_map_fn fn;fn152,3496
	void *a;a153,3513
	GSList *previous;previous158,3660
} Search;Search159,3679
path_search_free( Search *search )path_search_free162,3702
path_search_init( Search *search, const char *patt, path_map_fn fn, void *a )path_search_init171,3912
path_str_eq( const char *s1, const char *s2 )path_str_eq189,4324
path_search_match( Search *search, const char *dir_name, const char *name )path_search_match201,4603
path_scan_dir( const char *dir_name, Search *search )path_scan_dir231,5392
path_map_exact( GSList *path, const char *patt, path_map_fn fn, void *a )path_map_exact270,6475
path_map( GSList *path, const char *patt, path_map_fn fn, void *a )path_map292,6930
path_map_dir( const char *dir, const char *patt, path_map_fn fn, void *a )path_map_dir317,7465
path_find_file( GSList *path, const char *filename )path_find_file345,8088
path_add_dir( const char *dir )path_add_dir369,8579
path_add_file( const char *filename )path_add_file382,8898
path_init( void )path_init395,9107

class.h,2845
#define MEMBER_BANDS MEMBER_BANDS32,939
#define MEMBER_CAPTION MEMBER_CAPTION33,968
#define MEMBER_DISPLAY MEMBER_DISPLAY34,1001
#define MEMBER_CHECK MEMBER_CHECK35,1034
#define MEMBER_FILENAME MEMBER_FILENAME36,1063
#define MEMBER_FORMAT MEMBER_FORMAT37,1098
#define MEMBER_FROM MEMBER_FROM38,1129
#define MEMBER_HEIGHT MEMBER_HEIGHT39,1156
#define MEMBER_LABELS MEMBER_LABELS40,1187
#define MEMBER_NAME MEMBER_NAME41,1218
#define MEMBER_OFFSET MEMBER_OFFSET42,1245
#define MEMBER_SCALE MEMBER_SCALE43,1276
#define MEMBER_SUPER MEMBER_SUPER44,1305
#define MEMBER_THIS MEMBER_THIS45,1334
#define MEMBER_TO MEMBER_TO46,1361
#define MEMBER_VALUE MEMBER_VALUE47,1384
#define MEMBER_WIDTH MEMBER_WIDTH48,1413
#define MEMBER_LEFT MEMBER_LEFT49,1442
#define MEMBER_TOP MEMBER_TOP50,1469
#define MEMBER_IMAGE MEMBER_IMAGE51,1494
#define MEMBER_OO_BINARY MEMBER_OO_BINARY52,1523
#define MEMBER_OO_BINARY2 MEMBER_OO_BINARY253,1560
#define MEMBER_OO_UNARY MEMBER_OO_UNARY54,1599
#define MEMBER_COLOUR_SPACE MEMBER_COLOUR_SPACE55,1634
#define MEMBER_EXPR MEMBER_EXPR56,1677
#define MEMBER_INTERVAL MEMBER_INTERVAL57,1704
#define MEMBER_OPTIONS MEMBER_OPTIONS58,1739
#define MEMBER_VISLEVEL MEMBER_VISLEVEL60,1773
#define MEMBER_ACTION MEMBER_ACTION61,1809
#define MEMBER_LABEL MEMBER_LABEL62,1840
#define MEMBER_ICON MEMBER_ICON63,1869
#define MEMBER_TOOLTIP MEMBER_TOOLTIP64,1896
#define CLASS_SLIDER CLASS_SLIDER68,1968
#define CLASS_TOGGLE CLASS_TOGGLE69,1997
#define CLASS_IMAGE CLASS_IMAGE70,2027
#define CLASS_COLOUR CLASS_COLOUR71,2055
#define CLASS_NUMBER CLASS_NUMBER72,2085
#define CLASS_STRING CLASS_STRING73,2115
#define CLASS_OPTION CLASS_OPTION74,2145
#define CLASS_MATRIX CLASS_MATRIX75,2175
#define CLASS_ARROW CLASS_ARROW76,2210
#define CLASS_REGION CLASS_REGION77,2238
#define CLASS_AREA CLASS_AREA78,2268
#define CLASS_HGUIDE CLASS_HGUIDE79,2294
#define CLASS_VGUIDE CLASS_VGUIDE80,2324
#define CLASS_MARK CLASS_MARK81,2354
#define CLASS_POINT CLASS_POINT82,2380
#define CLASS_PATHNAME CLASS_PATHNAME83,2408
#define CLASS_FONTNAME CLASS_FONTNAME84,2442
#define CLASS_SEPARATOR CLASS_SEPARATOR85,2476
#define CLASS_GROUP CLASS_GROUP86,2512
#define CLASS_LIST CLASS_LIST87,2540
#define CLASS_MENU CLASS_MENU88,2566
#define CLASS_MENUITEM CLASS_MENUITEM89,2592
#define CLASS_MENUACTION CLASS_MENUACTION90,2626
#define CLASS_MENUPULLRIGHT CLASS_MENUPULLRIGHT91,2664
#define CLASS_MENUSEPARATOR CLASS_MENUSEPARATOR92,2708
#define CLASS_EXPRESSION CLASS_EXPRESSION93,2752
#define CLASS_CLOCK CLASS_CLOCK94,2790
#define CLASS_REAL CLASS_REAL95,2818
#define CLASS_VECTOR CLASS_VECTOR96,2844
#define CLASS_PLOT CLASS_PLOT97,2874
typedef void *(*class_map_fn)( Symbol *, PElement *, void *, void * );class_map_fn101,2949

gtkitementry.h,837
#define __GTK_ITEM_ENTRY_H____GTK_ITEM_ENTRY_H__23,1014
#define GTK_TYPE_ITEM_ENTRY GTK_TYPE_ITEM_ENTRY31,1104
#define GTK_ITEM_ENTRY(GTK_ITEM_ENTRY32,1172
#define GTK_ITEM_ENTRY_CLASS(GTK_ITEM_ENTRY_CLASS33,1283
#define GTK_IS_ITEM_ENTRY(GTK_IS_ITEM_ENTRY34,1398
#define GTK_IS_ITEM_ENTRY_CLASS(GTK_IS_ITEM_ENTRY_CLASS36,1589
#define GTK_ITEM_ENTRY_GET_CLASS(GTK_ITEM_ENTRY_GET_CLASS37,1680
typedef struct _GtkItemEntry       GtkItemEntry;GtkItemEntry39,1796
typedef struct _GtkItemEntryClass  GtkItemEntryClass;GtkItemEntryClass40,1845
struct _GtkItemEntry_GtkItemEntry42,1900
  GtkEntry parent;parent44,1923
  gint text_max_size;text_max_size46,1943
  GtkJustification justification;justification48,1966
struct _GtkItemEntryClass_GtkItemEntryClass51,2004
  GtkEntryClass parent_class;parent_class53,2032

toolkitgroup.c,886
static ModelClass *parent_class = NULL;parent_class36,947
toolkitgroup_map( Toolkitgroup *kitg, toolkit_map_fn fn, void *a, void *b )toolkitgroup_map39,998
toolkitgroup_finalize( GObject *gobject )toolkitgroup_finalize46,1185
toolkitgroup_changed( iObject *iobject )toolkitgroup_changed63,1511
toolkitgroup_view_new( Model *model, View *parent )toolkitgroup_view_new74,1719
toolkitgroup_class_init( ToolkitgroupClass *class )toolkitgroup_class_init80,1823
toolkitgroup_init( Toolkitgroup *kitg )toolkitgroup_init101,2301
toolkitgroup_get_type( void )toolkitgroup_get_type106,2352
toolkitgroup_link( Toolkitgroup *kitg, Symbol *root )toolkitgroup_link131,2910
toolkitgroup_new( Symbol *root )toolkitgroup_new145,3161
toolkitgroup_sort_compare( Model *a, Model *b )toolkitgroup_sort_compare159,3490
toolkitgroup_sort( Toolkitgroup *kitg )toolkitgroup_sort170,3718

iregiongroupview.h,618
#define TYPE_IREGIONGROUPVIEW TYPE_IREGIONGROUPVIEW30,926
#define IREGIONGROUPVIEW(IREGIONGROUPVIEW31,986
#define IREGIONGROUPVIEW_CLASS(IREGIONGROUPVIEW_CLASS33,1088
#define IS_IREGIONGROUPVIEW(IS_IREGIONGROUPVIEW36,1215
#define IS_IREGIONGROUPVIEW_CLASS(IS_IREGIONGROUPVIEW_CLASS38,1302
typedef struct _iRegiongroupview {_iRegiongroupview41,1406
	View parent_class;parent_class42,1441
} iRegiongroupview;iRegiongroupview44,1462
typedef struct _iRegiongroupviewClass {_iRegiongroupviewClass46,1483
	ViewClass parent_class;parent_class47,1523
} iRegiongroupviewClass;iRegiongroupviewClass51,1570

colourdisplay.c,1325
	TARGET_COLOUR,TARGET_COLOUR39,1005
	TARGET_TEXTTARGET_TEXT40,1021
static ImagedisplayClass *parent_class = NULL;parent_class43,1038
colourdisplay_destroy( GtkObject *object )colourdisplay_destroy46,1098
colourdisplay_set_drag_type( Colourdisplay *colourdisplay )colourdisplay_set_drag_type61,1450
colourdisplay_realize( GtkWidget *widget )colourdisplay_realize101,2684
colourdisplay_drag_begin( GtkWidget *widget, GdkDragContext *context )colourdisplay_drag_begin111,2904
colourdisplay_drag_end( GtkWidget *widget, GdkDragContext *context )colourdisplay_drag_end135,3655
colourdisplay_drag_data_get( GtkWidget *widget, GdkDragContext *context,colourdisplay_drag_data_get142,3816
colourdisplay_drag_data_received( GtkWidget *widget, GdkDragContext *context,colourdisplay_drag_data_received191,5037
colourdisplay_generate_tooltip( Colourdisplay *colourdisplay, VipsBuf *buf )colourdisplay_generate_tooltip252,6545
colourdisplay_conversion_changed( Imagedisplay *id )colourdisplay_conversion_changed265,6909
colourdisplay_class_init( ColourdisplayClass *class )colourdisplay_class_init278,7201
colourdisplay_init( Colourdisplay *colourdisplay )colourdisplay_init299,7922
colourdisplay_get_type( void )colourdisplay_get_type315,8293
colourdisplay_new( Conversion *conv )colourdisplay_new338,8756

subcolumn.h,1251
#define TYPE_SUBCOLUMN TYPE_SUBCOLUMN30,906
#define SUBCOLUMN(SUBCOLUMN31,952
#define SUBCOLUMN_CLASS(SUBCOLUMN_CLASS33,1045
#define IS_SUBCOLUMN(IS_SUBCOLUMN35,1149
#define IS_SUBCOLUMN_CLASS(IS_SUBCOLUMN_CLASS37,1234
#define SUBCOLUMN_GET_CLASS(SUBCOLUMN_GET_CLASS39,1326
typedef gboolean (*RowPred)( Row * );RowPred44,1461
	const char *name;name49,1568
	RowPred pred;pred50,1587
} SubcolumnVisibility;SubcolumnVisibility51,1602
struct _Subcolumn {_Subcolumn53,1626
	Heapmodel parent_class;parent_class54,1646
	Column *col;		/* Enclosing column (or NULL) */col58,1694
	Subcolumn *scol;	/* Enclosing subcolumn (or NULL) */scol59,1742
	Column *top_col;	/* Topmost enclosing column */top_col60,1796
	Subcolumn *top_scol;	/* Topmost enclosing subcolumn */top_scol61,1845
	int vislevel;		/* Visibility level */vislevel63,1902
	gboolean is_top;	/* TRUE if parent is a column */is_top64,1941
	Element base;		/* "this" for our members */base66,1993
	gboolean known_private;	/* TRUE after top-level clone .. can write! */known_private67,2038
	Row *super;super73,2227
typedef struct _SubcolumnClass {_SubcolumnClass76,2244
	HeapmodelClass parent_class;parent_class77,2277
} SubcolumnClass;SubcolumnClass81,2329

prefcolumnview.h,600
#define TYPE_PREFCOLUMNVIEW TYPE_PREFCOLUMNVIEW30,914
#define PREFCOLUMNVIEW(PREFCOLUMNVIEW31,970
#define PREFCOLUMNVIEW_CLASS(PREFCOLUMNVIEW_CLASS33,1066
#define IS_PREFCOLUMNVIEW(IS_PREFCOLUMNVIEW36,1187
#define IS_PREFCOLUMNVIEW_CLASS(IS_PREFCOLUMNVIEW_CLASS37,1267
struct _Prefcolumnview {_Prefcolumnview40,1367
	View view;view41,1392
        GtkWidget *lab;               	/* Prefcolumnview name label */lab45,1443
typedef struct _PrefcolumnviewClass {_PrefcolumnviewClass48,1518
	ViewClass parent_class;parent_class49,1556
} PrefcolumnviewClass;PrefcolumnviewClass53,1603

prefworkspaceview.c,751
static ViewClass *parent_class = NULL;parent_class40,1015
prefworkspaceview_destroy( GtkObject *object )prefworkspaceview_destroy43,1067
prefworkspaceview_child_add( View *parent, View *child )prefworkspaceview_child_add64,1482
prefworkspaceview_display( View *parent, Model *child )prefworkspaceview_display77,1801
prefworkspaceview_class_init( PrefworkspaceviewClass *class )prefworkspaceview_class_init90,2109
prefworkspaceview_init( Prefworkspaceview *pwview )prefworkspaceview_init104,2502
prefworkspaceview_get_type( void )prefworkspaceview_get_type111,2624
prefworkspaceview_new( void )prefworkspaceview_new134,3094
prefworkspaceview_set_caption_filter( Prefworkspaceview *pwview, prefworkspaceview_set_caption_filter142,3232

symbol.c,3801
#  define DEBUG_MAKEDEBUG_MAKE52,1189
#  define DEBUG_TIMEDEBUG_TIME55,1238
#  define DEBUG_RECALCDEBUG_RECALC58,1289
	SIG_NEW_VALUE,		/* new value for sym->expr */SIG_NEW_VALUE65,1356
	SIG_LASTSIG_LAST66,1403
static guint symbol_signals[SIG_LAST] = { 0 };symbol_signals69,1417
Symbol *symbol_root = NULL;symbol_root73,1537
static GSList *symbol_leaf_set = NULL;symbol_leaf_set78,1692
static FilemodelClass *parent_class = NULL;parent_class80,1732
symbol_map_all( Symbol *sym, symbol_map_fn fn, void *a, void *b )symbol_map_all85,1842
symbol_get_parent( Symbol *sym )symbol_get_parent108,2308
symbol_get_workspace( Symbol *sym )symbol_get_workspace119,2511
symbol_get_tool( Symbol *sym )symbol_get_tool130,2703
symbol_get_scope( Symbol *sym )symbol_get_scope145,2914
symbol_qualified_name( Symbol *sym, VipsBuf *buf )symbol_qualified_name159,3152
symbol_qualified_name_relative( Symbol *context, Symbol *sym, VipsBuf *buf )symbol_qualified_name_relative175,3563
symbol_name( Symbol *sym )symbol_name191,3996
symbol_name_print( Symbol *sym )symbol_name_print205,4252
symbol_name_scope( Symbol *sym )symbol_name_scope214,4459
symbol_name_scope_print( Symbol *sym )symbol_name_scope_print232,4869
symbol_new_value( Symbol *sym )symbol_new_value238,4962
symbol_patch_add( void **pnt, Symbol *sym )symbol_patch_add246,5113
symbol_clear( Symbol *sym )symbol_clear256,5281
symbol_root_init( void )symbol_root_init292,5809
symbol_is_leafable( Symbol *sym )symbol_is_leafable313,6325
symbol_sanity( Symbol *sym ) symbol_sanity329,6566
symbol_leaf_set_sanity( void )symbol_leaf_set_sanity354,7320
symbol_strip( Symbol *sym )symbol_strip372,7754
symbol_made_error_clear( Link *link )symbol_made_error_clear425,8731
symbol_made( Symbol *sym )symbol_made436,8990
symbol_not_defined_sub( Link *link, VipsBuf *buf )symbol_not_defined_sub467,9599
symbol_not_defined( Symbol *sym )symbol_not_defined481,9909
symbol_destroy_error( Compile *compile, Symbol *sym )symbol_destroy_error505,10563
symbol_dispose( GObject *gobject )symbol_dispose514,10712
symbol_changed( iObject *iobject )symbol_changed588,12379
symbol_real_new_value( Symbol *symbol )symbol_real_new_value601,12639
symbol_class_init( SymbolClass *class )symbol_class_init606,12696
symbol_init( Symbol *sym )symbol_init629,13281
symbol_get_type( void )symbol_get_type639,13423
symbol_new( Compile *compile, const char *name )symbol_new668,14154
symbol_error_redefine( Symbol *sym )symbol_error_redefine701,14860
symbol_new_defining( Compile *compile, const char *name )symbol_new_defining727,15724
symbol_new_reference( Compile *compile, const char *name )symbol_new_reference783,17119
symbol_link_break( Symbol *child, Compile *compile )symbol_link_break800,17423
symbol_user_init( Symbol *sym )symbol_user_init810,17589
symbol_parameter_init( Symbol *sym )symbol_parameter_init829,17934
symbol_parameter_builtin_init( Symbol *sym )symbol_parameter_builtin_init846,18308
symbol_leaf_next( void ) symbol_leaf_next859,18515
symbol_busy( void )symbol_busy871,18740
symbol_set_leaf( Symbol *sym, gboolean leaf )symbol_set_leaf879,18836
symbol_state_change( Symbol *sym )symbol_state_change915,19483
symbol_recalculate_sub( Symbol *sym )symbol_recalculate_sub927,19761
static gboolean symbol_running = FALSE;symbol_running969,20699
symbol_recalculate_check( Symbol *sym )symbol_recalculate_check974,20793
symbol_recalculate_leaf( void )symbol_recalculate_leaf1048,22362
static gint symbol_idle_id = 0;symbol_idle_id1090,23236
symbol_recalculate_idle_cb( void )symbol_recalculate_idle_cb1093,23285
symbol_recalculate_all_force( gboolean now )symbol_recalculate_all_force1119,23702
symbol_recalculate_all( void )symbol_recalculate_all1150,24289

clock.h,744
#define TYPE_CLOCK TYPE_CLOCK30,897
#define CLOCK(CLOCK31,935
#define CLOCK_CLASS(CLOCK_CLASS33,1016
#define IS_CLOCK(IS_CLOCK35,1108
#define IS_CLOCK_CLASS(IS_CLOCK_CLASS37,1185
#define CLOCK_GET_CLASS(CLOCK_GET_CLASS39,1269
typedef struct _Clock {_Clock42,1365
	Value parent_object;parent_object43,1389
	double interval;interval45,1412
	double value;value46,1430
	GTimer *elapsed_timer;elapsed_timer48,1446
	double time_offset;	/* Offset timer by this to get new value */time_offset49,1470
	guint recalc_timeout;	/* Timeout for next recalc */recalc_timeout50,1535
} Clock;Clock51,1588
typedef struct _ClockClass {_ClockClass53,1598
	ValueClass parent_class;parent_class54,1627
} ClockClass;ClockClass58,1675

util.h,1685
#define NUMERIC NUMERIC32,969
#define WHITESPACE WHITESPACE33,998
#define INEW(INEW37,1083
#define IARRAY(IARRAY38,1133
#define NN(NN42,1233
#define UNREF(UNREF44,1269
#define GOG_UNREF(GOG_UNREF51,1380
#define FREESID(FREESID59,1543
#define SWAPP(SWAPP68,1713
typedef gpointer (*SListMapFn)( gpointer, gpointer );SListMapFn103,3044
typedef gpointer (*SListMap2Fn)( gpointer, gpointer, gpointer );SListMap2Fn104,3098
typedef gpointer (*SListMap3Fn)( gpointer, gpointer, gpointer, gpointer );SListMap3Fn105,3163
typedef gpointer (*SListMap4Fn)( gpointer, gpointer, gpointer, gpointer,SListMap4Fn106,3238
typedef gpointer (*SListMap5Fn)( gpointer, gpointer, gpointer, gpointer,SListMap5Fn108,3324
typedef gpointer (*SListFoldFn)( gpointer, gpointer, gpointer );SListFoldFn110,3420
typedef gpointer (*SListFold2Fn)( gpointer, gpointer, gpointer, gpointer );SListFold2Fn111,3485
typedef struct _Queue {_Queue139,4669
	GSList *list;list140,4693
	GSList *tail;tail141,4708
	int length;length142,4723
} Queue;Queue143,4736
typedef void *(*callv_string_fn)( const char *name, void *a, void *b, void *c );callv_string_fn200,6589
typedef int (*calli_string_fn)( const char *name, void *a, void *b, void *c );calli_string_fn216,7296
typedef struct _iOpenFile {_iOpenFile256,8904
	FILE *fp;	fp257,8932
	char *fname;		/* File we were passed to make this open_file */fname258,8944
	char *fname_real;	/* File we opened (maybe after search) */fname_real259,9008
	int last_errno;		/* On error, last value for errno */last_errno260,9069
	gboolean read;		/* True for open read, false for open write */read261,9124
} iOpenFile;iOpenFile262,9188

iregion.c,1608
static iImageClass *parent_class = NULL;parent_class36,954
iregion_instance_destroy( iRegionInstance *instance )iregion_instance_destroy39,1001
iregion_instance_init( iRegionInstance *instance, Classmodel *classmodel )iregion_instance_init50,1319
iregion_instance_update( iRegionInstance *instance, PElement *root )iregion_instance_update66,1763
iregion_finalize( GObject *gobject )iregion_finalize97,2618
iregion_generate_caption_sub( iImage *iimage, iregion_generate_caption_sub118,3014
iregion_generate_caption( iObject *iobject ) iregion_generate_caption143,3644
iregion_done_cb( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys )iregion_done_cb174,4626
iregion_view_new( Model *model, View *parent )iregion_view_new204,5541
iregion_edit( GtkWidget *parent, Model *model )iregion_edit212,5685
iregion_parent_add( iContainer *child )iregion_parent_add253,7091
iregion_save( Model *model, xmlNode *xnode )iregion_save266,7380
iregion_load( Model *model, iregion_load298,8254
iregion_update_heap( Heapmodel *heapmodel )iregion_update_heap326,9067
iregion_update_model( Heapmodel *heapmodel )iregion_update_model362,9966
iregion_class_get( Classmodel *classmodel, PElement *root )iregion_class_get383,10443
iregion_class_new( Classmodel *classmodel, PElement *fn, PElement *out )iregion_class_new404,11003
iregion_get_instance( Classmodel *classmodel )iregion_get_instance437,11897
iregion_class_init( iRegionClass *class )iregion_class_init445,12036
iregion_init( iRegion *iregion )iregion_init485,13193
iregion_get_type( void )iregion_get_type493,13363

pathname.h,500
#define TYPE_PATHNAME TYPE_PATHNAME30,900
#define PATHNAME(PATHNAME31,944
#define PATHNAME_CLASS(PATHNAME_CLASS32,1019
#define IS_PATHNAME(IS_PATHNAME34,1118
#define IS_PATHNAME_CLASS(IS_PATHNAME_CLASS35,1186
typedef struct _Pathname {_Pathname38,1274
	Classmodel model;model39,1301
	char *value;value41,1321
} Pathname;Pathname42,1335
typedef struct _PathnameClass {_PathnameClass44,1348
	ClassmodelClass parent_class;parent_class45,1380
} PathnameClass;PathnameClass49,1433

dump.h,0

icontainer.h,1737
#define TYPE_ICONTAINER TYPE_ICONTAINER30,909
#define ICONTAINER(ICONTAINER31,957
#define ICONTAINER_CLASS(ICONTAINER_CLASS33,1053
#define IS_ICONTAINER(IS_ICONTAINER35,1160
#define IS_ICONTAINER_CLASS(IS_ICONTAINER_CLASS37,1247
#define ICONTAINER_GET_CLASS(ICONTAINER_GET_CLASS39,1341
#define ICONTAINER_IS_CHILD(ICONTAINER_IS_CHILD44,1487
struct _iContainer {_iContainer48,1637
	iObject parent_object;parent_object49,1658
	GSList *children;	/* iContainers which are inside this one */children53,1710
	int pos;		/* Position in parent */pos54,1773
	iContainer *parent;	/* iContainer we are inside */parent55,1809
	guint destroy_sid;	/* Parent listens for our "destroy" here */destroy_sid56,1861
	GHashTable *child_hash;	/* Optional: hash of children by their name */child_hash57,1925
typedef struct _iContainerClass {_iContainerClass60,2001
	iObjectClass parent_class;parent_class61,2035
	void (*pos_changed)( iContainer *icontainer );pos_changed77,2291
	void (*child_add)( iContainer *parent, iContainer *child, int );child_add78,2339
	void (*child_remove)( iContainer *parent, iContainer *child );child_remove79,2405
	void (*parent_add)( iContainer *child );parent_add80,2469
	void (*parent_remove)( iContainer *child );parent_remove81,2511
} iContainerClass;iContainerClass82,2556
typedef void *(*icontainer_map_fn)( iContainer *, icontainer_map_fn84,2576
typedef void *(*icontainer_map3_fn)( iContainer *, icontainer_map3_fn86,2646
typedef void *(*icontainer_map4_fn)( iContainer *, icontainer_map4_fn88,2725
typedef void *(*icontainer_map5_fn)( iContainer *, icontainer_map5_fn90,2812
typedef gint (*icontainer_sort_fn)( iContainer *a, iContainer *b );icontainer_sort_fn93,2908

path.h,90
typedef void *(*path_map_fn)( const char *, void *, void *, void * );path_map_fn40,1136

imagemodel.c,2465
	SIG_IMAGEINFO_CHANGED,	/* Imageinfo we hold has been replaced */SIG_IMAGEINFO_CHANGED39,986
	SIG_LASTSIG_LAST40,1052
static iObjectClass *parent_class = NULL;parent_class43,1066
static guint imagemodel_signals[SIG_LAST] = { 0 };imagemodel_signals45,1109
imagemodel_imageinfo_changed( Imagemodel *imagemodel )imagemodel_imageinfo_changed48,1168
imagemodel_state_paint( ImagemodelState state )imagemodel_state_paint65,1574
imagemodel_state( ImagemodelState state )imagemodel_state89,2170
imagemodel_dispose( GObject *gobject )imagemodel_dispose112,2962
imagemodel_finalize( GObject *gobject )imagemodel_finalize141,3808
imagemodel_changed( iObject *iobject )imagemodel_changed159,4177
imagemodel_class_init( ImagemodelClass *class )imagemodel_class_init194,5155
imagemodel_refresh_ink( Imagemodel *imagemodel, Imageinfo *ii )imagemodel_refresh_ink219,5835
imagemodel_conv_changed_cb( Conversion *conv, Imagemodel *imagemodel )imagemodel_conv_changed_cb253,6791
imagemodel_conv_imageinfo_changed_cb( Conversion *conv, Imagemodel *imagemodel )imagemodel_conv_imageinfo_changed_cb262,6989
imagemodel_init( Imagemodel *imagemodel )imagemodel_init268,7132
imagemodel_get_type( void )imagemodel_get_type310,8349
imagemodel_iimage_destroy_cb( iImage *iimage, Imagemodel *imagemodel )imagemodel_iimage_destroy_cb335,8897
imagemodel_iimage_changed_cb( iImage *iimage, Imagemodel *imagemodel )imagemodel_iimage_changed_cb343,9087
imagemodel_link( Imagemodel *imagemodel, iImage *iimage )imagemodel_link349,9236
imagemodel_new( iImage *iimage )imagemodel_new374,9967
imagemodel_set_paintbox_cb( void *client, iWindowResult result )imagemodel_set_paintbox_cb394,10343
imagemodel_set_state( Imagemodel *imagemodel, ImagemodelState state, imagemodel_set_state418,11014
imagemodel_set_rulers( Imagemodel *imagemodel, gboolean show_rulers )imagemodel_set_rulers452,11868
imagemodel_set_paintbox( Imagemodel *imagemodel, gboolean show_paintbox )imagemodel_set_paintbox461,12084
imagemodel_set_status( Imagemodel *imagemodel, gboolean show_status )imagemodel_set_status483,12654
imagemodel_set_convert( Imagemodel *imagemodel, gboolean show_convert )imagemodel_set_convert492,12870
imagemodel_refresh_text( Imagemodel *imagemodel )imagemodel_refresh_text505,13265
imagemodel_refresh_nib( Imagemodel *imagemodel )imagemodel_refresh_nib533,13974
imagemodel_paint_recalc( Imagemodel *imagemodel )imagemodel_paint_recalc553,14429

toolkitgroup.h,594
#define TYPE_TOOLKITGROUP TYPE_TOOLKITGROUP30,905
#define TOOLKITGROUP(TOOLKITGROUP31,957
#define TOOLKITGROUP_CLASS(TOOLKITGROUP_CLASS33,1059
#define IS_TOOLKITGROUP(IS_TOOLKITGROUP36,1176
#define IS_TOOLKITGROUP_CLASS(IS_TOOLKITGROUP_CLASS38,1267
#define TOOLKITGROUP_GET_CLASS(TOOLKITGROUP_GET_CLASS40,1365
struct _Toolkitgroup {_Toolkitgroup46,1509
	Model parent_class;parent_class47,1532
	Symbol *root;root53,1766
typedef struct _ToolkitgroupClass {_ToolkitgroupClass56,1785
	ModelClass parent_class;parent_class57,1821
} ToolkitgroupClass;ToolkitgroupClass61,1866

row.c,5337
static HeapmodelClass *parent_class = NULL;parent_class66,1402
row_map_all_sub( Model *model, row_map_fn fn, void *a, void *b, void *c )row_map_all_sub69,1461
row_map_all( Row *row, row_map_fn fn, void *a, void *b, void *c )row_map_all78,1636
row_name( Row *row )row_name85,1835
row_get_parent( Row *row )row_get_parent94,1969
row_qualified_name_relative( Symbol *context, Row *row, VipsBuf *buf )row_qualified_name_relative104,2223
row_qualified_name( Row *row, VipsBuf *buf )row_qualified_name127,2785
row_name_print( Row *row )row_name_print136,2991
row_dirty_clear( Row *row )row_dirty_clear152,3233
row_dirty_set_single( Row *row, gboolean clear_error )row_dirty_set_single184,3771
row_dirty_set_sub( Model *model, gboolean clear_error )row_dirty_set_sub221,4556
row_dirty_set( Row *row, gboolean clear_error )row_dirty_set244,5206
row_error_set( Row *row )row_error_set257,5544
row_error_clear( Row *row )row_error_clear306,6614
row_link_break( Row *parent, Row *child )row_link_break348,7614
row_link_break_rev( Row *child, Row *parent )row_link_break_rev370,8118
row_dispose( GObject *gobject )row_dispose376,8225
row_add_parent_name( Link *link, VipsBuf *buf )row_add_parent_name439,9911
row_add_child_name( Link *link, VipsBuf *buf )row_add_child_name452,10162
row_add_dirty_child_name( Link *link, VipsBuf *buf )row_add_dirty_child_name465,10411
row_info( iObject *iobject, VipsBuf *buf )row_info476,10607
row_get_rhs( Row *row )row_get_rhs531,12240
row_child_add( iContainer *parent, iContainer *child, int pos )row_child_add539,12400
row_get_subcolumn( Row *row )row_get_subcolumn551,12652
row_get_column( Row *row )row_get_column557,12754
row_get_root( Row *row )row_get_root571,13010
row_get_workspace( Row *row )row_get_workspace582,13174
row_parent_add( iContainer *child )row_parent_add593,13316
row_parent_remove( iContainer *child )row_parent_remove610,13679
row_view_new( Model *model, View *parent )row_view_new627,14033
row_scrollto( Model *model, ModelScrollPosition position )row_scrollto633,14119
row_load( Model *model, row_load652,14683
row_is_displayable( Symbol *sym )row_is_displayable719,16414
row_save( Model *model, xmlNode *xnode )row_save739,16798
row_clear_to_save( Model *model )row_clear_to_save769,17430
row_set_to_save( Row *row )row_set_to_save778,17558
row_calculate_to_save( Model *model )row_calculate_to_save804,18191
row_save_test( Model *model )row_save_test823,18588
row_new_heap( Heapmodel *heapmodel, PElement *root )row_new_heap858,19337
row_update_model( Heapmodel *heapmodel )row_update_model933,21256
row_class_init( RowClass *class )row_class_init944,21465
row_init( Row *row )row_init982,22474
row_get_type( void )row_get_type1018,23020
row_link_symbol( Row *row, Symbol *sym, PElement *root )row_link_symbol1046,23645
row_new( Subcolumn *scol, Symbol *sym, PElement *root )row_new1075,24253
row_link_make( Row *parent, Row *child )row_link_make1104,24932
row_link_build4( Expr *child_expr, Row *row )row_link_build41133,25562
row_link_build3( Symbol *child, Row *row )row_link_build31144,25814
row_link_build2_sym( Symbol *sym, Row *row )row_link_build2_sym1160,26147
row_link_build2( Expr *expr, Row *row )row_link_build21169,26301
row_link_build( Row *row )row_link_build1207,27286
row_link_destroy( Row *row )row_link_destroy1227,27650
row_dependent_mark( Row *row, row_map_fn fn, void *a )row_dependent_mark1240,27906
row_dependent_map_sub( Row *row, row_map_fn fn, void *a )row_dependent_map_sub1259,28229
row_dependent_clear( Row *row )row_dependent_clear1290,29055
row_dependent_map( Row *row, row_map_fn fn, void *a )row_dependent_map1300,29214
row_dirty( Row *row, gboolean clear_error )row_dirty1314,29545
row_dirty_intrans( Row *row, gboolean clear_error )row_dirty_intrans1327,29843
row_recomp_depth( Row *row )row_recomp_depth1338,30079
row_recomp_sort_func( Row *a, Row *b )row_recomp_sort_func1349,30266
row_recomp_sort_slist( GSList *old )row_recomp_sort_slist1428,31952
row_recomp_sort( Row *row )row_recomp_sort1463,32451
row_regenerate( Row *row )row_regenerate1500,33365
row_recomp_row( Row *row )row_recomp_row1556,34614
row_recomp_all( Row *top_row )row_recomp_all1613,35780
row_recomp( Row *row )row_recomp1649,36560
row_is_selected( Row *row )row_is_selected1779,39876
row_deselect( Row *row )row_deselect1790,39996
row_select2( Row *row )row_select21821,40778
row_select_ensure( Row *row )row_select_ensure1838,41122
row_select( Row *row )row_select1852,41318
row_select_extend( Row *row )row_select_extend1869,41556
row_select_toggle( Row *row )row_select_toggle1903,42319
row_select_modifier( Row *row, guint state )row_select_modifier1920,42575
row_set_show( Row *row, RowShowState show )row_set_show1931,42790
row_show_parent( Link *link, RowShowState show )row_show_parent1940,42940
row_show_child( Link *link, RowShowState show )row_show_child1949,43129
row_show_dependents( Row *row )row_show_dependents1958,43305
row_hide_dependents( Row *row )row_hide_dependents1979,43729
row_set_status( Row *row )row_set_status2002,44244
row_parse_name_row( Row *context, const char *path )row_parse_name_row2038,45057
row_parse_name( Symbol *context, const char *path )row_parse_name2077,46066

compile.c,7521
static iContainerClass *parent_class = NULL;parent_class61,1362
compile_get_parent( Compile *compile )compile_get_parent64,1418
compile_name_print( Compile *compile )compile_name_print73,1589
compile_name_sub( Expr *expr, VipsBuf *buf )compile_name_sub83,1753
compile_name( Compile *compile, VipsBuf *buf )compile_name95,1956
compile_map_all_sub( Symbol *sym, map_compile_fn fn, void *a )compile_map_all_sub111,2357
compile_map_all( Compile *compile, map_compile_fn fn, void *a )compile_map_all122,2637
compile_lookup( Compile *compile, const char *name )compile_lookup143,3013
compile_link_make( Compile *compile, Symbol *child )compile_link_make152,3213
compile_link_break( Compile *compile, Symbol *child )compile_link_break181,3972
compile_expr_link_break( Compile *compile, Expr *expr )compile_expr_link_break209,4547
compile_expr_link_break_rev( Expr *expr, Compile *compile )compile_expr_link_break_rev223,4846
compile_expr_link_make( Compile *compile, Expr *expr )compile_expr_link_make229,4970
compile_finalize( GObject *gobject )compile_finalize243,5332
compile_class_init( CompileClass *class )compile_class_init311,6895
compile_init( Compile *compile )compile_init327,7165
compile_get_type( void )compile_get_type360,7760
compile_new( Expr *expr )compile_new387,8332
compile_heap_max_fn( Heap *heap )compile_heap_max_fn416,8915
compile_new_toplevel( Expr *expr )compile_new_toplevel424,9038
compile_new_local( Expr *expr )compile_new_local440,9412
compile_binop( Compile *compile, compile_binop461,9933
compile_dotsym( Compile *compile, Symbol *sym, PElement *rhs, PElement *out )compile_dotsym498,10834
compile_reference( Compile *compile, Symbol *sym, PElement *out )compile_reference512,11120
compile_graph( Compile *compile, ParseNode *pn, PElement *out )compile_graph601,13388
compile_abstract_body( Compile *compile, compile_abstract_body858,19052
compile_abstract_symbol( Symbol *sym, Compile *compile, PElement *root )compile_abstract_symbol968,21135
compile_node_count_sub( HeapNode *hn, int *n )compile_node_count_sub1007,21813
compile_node_count( HeapNode *hn )compile_node_count1015,21904
static int compile_node_sum;compile_node_sum1027,22102
typedef gpointer CompileHash;CompileHash1032,22208
#define COMPILEHASH_ADD(COMPILEHASH_ADD1036,22266
#define INT_TO_HASH INT_TO_HASH1041,22394
typedef struct _CompileShare {_CompileShare1046,22577
	Compile *compile;compile1047,22608
	GHashTable *node2hash;node2hash1049,22628
	GHashTable *hash2nodel;hash2nodel1050,22652
} CompileShare;CompileShare1051,22677
compile_share_destroy_sub( gpointer key, gpointer value, gpointer user_data )compile_share_destroy_sub1054,22710
compile_share_destroy( CompileShare *share )compile_share_destroy1063,22872
compile_share_init( CompileShare *share, Compile *compile )compile_share_init1079,23249
compile_share_remove( HeapNode *hn, CompileShare *share )compile_share_remove1089,23521
compile_share_add( CompileShare *share, HeapNode *hn, CompileHash hash )compile_share_add1112,23973
compile_share_lookup( CompileShare *share, HeapNode *hn )compile_share_lookup1139,24667
compile_share_scan_element( CompileShare *share, PElement *e )compile_share_scan_element1155,25024
compile_share_scan_node( CompileShare *share, HeapNode *hn )compile_share_scan_node1203,26069
compile_equal_node( HeapNode *hn1, HeapNode *hn2 )compile_equal_node1250,27011
compile_transform_reference( Compile *compile, HeapNode *hn1, HeapNode *hn2 )compile_transform_reference1317,28512
compile_share_test( HeapNode *other, CompileShare *share, HeapNode *hn )compile_share_test1347,29249
compile_share_trim( CompileShare *share, HeapNode *hn )compile_share_trim1361,29629
compile_share_scan( Compile *compile, PElement *a )compile_share_scan1397,30297
static int compile_share_number = 0;compile_share_number1412,30643
compile_transform_share( HeapNode *hn, Compile *compile )compile_transform_share1417,30757
compile_remove_subexpr( Compile *compile, PElement *root )compile_remove_subexpr1463,31660
compile_heap( Compile *compile )compile_heap1517,32936
compile_symbol_sub( Symbol *sym )compile_symbol_sub1609,34996
compile_object_sub( Compile *compile )compile_object_sub1621,35194
compile_object( Compile *compile )compile_object1636,35484
compile_toolkit_sub( Tool *tool )compile_toolkit_sub1651,35758
compile_toolkit( Toolkit *kit )compile_toolkit1669,36130
compile_check_i18n( Compile *compile, ParseNode *pn )compile_check_i18n1679,36289
compile_check_more( Compile *compile, ParseNode *pn )compile_check_more1726,37360
compile_check( Compile *compile )compile_check1757,37888
compile_error_set( Compile *compile )compile_error_set1799,38938
compile_patch_pointers_sub( void **pnt, void *nsym, void *osym )compile_patch_pointers_sub1807,39108
compile_patch_pointers( Symbol *nsym, Symbol *osym )compile_patch_pointers1819,39304
compile_resolve_sub( Compile *pnt, Symbol *sym )compile_resolve_sub1828,39492
compile_resolve_sub1( Compile *compile )compile_resolve_sub11839,39702
compile_resolve( Symbol *sym, Symbol *zombie )compile_resolve1848,39947
compile_resolve_names_sub( Symbol *sym, Compile *outer )compile_resolve_names_sub1896,41166
compile_resolve_names( Compile *inner, Compile *outer )compile_resolve_names1930,42208
compile_resolve_top( Symbol *sym )compile_resolve_top1940,42504
compile_resolve_dynamic_sub( Symbol *sym, Compile *context )compile_resolve_dynamic_sub1960,42913
compile_resolve_dynamic( Compile *tab, Compile *context )compile_resolve_dynamic1988,43652
compile_get_member( Compile *compile, const char *name )compile_get_member1996,43839
compile_get_member_string( Compile *compile, const char *name )compile_get_member_string2009,44084
compile_find_generated_node( Compile *compile, ParseNode *node,compile_find_generated_node2026,44530
compile_find_generated( Compile *compile, ParseNode *tree )compile_find_generated2044,44959
compile_copy_sym( Symbol *sym, Compile *dest )compile_copy_sym2060,45394
compile_copy_tree( Compile *fromscope, ParseNode *tree, Compile *toscope )compile_copy_tree2134,47339
compile_lcomp_find( Symbol *sym, GSList **children )compile_lcomp_find2216,48948
compile_lcomp_find_pattern( GSList *children, const char *generator )compile_lcomp_find_pattern2225,49112
compile_lcomp( Compile *compile )compile_lcomp2246,49522
compile_pattern_access( Compile *compile, compile_pattern_access2447,54549
compile_pattern_condition( Compile *compile, compile_pattern_condition2517,56094
compile_pattern_error( Compile *compile, Symbol *leaf )compile_pattern_error2636,59088
#define MAX_TRAIL MAX_TRAIL2654,59504
typedef struct _PatternLhs {_PatternLhs2656,59528
	Compile *compile;	/* Scope in which we generate new symbols */compile2657,59557
	Symbol *sym;		/* Thing we access */sym2658,59621
	ParseNode *trail[MAX_TRAIL];trail2662,59727
	int depth;depth2663,59757
	GSList *built_syms;built_syms2664,59769
} PatternLhs;PatternLhs2665,59790
compile_pattern_lhs_leaf( PatternLhs *lhs, Symbol *leaf )compile_pattern_lhs_leaf2670,59881
compile_pattern_lhs_sub( ParseNode *node, PatternLhs *lhs )compile_pattern_lhs_sub2698,60669
compile_pattern_lhs( Compile *compile, Symbol *sym, ParseNode *node )compile_pattern_lhs2740,61628
compile_pattern_has_leaf_sub( Compile *compile, compile_pattern_has_leaf_sub2762,62053
compile_pattern_has_leaf( ParseNode *node )compile_pattern_has_leaf2775,62312

colourdisplay.h,626
#define TYPE_COLOURDISPLAY TYPE_COLOURDISPLAY31,958
#define COLOURDISPLAY(COLOURDISPLAY32,1012
#define COLOURDISPLAY_CLASS(COLOURDISPLAY_CLASS34,1105
#define IS_COLOURDISPLAY(IS_COLOURDISPLAY37,1223
#define IS_COLOURDISPLAY_CLASS(IS_COLOURDISPLAY_CLASS38,1301
typedef struct _Colourdisplay {_Colourdisplay41,1399
	Imagedisplay parent_class;parent_class42,1431
	gboolean drag_as_text;drag_as_text47,1546
} Colourdisplay;Colourdisplay48,1570
typedef struct _ColourdisplayClass {_ColourdisplayClass50,1588
	ImagedisplayClass parent_class;parent_class51,1625
} ColourdisplayClass;ColourdisplayClass55,1680

prefworkspaceview.h,655
#define TYPE_PREFWORKSPACEVIEW TYPE_PREFWORKSPACEVIEW30,922
#define PREFWORKSPACEVIEW(PREFWORKSPACEVIEW31,984
#define PREFWORKSPACEVIEW_CLASS(PREFWORKSPACEVIEW_CLASS33,1089
#define IS_PREFWORKSPACEVIEW(IS_PREFWORKSPACEVIEW36,1219
#define IS_PREFWORKSPACEVIEW_CLASS(IS_PREFWORKSPACEVIEW_CLASS38,1308
struct _Prefworkspaceview {_Prefworkspaceview41,1414
	View view;view42,1442
	Workspacegroupview *wgview;wgview44,1455
	char *caption_filter;caption_filter49,1635
typedef struct _PrefworkspaceviewClass {_PrefworkspaceviewClass52,1662
	ViewClass parent_class;parent_class53,1703
} PrefworkspaceviewClass;PrefworkspaceviewClass57,1750

symbol.h,2089
#define TYPE_SYMBOL TYPE_SYMBOL30,902
#define SYMBOL(SYMBOL31,942
#define SYMBOL_CLASS(SYMBOL_CLASS33,1026
#define IS_SYMBOL(IS_SYMBOL35,1121
#define IS_SYMBOL_CLASS(IS_SYMBOL_CLASS37,1200
#define SYMBOL_GET_CLASS(SYMBOL_GET_CLASS39,1286
	SYM_VALUE,		/* Symbol with a value attached */SYM_VALUE45,1440
	SYM_PARAM,		/* A parameter to a user function */SYM_PARAM46,1488
	SYM_ZOMBIE,		/* A referred to but not defined */SYM_ZOMBIE47,1538
	SYM_WORKSPACE,		/* A loaded workspace */SYM_WORKSPACE48,1588
	SYM_WORKSPACEGROUP,	/* A collection of workspaces */SYM_WORKSPACEGROUP49,1630
	SYM_ROOT,		/* The root symbol */SYM_ROOT50,1684
	SYM_EXTERNAL,		/* A reference to an external function */SYM_EXTERNAL51,1718
	SYM_BUILTIN		/* A reference to a built-in function */SYM_BUILTIN52,1776
} SymbolType;SymbolType53,1831
struct _Symbol {_Symbol57,1863
	Filemodel parent_class;parent_class58,1880
	SymbolType type;type62,1940
	GSList *patch;patch67,2094
	Expr *expr;expr72,2201
	Element base;		/* Value for this expr */base78,2425
	gboolean dirty;		/* True if this sym needs recalc */dirty82,2540
	GSList *parents;	/* Compiles which refer to this sym */parents83,2594
	GSList *topchildren;	/* For top syms, all top-level children */topchildren85,2652
	GSList *topparents;	/* For top syms, all top-level parents */topparents86,2717
	int ndirtychildren;	/* Number of dirty top syms we refer to */ndirtychildren87,2780
	gboolean leaf;		/* True for in recomp set */leaf88,2844
	gboolean generated;generated92,2960
	gboolean placeholder;placeholder97,3114
	Tool *tool;		/* Tool and toolkit defined in */tool101,3171
	im_function *function;	/* Function we run */function105,3274
	int fn_nargs;		/* Number of args fn needs from nip */fn_nargs106,3320
	BuiltinInfo *builtin;builtin110,3426
	Workspacegroup *wsg;wsg114,3504
	Workspace *ws;ws118,3575
typedef struct _SymbolClass {_SymbolClass121,3595
	FilemodelClass parent_class;parent_class122,3625
	void (*new_value)( Symbol *sym );new_value131,3749
} SymbolClass;SymbolClass132,3784

rowview.c,3349
static ModelClass *parent_class = NULL;parent_class36,972
	ROWVIEW_TARGET_STRING,ROWVIEW_TARGET_STRING39,1020
static GtkTargetEntry rowview_target_table[] = {rowview_target_table42,1048
static GtkWidget *rowview_popup_menu = NULL;rowview_popup_menu49,1231
rowview_destroy( GtkObject *object )rowview_destroy52,1290
rowview_attach( Rowview *rview, GtkWidget *child, int x, rowview_attach81,1927
rowview_set_name_cb( Rowview *rview )rowview_set_name_cb98,2368
rowview_set_name( Rowview *rview, const char *set_name )rowview_set_name116,2759
rowview_update_widgets( Rowview *rview )rowview_update_widgets145,3498
rowview_reset( View *view )rowview_reset230,5604
rowview_refresh( vObject *vobject )rowview_refresh240,5765
rowview_single_cb( GtkWidget *wid, Rowview *rview, guint state )rowview_single_cb252,5984
rowview_edit( Rowview *rview )rowview_edit262,6177
rowview_double_cb( GtkWidget *button, Rowview *rview )rowview_double_cb276,6441
rowview_edit_cb( GtkWidget *menu, GtkWidget *button, Rowview *rview )rowview_edit_cb285,6611
rowview_clone_cb( GtkWidget *menu, GtkWidget *button, Rowview *rview )rowview_clone_cb294,6806
rowview_ungroup_cb( GtkWidget *menu, GtkWidget *button, Rowview *rview )rowview_ungroup_cb321,7484
rowview_save_cb( GtkWidget *menu, GtkWidget *button, Rowview *rview )rowview_save_cb335,7854
rowview_replace_cb( GtkWidget *menu, GtkWidget *button, Rowview *rview )rowview_replace_cb349,8219
rowview_recalc_cb( GtkWidget *menu, GtkWidget *button, Rowview *rview )rowview_recalc_cb363,8594
rowview_clear_edited_cb( GtkWidget *menu, GtkWidget *button, Rowview *rview )rowview_clear_edited_cb386,9204
rowview_remove_cb( GtkWidget *menu, GtkWidget *button, Rowview *rview )rowview_remove_cb398,9502
rowview_spin_up_cb( GtkWidget *widget, gpointer client )rowview_spin_up_cb411,9813
rowview_spin_down_cb( GtkWidget *widget, gpointer client )rowview_spin_down_cb422,10081
rowview_scrollto( View *view, ModelScrollPosition position )rowview_scrollto435,10393
rowview_drag( Rowview *rview_from, Rowview *rview_to )rowview_drag450,10802
rowview_drag_data_get( GtkWidget *but,rowview_drag_data_get475,11527
rowview_drag_data_received( GtkWidget *but,rowview_drag_data_received489,11884
rowview_menu_attach( Rowview *rview, GtkWidget *widget )rowview_menu_attach510,12470
rowview_link( View *view, Model *model, View *parent )rowview_link516,12606
rowview_child_add( View *parent, View *child )rowview_child_add547,13518
rowview_class_init( RowviewClass *class )rowview_class_init560,13785
rowview_enter_cb( GtkWidget *widget, Rowview *rview )rowview_enter_cb606,15114
rowview_leave_cb( GtkWidget *widget, Rowview *rview )rowview_leave_cb615,15285
rowview_focus_cb( GtkWidget *widget, GtkDirectionType dir, Rowview *rview )rowview_focus_cb623,15436
rowview_tooltip_generate( GtkWidget *widget, VipsBuf *buf, Rowview *rview )rowview_tooltip_generate631,15613
rowview_init( Rowview *rview )rowview_init640,15823
rowview_get_type( void )rowview_get_type689,17761
rowview_new( void )rowview_new712,18215
rowview_get_position( Rowview *rview, int *x, int *y, int *w, int *h )rowview_get_position722,18390
rowview_set_visible( Rowview *rview, gboolean visible )rowview_set_visible768,19936
rowview_get_visible( Rowview *rview )rowview_get_visible783,20364

iregion.h,1093
#define TYPE_IREGION TYPE_IREGION30,907
#define IREGION(IREGION31,949
#define IREGION_CLASS(IREGION_CLASS33,1036
#define IS_IREGION(IS_IREGION35,1134
#define IS_IREGION_CLASS(IS_IREGION_CLASS37,1215
#define IREGION_GET_CLASS(IREGION_GET_CLASS39,1303
typedef enum iRegionType {iRegionType44,1439
	IREGION_MARK = 0,IREGION_MARK45,1466
	IREGION_HGUIDE,IREGION_HGUIDE46,1485
	IREGION_VGUIDE,IREGION_VGUIDE47,1502
	IREGION_ARROW,IREGION_ARROW48,1519
	IREGION_REGION,IREGION_REGION49,1535
	IREGION_AREAIREGION_AREA50,1552
} iRegionType;iRegionType51,1566
	Element image_class;		/* Child image class */image_class58,1688
	Imageinfo *ii;ii59,1735
	Rect area;area60,1751
	Classmodel *classmodel;classmodel64,1795
	iRegiongroup *iregiongroup;iregiongroup65,1820
} iRegionInstance;iRegionInstance66,1849
struct _iRegion {_iRegion68,1869
	iImage parent_class;parent_class69,1887
	iRegionInstance instance;instance73,1954
typedef struct _iRegionClass {_iRegionClass76,1985
	iImageClass parent_class;parent_class77,2016
} iRegionClass;iRegionClass81,2065

progress.c,1232
static iContainerClass *progress_parent_class = NULL;progress_parent_class37,970
	SIG_BEGIN,		/* Switch to busy state */SIG_BEGIN42,1053
	SIG_UPDATE,		/* Busy progress update */SIG_UPDATE43,1093
	SIG_END,		/* End busy state */SIG_END44,1134
	SIG_LASTSIG_LAST45,1166
static guint progress_signals[SIG_LAST] = { 0 };progress_signals48,1180
static const double progress_busy_delay = 2.0;progress_busy_delay52,1282
static const double progress_update_interval = 0.2;progress_update_interval56,1365
progress_begin( void )progress_begin59,1423
progress_update( Progress *progress )progress_update83,1859
progress_update_percent( int percent, int eta )progress_update_percent139,3151
progress_update_expr( Expr *expr )progress_update_expr169,3820
progress_update_loading( int percent, const char *filename )progress_update_loading188,4253
progress_update_tick( void )progress_update_tick203,4620
progress_end( void )progress_end213,4758
progress_class_init( ProgressClass *class )progress_class_init241,5255
progress_init( Progress *progress )progress_init272,6051
progress_get_type( void )progress_get_type288,6401
progress_new( void )progress_new313,6943
progress_get( void ) progress_get321,7073

imagemodel.h,3046
#define TYPE_IMAGEMODEL TYPE_IMAGEMODEL30,948
#define IMAGEMODEL(IMAGEMODEL31,996
#define IMAGEMODEL_CLASS(IMAGEMODEL_CLASS33,1092
#define IS_IMAGEMODEL(IS_IMAGEMODEL35,1199
#define IS_IMAGEMODEL_CLASS(IS_IMAGEMODEL_CLASS37,1286
#define IMAGEMODEL_GET_CLASS(IMAGEMODEL_GET_CLASS39,1380
typedef enum _ImagemodelState {_ImagemodelState44,1512
	IMAGEMODEL_SELECT = 0,		/* Pointer */IMAGEMODEL_SELECT45,1544
	IMAGEMODEL_PAN,			/* Hand panner */IMAGEMODEL_PAN46,1583
	IMAGEMODEL_MAGIN,		/* Zoom in */IMAGEMODEL_MAGIN47,1620
	IMAGEMODEL_MAGOUT,		/* Zoom out */IMAGEMODEL_MAGOUT48,1654
	IMAGEMODEL_DROPPER,		/* Ink dropper */IMAGEMODEL_DROPPER49,1690
	IMAGEMODEL_PEN,			/* Pen */IMAGEMODEL_PEN50,1730
	IMAGEMODEL_LINE,		/* Line drawing tool */IMAGEMODEL_LINE51,1759
	IMAGEMODEL_RECT,		/* Rectangle tool */IMAGEMODEL_RECT52,1802
	IMAGEMODEL_FLOOD,		/* Flood-fill tool */IMAGEMODEL_FLOOD53,1842
	IMAGEMODEL_BLOB,		/* Blob flood-fill tool */IMAGEMODEL_BLOB54,1884
	IMAGEMODEL_TEXT,		/* Text tool */IMAGEMODEL_TEXT55,1930
	IMAGEMODEL_SMUDGE,		/* Blur */IMAGEMODEL_SMUDGE56,1965
	IMAGEMODEL_LAST	IMAGEMODEL_LAST57,1997
} ImagemodelState;ImagemodelState58,2015
struct _Imagemodel {_Imagemodel60,2035
	iObject parent_class;parent_class61,2056
	iImage *iimage;			/* iImage we represent, if any */iimage65,2098
	guint iimage_changed_sid;iimage_changed_sid66,2151
	guint iimage_destroy_sid;iimage_destroy_sid67,2178
	Conversion *conv;		/* Conversion to screen */conv71,2242
	guint conv_changed_sid;conv_changed_sid72,2289
	guint conv_imageinfo_changed_sid;conv_imageinfo_changed_sid73,2314
	Rect visible;			/* Visible part of canvas */visible74,2349
	ImagemodelState state;state78,2418
	ImagemodelState save_state; 	/* Old state, during temp actions */save_state79,2442
	ImagemodelState pend_state; 	/* To-be state, during delayed switch */pend_state80,2509
	gboolean show_rulers;show_rulers84,2598
	gboolean rulers_mm;rulers_mm85,2621
	gboolean rulers_offset;rulers_offset86,2642
	gboolean show_status;	show_status90,2689
	gboolean show_paintbox;		/* Visible/not */show_paintbox94,2733
	int nib_radius;			/* Selected radius */nib_radius95,2777
	Imageinfo *nib;			/* Generated nib mask */nib96,2818
	Imageinfo *ink;			/* 1x1 pixel ink image */ink97,2862
	char *font_name;		/* Selected font name */font_name98,2907
	char *text; 			/* Text to render */text99,2951
	Imageinfo *text_mask; 		/* As a bitmap */text_mask100,2988
	Rect text_area; 		/* Text geometry */text_area101,3031
	gboolean show_convert;show_convert105,3101
	double scale;			/* Contrast/brightness */scale106,3125
	double offset;offset107,3168
	gboolean falsecolour;		/* False colour display on */falsecolour108,3184
	gboolean type;			/* Interpret type field */type109,3238
typedef struct _ImagemodelClass {_ImagemodelClass112,3287
	iObjectClass parent_class;parent_class113,3321
	void (*imageinfo_changed)( Imagemodel * );imageinfo_changed117,3391
} ImagemodelClass;ImagemodelClass118,3435

heap.c,7533
static iObjectClass *parent_class = NULL;parent_class45,1149
static GSList *heap_all = NULL;heap_all47,1192
heap_safe_pointer( Heap *heap, heap_safe_pointer_fn fn, heap_safe_pointer53,1367
heap_map( HeapNode *hn, heap_map_fn fn, void *a, void *b )heap_map75,1764
heap_check_free( Heap *heap )heap_check_free125,2668
heap_check_managed( void *key, void *value, Heap *heap )heap_check_managed166,3342
heap_sanity( Heap *heap )heap_sanity177,3511
heap_check_all_destroyed( void )heap_check_all_destroyed194,3840
heapblock_free( HeapBlock *hb )heapblock_free202,3972
heap_set_flush( Heap *heap, gboolean flush )heap_set_flush216,4184
heap_dispose_print( void *key, void *value )heap_dispose_print222,4269
heap_dispose( GObject *gobject )heap_dispose230,4409
heap_finalize( GObject *gobject )heap_finalize253,4925
heap_info( iObject *iobject, VipsBuf *buf )heap_info272,5304
heapblock_empty( HeapBlock *hb )heapblock_empty304,6442
heapblock_create( Heap *heap, int sz )heapblock_create323,6782
heap_class_init( HeapClass *class )heap_class_init365,7601
heap_init( Heap *heap )heap_init379,7935
heap_get_type( void )heap_get_type407,8446
heap_link( Heap *heap, Compile *compile, heap_max_fn max_fn, int stsz, int rsz )heap_link432,8958
heap_new( Compile *compile, heap_max_fn max_fn, int stsz, int rsz )heap_new453,9458
heap_set( Heap *heap, NodeFlags setmask )heap_set466,9693
heap_clear( Heap *heap, NodeFlags clearmask )heap_clear479,9906
heap_serial_new( Heap *heap )heap_serial_new494,10265
heap_mark_tree( Heap *heap, HeapNode *hn )heap_mark_tree509,10551
mark_pelement( PElement *base, Heap *heap )mark_pelement584,12044
mark_element( void *key, void *value, Heap *heap )mark_element597,12296
mark_reduce( void *key, void *value, Heap *heap )mark_reduce609,12555
heap_gc( Heap *heap )heap_gc627,12873
heap_gc_request_cb( Heap *heap )heap_gc_request_cb703,14557
heap_gc_request( Heap *heap )heap_gc_request718,14785
heap_register_element( Heap *heap, Element *root )heap_register_element728,14990
heap_unregister_element( Heap *heap, Element *root )heap_unregister_element736,15141
heap_register_reduce( Heap *heap, Reduce *rc )heap_register_reduce749,15416
heap_unregister_reduce( Heap *heap, Reduce *rc )heap_unregister_reduce757,15554
heap_getmem( Heap *heap ) heap_getmem765,15730
heap_bool_new( Heap *heap, gboolean val, PElement *out )heap_bool_new835,17300
heap_real_new( Heap *heap, double in, PElement *out )heap_real_new845,17459
heap_element_new( Heap *heap, Element *e, PElement *out )heap_element_new862,17725
heap_complex_element_new( Heap *heap, heap_complex_element_new872,17881
heap_complex_new( Heap *heap, double rp, double ip, PElement *out )heap_complex_new891,18230
heap_get_list( PElement *list )heap_get_list919,18823
heap_list_init( PElement *list )heap_list_init934,19059
heap_list_add( Heap *heap, PElement *list, PElement *data )heap_list_add942,19201
heap_list_next( PElement *list )heap_list_next966,19709
heap_list_cat( Reduce *rc, PElement *a, PElement *b, PElement *out )heap_list_cat979,19877
heap_appl_init( PElement *base, PElement *func )heap_appl_init994,20147
heap_appl_add( Heap *heap, PElement *base, PElement *parm )heap_appl_add1004,20428
heap_file_new( Heap *heap, const char *filename, PElement *out )heap_file_new1027,20823
heap_string_new( Heap *heap, const char *str, PElement *out )heap_string_new1057,21388
heap_managedstring_new( Heap *heap, const char *str, PElement *out )heap_managedstring_new1080,21788
heap_lstring_new( Heap *heap, GSList *labels, PElement *out )heap_lstring_new1099,22157
heap_realvec_new( Heap *heap, int n, double *vec, PElement *out )heap_realvec_new1128,22692
heap_intvec_new( Heap *heap, int n, int *vec, PElement *out )heap_intvec_new1155,23191
heap_matrix_new( Heap *heap, heap_matrix_new1182,23676
heap_error_typecheck( PElement *e, const char *name, const char *type )heap_error_typecheck1212,24292
heap_map_list( PElement *base, heap_map_list_fn fn, void *a, void *b )heap_map_list1228,24747
heap_get_list_next( PElement *list, PElement *data )heap_get_list_next1268,25538
typedef struct _HeapMapDict {_HeapMapDict1292,25921
	heap_map_dict_fn fn;fn1293,25951
	void *a;a1294,25973
	void *b;b1295,25983
} HeapMapDict;HeapMapDict1296,25993
heap_map_dict_entry( PElement *head, HeapMapDict *map_dict )heap_map_dict_entry1299,26023
heap_map_dict( PElement *base, heap_map_dict_fn fn, void *a, void *b )heap_map_dict1345,27089
heap_get_string( PElement *base, char *buf, int n )heap_get_string1360,27396
heap_get_lstring( PElement *base, GSList **labels )heap_get_lstring1374,27664
heap_get_bool( PElement *base, gboolean *out )heap_get_bool1388,27924
heap_get_real( PElement *base, double *out )heap_get_real1402,28168
heap_get_class( PElement *base, PElement *out )heap_get_class1416,28440
heap_get_image( PElement *base, Imageinfo **out )heap_get_image1434,28763
heap_get_realvec( PElement *base, double *buf, int n )heap_get_realvec1448,29049
heap_get_imagevec( PElement *base, Imageinfo **buf, int n )heap_get_imagevec1463,29349
heap_get_matrix_size( PElement *base, int *xsize, int *ysize )heap_get_matrix_size1479,29695
heap_get_matrix( PElement *base, double *buf, int n, int *xsize, int *ysize )heap_get_matrix1494,30054
heap_is_elist( PElement *base, gboolean *out ) heap_is_elist1506,30320
heap_is_list( PElement *base, gboolean *out ) heap_is_list1518,30520
heap_is_string( PElement *base, gboolean *out ) heap_is_string1533,30835
heap_is_realvec( PElement *base, gboolean *out ) heap_is_realvec1545,31037
heap_is_matrix( PElement *base, gboolean *out ) heap_is_matrix1557,31241
heap_is_class( PElement *base, gboolean *out )heap_is_class1569,31442
heap_is_instanceof_exact( const char *name, PElement *klass, gboolean *out )heap_is_instanceof_exact1581,31640
heap_is_instanceof( const char *name, PElement *klass, gboolean *out )heap_is_instanceof1593,31886
heap_list_length( PElement *base )heap_list_length1605,32115
heap_list_length_max( PElement *base, int max_length )heap_list_length_max1618,32313
heap_list_index( PElement *base, int n, PElement *out )heap_list_index1631,32552
heap_reduce_strict( PElement *base )heap_reduce_strict1643,32762
copy_node( Heap *heap, HeapNode *ri[], HeapNode *hn, PElement *out )copy_node1660,33144
heap_copy( Heap *heap, Compile *compile, PElement *out )heap_copy1759,35341
heap_ip_to_gvalue( PElement *in, GValue *out )heap_ip_to_gvalue1814,36383
heap_gvalue_to_ip( GValue *in, PElement *out )heap_gvalue_to_ip1870,37688
#define TAB TAB1959,40119
lisp_symval( VipsBuf *buf, PElement *base, lisp_symval1969,40297
lisp_list( VipsBuf *buf, PElement *base, lisp_list2025,41553
lisp_string( VipsBuf *buf, PElement *base, lisp_string2057,42418
lisp_node( VipsBuf *buf, HeapNode *hn, GSList **back, gboolean fn, int indent )lisp_node2100,43319
lisp_pelement( VipsBuf *buf, PElement *base, lisp_pelement2244,46848
graph_node( Heap *heap, VipsBuf *buf, HeapNode *root, gboolean fn )graph_node2346,49401
graph_pelement( Heap *heap, VipsBuf *buf, PElement *root, gboolean fn )graph_pelement2368,49855
graph_element( Heap *heap, VipsBuf *buf, Element *root, gboolean fn )graph_element2396,50451
graph_pointer( PElement *root )graph_pointer2405,50615
shell_node( HeapNode *hn )shell_node2421,50918
shell_pelement( PElement *base )shell_pelement2492,52069
graph_value( PElement *root )graph_value2540,52960

row.h,1785
#define TYPE_ROW TYPE_ROW30,919
#define ROW(ROW31,953
#define ROW_CLASS(ROW_CLASS33,1028
#define IS_ROW(IS_ROW35,1114
#define IS_ROW_CLASS(IS_ROW_CLASS37,1187
#define ROW_GET_CLASS(ROW_GET_CLASS39,1267
	ROW_SHOW_NONE,ROW_SHOW_NONE45,1421
	ROW_SHOW_PARENT,ROW_SHOW_PARENT46,1437
	ROW_SHOW_CHILDROW_SHOW_CHILD47,1455
} RowShowState;RowShowState48,1471
struct _Row {_Row50,1488
	Heapmodel parent_class;parent_class51,1502
	Subcolumn *scol;	/* Enclosing subcolumn */scol55,1550
	Rhs *child_rhs;		/* Child RHS */child_rhs56,1594
	Column *top_col;	/* Enclosing top level column */top_col57,1628
	Workspace *ws;		/* Enclosing workspace */ws58,1679
	Row *top_row;		/* Enclosing root row */top_row59,1722
	Symbol *sym;		/* Symbol we represent */sym61,1764
	Expr *expr;		/* The expr we edit */expr63,1806
	gboolean err;		/* Set if this row is on the error list */err64,1843
	gboolean selected;	/* Selected or not */selected66,1903
	gboolean is_class;	/* Display spin buttons */is_class67,1945
	gboolean popup;		/* Set to pop up view on 1st display */popup68,1992
	gboolean to_save;	/* Should be saved (part of only-save-modded) */to_save69,2050
	GSList *parents;	/* rows which depend on us */parents71,2119
	GSList *children;	/* rows we depend on */children72,2167
	gboolean dirty;		/* If we're marked for recomp */dirty73,2210
	GSList *recomp;		/* If root of class display, subs to recomp */recomp74,2261
	GSList *recomp_save;	/* Previous recomp list */recomp_save75,2326
	gboolean depend;	/* For spotting dependency loops */depend77,2376
	RowShowState show;	/* For showing parent/child stuff */show79,2431
typedef struct _RowClass {_RowClass82,2492
	HeapmodelClass parent_class;parent_class83,2519
} RowClass;RowClass87,2571

istring.h,445
#define TYPE_STRING TYPE_STRING30,908
#define STRING(STRING31,948
#define STRING_CLASS(STRING_CLASS32,1017
#define IS_STRING(IS_STRING34,1110
#define IS_STRING_CLASS(IS_STRING_CLASS35,1174
struct _String {_String38,1258
	Classmodel parent_class;parent_class39,1275
	char *value;value43,1325
typedef struct _StringClass {_StringClass46,1343
	ClassmodelClass parent_class;parent_class47,1373
} StringClass;StringClass51,1426

compile.h,1915
#define MAX_RELOC MAX_RELOC32,967
#define TYPE_COMPILE TYPE_COMPILE34,993
#define COMPILE(COMPILE35,1035
#define COMPILE_CLASS(COMPILE_CLASS37,1122
#define IS_COMPILE(IS_COMPILE39,1220
#define IS_COMPILE_CLASS(IS_COMPILE_CLASS41,1301
#define COMPILE_GET_CLASS(COMPILE_GET_CLASS43,1389
struct _Compile {_Compile48,1573
	iContainer parent_object;parent_object49,1591
	Symbol *sym;		/* We are part of this symbol, scopewise */sym51,1619
	GSList *exprs;		/* We are used by these expressions */exprs53,1679
	gboolean is_klass;	/* True if this is a class */is_klass55,1736
	gboolean has_super;	/* True if has a super-class */has_super56,1786
	char *text;		/* The original text */text58,1840
	char *prhstext;		/* Parameters plus the RHS of the definition */prhstext59,1878
	char *rhstext;		/* Just the RHS of the definition */rhstext60,1944
	ParseNode *tree;	/* Parse tree we built */tree62,1999
	GSList *treefrag;	/* List of tree bits for easy freeing */treefrag63,2043
	Symbol *last_sym;	/* The last child we added in this context */last_sym64,2103
	int nparam;		/* Number of real parameters */nparam66,2169
	GSList *param;		/* Pointers into locals for real params */param67,2215
	int nsecret;		/* Number of secret parameters */nsecret68,2275
	GSList *secret;		/* Pointers into locals for secret params */secret69,2324
	Symbol *super;		/* If we are a class, the "super" local */super71,2445
	GSList *children;	/* Symbols which we directly refer to */children72,2505
	Element base; 		/* Base of compiled code */base74,2566
	Heap *heap;		/* Heap containing compiled code */heap75,2611
	GSList *statics;	/* Static strings we built */statics76,2661
typedef struct _CompileClass {_CompileClass79,2713
	iContainerClass parent_class;parent_class80,2744
} CompileClass;CompileClass84,2797
typedef void *(*map_compile_fn)( Compile *, void * );map_compile_fn90,2963

vipsobject.c,959
#define MAX_VIPS_ARGS MAX_VIPS_ARGS38,985
typedef struct _Vo {_Vo42,1053
	 Reduce *rc;rc43,1074
	char *name;name47,1125
	GType type;type48,1138
	VipsObject *object;object49,1151
	PElement args[MAX_VIPS_ARGS];args53,1221
	int nargs_supplied;nargs_supplied54,1252
	int nargs_required;nargs_required58,1341
	int nargs_output;nargs_output62,1412
	GSList *unref;unref66,1488
} Vo;Vo67,1504
vo_free( Vo *vo )vo_free70,1523
vo_new( Reduce *rc, const char *name )vo_new88,1795
vo_gather_required( PElement *item, Vo *vo )vo_gather_required122,2444
vo_set_required_input( VipsObject *object, GParamSpec *pspec,vo_set_required_input139,2778
vo_set_optional_arg( const char *name, PElement *value, Vo *vo )vo_set_optional_arg175,3823
vo_set_optional( Vo *vo, PElement *list )vo_set_optional199,4501
vo_build_result( Vo *vo, PElement *out )vo_build_result209,4682
vo_object_new( Reduce *rc, const char *name, vo_object_new229,5152

workspace.c,7781
static FilemodelClass *parent_class = NULL;parent_class36,939
static GSList *workspace_all = NULL;workspace_all38,984
workspace_get_workspacegroup( Workspace *ws )workspace_get_workspacegroup41,1039
workspace_map( workspace_map_fn fn, void *a, void *b )workspace_map49,1180
workspace_map_column( Workspace *ws, column_map_fn fn, void *a )workspace_map_column58,1390
workspace_map_symbol( Workspace *ws, symbol_map_fn fn, void *a )workspace_map_symbol67,1628
workspace_is_empty_sub( Symbol *sym )workspace_is_empty_sub74,1817
workspace_is_empty( Workspace *ws )workspace_is_empty82,1926
workspace_selected_map( Workspace *ws, row_map_fn fn, void *a, void *b )workspace_selected_map91,2130
workspace_selected_map_sym_sub( Row *row, symbol_map_fn fn, void *a )workspace_selected_map_sym_sub97,2285
workspace_selected_map_sym( Workspace *ws, workspace_selected_map_sym105,2473
workspace_selected_any( Workspace *ws )workspace_selected_any115,2709
workspace_selected_num( Workspace *ws )workspace_selected_num123,2823
workspace_selected_sym_sub( Row *row, Symbol *sym )workspace_selected_sym_sub129,2925
workspace_selected_sym( Workspace *ws, Symbol *sym )workspace_selected_sym140,3073
workspace_selected_one( Workspace *ws )workspace_selected_one149,3293
workspace_deselect_all_sub( Column *col )workspace_deselect_all_sub168,3752
workspace_deselect_all( Workspace *ws )workspace_deselect_all178,3874
	VipsBuf *buf;buf189,4152
	const char *separator;separator190,4167
	gboolean first;first191,4191
} NamesInfo;NamesInfo192,4208
workspace_selected_names_sub( Row *row, NamesInfo *names )workspace_selected_names_sub197,4280
workspace_selected_names( Workspace *ws, VipsBuf *buf, const char *separator )workspace_selected_names230,5165
workspace_column_names( Column *col, VipsBuf *buf, const char *separator )workspace_column_names243,5461
workspace_select_all( Workspace *ws )workspace_select_all258,5784
workspace_is_one_empty( Workspace *ws )workspace_is_one_empty267,5989
workspace_column_find( Workspace *ws, const char *name )workspace_column_find285,6300
workspace_column_get( Workspace *ws, const char *name )workspace_column_get299,6624
workspace_column_name_new( Workspace *ws, xmlNode *columns )workspace_column_name_new317,7005
workspace_column_pick( Workspace *ws )workspace_column_pick353,7694
workspace_column_select( Workspace *ws, Column *col )workspace_column_select380,8237
workspace_add_symbol( Workspace *ws )workspace_add_symbol403,8666
workspace_add_def( Workspace *ws, const char *str )workspace_add_def419,8941
workspace_load_file_buf( VipsBuf *buf, const char *filename )workspace_load_file_buf490,10475
workspace_load_file( Workspace *ws, const char *filename )workspace_load_file512,10973
workspace_selected_save_box( Column *col, Rect *box )workspace_selected_save_box530,11427
workspace_selected_save( Workspace *ws, const char *filename )workspace_selected_save551,11820
workspace_clone_selected( Workspace *ws )workspace_clone_selected576,12357
#define WS_RETAIN WS_RETAIN607,12955
static char *retain_files[WS_RETAIN] = { NULL };retain_files611,13036
static int retain_next = 0;retain_next615,13119
workspace_checkmark_timeout( Workspace *ws )workspace_checkmark_timeout620,13216
workspace_checkmark( Workspace *ws )workspace_checkmark657,14093
workspace_retain_clean( void )workspace_retain_clean672,14414
static time_t date_sofar;date_sofar686,14651
workspace_test_file( char *name, char *name_sofar )workspace_test_file691,14770
workspace_auto_recover_load( iWindow *iwnd, workspace_auto_recover_load722,15427
workspace_auto_recover( Mainw *mainw )workspace_auto_recover754,16228
workspace_dispose( GObject *gobject )workspace_dispose808,17590
workspace_finalize( GObject *gobject )workspace_finalize830,18052
workspace_child_add( iContainer *parent, iContainer *child, int pos )workspace_child_add852,18503
workspace_child_remove( iContainer *parent, iContainer *child )workspace_child_remove864,18789
workspace_link( Workspace *ws, Workspacegroup *wsg, const char *name )workspace_link881,19214
workspacemode_to_char( WorkspaceMode mode )workspacemode_to_char905,19796
char_to_workspacemode( const char *mode )char_to_workspacemode923,20120
workspace_view_new( Model *model, View *parent )workspace_view_new936,20506
workspace_load( Model *model, workspace_load942,20608
workspace_save( Model *model, xmlNode *xnode )workspace_save997,22126
workspace_empty( Model *model )workspace_empty1027,23125
workspace_rename_row_node( ModelLoadState *state, Column *col, xmlNode *xnode )workspace_rename_row_node1042,23377
workspace_rename_column_node( Workspace *ws, workspace_rename_column_node1060,23858
workspace_load_toolkit( const char *filename, Toolkitgroup *toolkitgroup )workspace_load_toolkit1098,24809
workspace_load_compat( Workspace *ws, int major, int minor )workspace_load_compat1107,25024
workspace_top_load( Filemodel *filemodel,workspace_top_load1142,25887
workspace_set_modified( Filemodel *filemodel, gboolean modified )workspace_set_modified1264,29258
workspace_save_all( Filemodel *filemodel, const char *filename )workspace_save_all1274,29487
workspace_class_init( WorkspaceClass *class )workspace_class_init1296,30045
workspace_init( Workspace *ws )workspace_init1332,31084
workspace_get_type( void )workspace_get_type1388,32291
workspace_new( Workspacegroup *wsg, const char *name )workspace_new1413,32875
workspace_load_empty( Workspace *ws, Workspacegroup *wsg, const char *filename )workspace_load_empty1439,33506
workspace_new_from_file( Workspacegroup *wsg, const char *filename )workspace_new_from_file1457,34006
workspace_new_from_openfile( Workspacegroup *wsg, iOpenFile *of )workspace_new_from_openfile1477,34410
workspace_new_blank( Workspacegroup *wsg, const char *name )workspace_new_blank1507,35131
workspace_merge_file( Workspace *ws, const char *filename )workspace_merge_file1523,35491
workspace_merge_column_file( Workspace *ws, const char *filename )workspace_merge_column_file1551,36165
workspace_get_bottom( Workspace *ws )workspace_get_bottom1568,36597
workspace_add_action( Workspace *ws, workspace_add_action1574,36710
workspace_number( void )workspace_number1619,37872
workspace_clone( Workspace *ws )workspace_clone1625,37958
workspace_row_dirty( Row *row, int serial )workspace_row_dirty1653,38578
workspace_selected_recalc( Workspace *ws )workspace_selected_recalc1661,38715
workspace_selected_remove2( Row *row )workspace_selected_remove21678,39051
workspace_selected_remove3( Row *row, int *nsel )workspace_selected_remove31687,39171
workspace_selected_remove4( Column *col, GSList **cs )workspace_selected_remove41696,39293
workspace_selected_remove5( Column *col )workspace_selected_remove51709,39538
workspace_selected_remove( Workspace *ws )workspace_selected_remove1731,40133
workspace_selected_remove_yesno_cb( iWindow *iwnd, void *client, workspace_selected_remove_yesno_cb1761,40945
workspace_selected_remove_yesno( Workspace *ws, GtkWidget *parent )workspace_selected_remove_yesno1775,41232
workspace_ungroup_add_index( Row *row, const char *fmt, int i )workspace_ungroup_add_index1796,41769
workspace_ungroup_row( Row *row )workspace_ungroup_row1811,42113
workspace_selected_ungroup( Workspace *ws )workspace_selected_ungroup1862,43227
workspace_set_status( Workspace *ws, const char *fmt, ... )workspace_set_status1889,43801
workspace_set_mode( Workspace *ws, WorkspaceMode mode )workspace_set_mode1903,44048
workspace_local_set( Workspace *ws, const char *txt )workspace_local_set1922,44586
workspace_local_set_from_file( Workspace *ws, const char *fname )workspace_local_set_from_file1942,45182

rowview.h,1194
#define TYPE_ROWVIEW TYPE_ROWVIEW30,948
#define ROWVIEW(ROWVIEW31,990
#define ROWVIEW_CLASS(ROWVIEW_CLASS33,1065
#define IS_ROWVIEW(IS_ROWVIEW35,1161
#define IS_ROWVIEW_CLASS(IS_ROWVIEW_CLASS36,1227
struct _Rowview {_Rowview39,1313
	View view;view40,1331
	Subcolumnview *sview;	/* Enclosing subcolumnview */sview42,1344
	Rhsview *rhsview;	/* Our rhs */rhsview44,1398
	gboolean visible;	/* Currently visible */visible46,1432
        int rnum;		/* Row of tallycolumn we are in */rnum47,1475
        guint set_name_tid;	/* id of set_name delay timer */set_name_tid48,1529
	const char *set_name;	/* Name we last set */set_name49,1590
	const char *to_set_name;/* Name we are waiting to set */to_set_name50,1636
        GtkWidget *spin;   	/* Class display open/close widgets */spin52,1695
        GtkWidget *but;   	/* Name button */but53,1762
        GtkWidget *led;      	/* Indicators */led54,1807
        GtkWidget *label;   	/* Name label */label55,1854
	char *last_tooltip;	/* Last tooltip we set */last_tooltip57,1901
typedef struct _RowviewClass {_RowviewClass60,1952
	ViewClass parent_class;parent_class61,1983
} RowviewClass;RowviewClass65,2030

progress.h,1033
#define PROGRESS_FEEDBACK_SIZE PROGRESS_FEEDBACK_SIZE32,955
#define TYPE_PROGRESS TYPE_PROGRESS34,993
#define PROGRESS(PROGRESS35,1037
#define PROGRESS_CLASS(PROGRESS_CLASS37,1127
#define IS_PROGRESS(IS_PROGRESS39,1228
#define IS_PROGRESS_CLASS(IS_PROGRESS_CLASS41,1311
#define PROGRESS_GET_CLASS(PROGRESS_GET_CLASS43,1401
typedef struct _Progress {_Progress46,1506
	iObject parent_object;parent_object47,1533
	int count;count51,1606
	GTimer *busy_timer;busy_timer55,1678
	GTimer *update_timer;update_timer56,1699
	gboolean cancel;cancel60,1750
	gboolean busy;busy65,1877
	VipsBuf feedback;feedback69,1962
	char buf[PROGRESS_FEEDBACK_SIZE];buf70,1981
	int percent;percent71,2016
} Progress;Progress72,2030
typedef struct _ProgressClass {_ProgressClass74,2043
	iObjectClass parent_class;parent_class75,2075
	void (*begin)( Progress * );begin79,2176
	void (*update)( Progress *, gboolean *cancel );update83,2267
	void (*end)( Progress * );end87,2358
} ProgressClass;ProgressClass88,2386

heap.h,7460
typedef unsigned char NodeType;NodeType34,1000
#define TAG_APPL TAG_APPL35,1032
#define TAG_CONS TAG_CONS36,1072
#define TAG_FREE TAG_FREE37,1110
#define TAG_DOUBLE TAG_DOUBLE38,1152
#define TAG_COMPLEX TAG_COMPLEX39,1198
#define TAG_GEN TAG_GEN40,1246
#define TAG_CLASS TAG_CLASS41,1288
#define TAG_SHARED TAG_SHARED42,1330
#define TAG_REFERENCE TAG_REFERENCE43,1392
#define TAG_FILE TAG_FILE44,1462
typedef unsigned char EType;EType48,1569
#define ELEMENT_NOVAL ELEMENT_NOVAL49,1598
#define ELEMENT_NODE ELEMENT_NODE50,1639
#define ELEMENT_SYMBOL ELEMENT_SYMBOL51,1694
#define ELEMENT_SYMREF ELEMENT_SYMREF52,1763
#define ELEMENT_COMPILEREF ELEMENT_COMPILEREF53,1831
#define ELEMENT_CHAR ELEMENT_CHAR54,1904
#define ELEMENT_BOOL ELEMENT_BOOL55,1951
#define ELEMENT_BINOP ELEMENT_BINOP56,1998
#define ELEMENT_UNOP ELEMENT_UNOP57,2046
#define ELEMENT_COMB ELEMENT_COMB58,2092
#define ELEMENT_TAG ELEMENT_TAG59,2134
#define ELEMENT_MANAGED ELEMENT_MANAGED60,2185
#define ELEMENT_CONSTRUCTOR ELEMENT_CONSTRUCTOR61,2237
#define ELEMENT_ELIST ELEMENT_ELIST62,2293
typedef unsigned char NodeFlags;NodeFlags66,2372
#define FLAG_SERIAL FLAG_SERIAL67,2405
#define FLAG_PRINT FLAG_PRINT68,2471
#define FLAG_DEBUG FLAG_DEBUG69,2531
#define FLAG_MARK FLAG_MARK70,2590
#define FLAG_ALL FLAG_ALL71,2645
#define SETSERIAL(SETSERIAL75,2752
typedef enum combinator_type {combinator_type83,2989
	COMB_S = 0,		/* S combinator */COMB_S84,3020
	COMB_SL,		/* S-left combinator */COMB_SL85,3053
	COMB_SR,		/* S-right combinator */COMB_SR86,3088
	COMB_I,			/* Identity combinator */COMB_I87,3124
	COMB_K,			/* K combinator */COMB_K88,3161
	COMB_GEN 		/* List generator combinator */COMB_GEN89,3191
} CombinatorType;CombinatorType90,3235
typedef struct _Element {_Element95,3349
	EType type;type96,3375
	void *ele;ele97,3388
} Element;Element98,3400
typedef struct _HeapNode {_HeapNode102,3480
			void *left;left108,3651
			void *right;		right109,3666
		} ptrs;ptrs110,3684
		double num;num111,3694
	} body;body112,3708
	NodeType type;		/* What this is */type116,3760
	NodeFlags flgs;		/* GC flags etc */flgs117,3796
	EType ltype;		/* Type of left element */ltype118,3833
	EType rtype;		/* Type of right element */rtype119,3875
} HeapNode;HeapNode120,3918
#define PPUTLEFT(PPUTLEFT125,4021
#define PPUTRIGHT(PPUTRIGHT132,4147
#define PPUT(PPUT139,4275
#define GETLEFT(GETLEFT143,4412
#define GETRIGHT(GETRIGHT144,4466
#define GETLT(GETLT145,4522
#define GETRT(GETRT146,4552
typedef struct pelement {pelement150,4651
	EType *type;type151,4677
	void **ele;ele152,4691
} PElement;PElement153,4704
#define PEPOINTLEFT(PEPOINTLEFT157,4757
#define PEPOINTRIGHT(PEPOINTRIGHT159,4844
#define PEPOINTE(PEPOINTE164,4978
#define PEGETTYPE(PEGETTYPE169,5076
#define PEGETVAL(PEGETVAL170,5112
#define PEGETE(PEGETE171,5159
#define PEGETP(PEGETP172,5229
#define PEPUTE(PEPUTE177,5408
#define PEPUTPE(PEPUTPE178,5478
#define PEPUTP(PEPUTP185,5629
#define PEPUTLEFT(PEPUTLEFT196,5890
#define PEPUTRIGHT(PEPUTRIGHT203,6028
#define PEISBINOP(PEISBINOP213,6188
#define PEISBOOL(PEISBOOL214,6241
#define PEISCHAR(PEISCHAR215,6292
#define PEISCLASS(PEISCLASS216,6343
#define PEISCONSTRUCTOR(PEISCONSTRUCTOR217,6412
#define PEISCOMB(PEISCOMB218,6477
#define PEISCOMPLEX(PEISCOMPLEX219,6528
#define PEISTAG(PEISTAG220,6601
#define PEISMANAGED(PEISMANAGED221,6650
#define PEISMANAGEDGOBJECT(PEISMANAGEDGOBJECT222,6707
#define PEISMANAGEDSTRING(PEISMANAGEDSTRING224,6793
#define PEISIMAGE(PEISIMAGE226,6875
#define PEISVIPSOBJECT(PEISVIPSOBJECT227,6944
#define PEISFILE(PEISFILE229,7042
#define PEISELIST(PEISELIST230,7110
#define PEISFLIST(PEISFLIST231,7163
#define PEISLIST(PEISLIST233,7260
#define PEISNOVAL(PEISNOVAL234,7311
#define PEISNUM(PEISNUM235,7364
#define PEISNODE(PEISNODE236,7415
#define PEISREAL(PEISREAL237,7466
#define PEISSYMBOL(PEISSYMBOL238,7535
#define PEISSYMREF(PEISSYMREF239,7590
#define PEISCOMPILEREF(PEISCOMPILEREF240,7645
#define PEISUNOP(PEISUNOP241,7708
#define PEGETSYMBOL(PEGETSYMBOL245,7809
#define PEGETSYMREF(PEGETSYMREF246,7855
#define PEGETCOMPILE(PEGETCOMPILE247,7901
#define PEGETBINOP(PEGETBINOP248,7951
#define PEGETUNOP(PEGETUNOP249,7994
#define PEGETCOMB(PEGETCOMB250,8035
#define PEGETTAG(PEGETTAG251,8086
#define PEGETREAL(PEGETREAL252,8127
#define PEGETBOOL(PEGETBOOL253,8172
#define PEGETCHAR(PEGETCHAR254,8235
#define PEGETIMAGE(PEGETIMAGE255,8305
#define PEGETII(PEGETII256,8359
#define PEGETFILE(PEGETFILE257,8404
#define PEGETMANAGED(PEGETMANAGED258,8453
#define PEGETMANAGEDSTRING(PEGETMANAGEDSTRING259,8501
#define PEGETMANAGEDGOBJECT(PEGETMANAGEDGOBJECT260,8561
#define PEGETVIPSOBJECT(PEGETVIPSOBJECT261,8633
#define PEGETHD(PEGETHD264,8721
#define PEGETTL(PEGETTL265,8774
#define PEGETREALPART(PEGETREALPART267,8829
#define PEGETIMAGPART(PEGETIMAGPART268,8887
#define PEGETCLASSCOMPILE(PEGETCLASSCOMPILE270,8947
#define PEGETCLASSSECRET(PEGETCLASSSECRET271,9008
#define PEGETCLASSMEMBER(PEGETCLASSMEMBER272,9079
struct _HeapBlock {_HeapBlock276,9180
	Heap *heap;		/* Heap we are part of */heap277,9200
	HeapBlock *next;	/* Next block in chain */next278,9240
	HeapNode *node;		/* Nodes on this block */node279,9284
	int sz;			/* Number of nodes in this block */sz280,9328
typedef int (*heap_max_fn)( Heap * );heap_max_fn285,9417
#define TYPE_HEAP TYPE_HEAP287,9456
#define HEAP(HEAP288,9492
#define HEAP_CLASS(HEAP_CLASS290,9570
#define IS_HEAP(IS_HEAP292,9659
#define IS_HEAP_CLASS(IS_HEAP_CLASS294,9734
#define HEAP_GET_CLASS(HEAP_GET_CLASS296,9816
struct _Heap {_Heap299,9909
	iObject parent_object;parent_object300,9924
	Compile *compile;	/* Debugging ... if non-null, assos. compile */compile302,9949
	heap_max_fn max_fn;	/* Max nodes in this heap */max_fn304,10017
	int mxb;		/* Max blocks until next check */mxb305,10067
	int rsz;		/* Nodes to allocate in each extra block */rsz306,10112
	int nb;			/* Number of blocks attached */nb307,10167
	HeapBlock *hb;		/* List of current blocks */hb308,10210
	HeapNode *free;		/* Start of free-node chain (sweep to here) */free309,10256
	int ncells;		/* Cells allocated */ncells311,10322
	int nfree;		/* Cells free */nfree312,10358
	int serial;		/* Last serial number we used */serial313,10388
	gboolean filled;	/* Set on heap full */filled314,10435
	GHashTable *emark;	/* Set of elements to mark on GC */emark316,10477
	GHashTable *rmark;	/* Set of Reduce to mark on GC */rmark317,10533
	GHashTable *mtable;	/* Managed associated with this heap */mtable318,10587
        guint gc_tid;		/* id of gc delay timer */gc_tid320,10649
	gboolean flush;flush325,10790
typedef struct _HeapClass {_HeapClass328,10811
	iObjectClass parent_class;parent_class329,10839
} HeapClass;HeapClass333,10889
#define EXTRACTNODE(EXTRACTNODE339,11041
#define EXTRACTNODE(EXTRACTNODE342,11145
#define NEWNODE(NEWNODE349,11358
typedef void *(*heap_safe_pointer_fn)( Heap *heap, PElement *, heap_safe_pointer_fn355,11457
typedef void *(*heap_map_fn)( HeapNode *, void *, void *);heap_map_fn360,11659
typedef void *(*heap_map_list_fn)( PElement *, void *, void * );heap_map_list_fn403,13808
typedef void *(*heap_map_dict_fn)( const char *, PElement *, void *a, void *b );heap_map_dict_fn405,13951

spin.c,1295
static ViewClass *parent_class = NULL;parent_class41,1215
	UP_CLICK,UP_CLICK46,1301
	DOWN_CLICK,DOWN_CLICK47,1312
	LAST_SIGNALLAST_SIGNAL48,1325
static guint spin_signals[LAST_SIGNAL] = { 0 };spin_signals51,1342
spin_destroy( GtkObject *object )spin_destroy54,1403
spin_real_up_click( Spin *spin )spin_real_up_click72,1705
spin_real_down_click( Spin *spin )spin_real_down_click80,1820
spin_class_init( SpinClass *class )spin_class_init88,1939
	Spin *spin;spin126,2935
	int x, y;		/* Click position */x127,2948
	int x, y;		/* Click position */y127,2948
	gboolean handled;handled128,2981
} SpinEvent;SpinEvent129,3000
allocation2rect( GtkAllocation *from, Rect *to )allocation2rect132,3026
spin_button_press_event_test( GtkWidget *widget, gpointer data )spin_button_press_event_test141,3215
spin_button_press_event_cb( GtkWidget *widget, GdkEventButton *event, spin_button_press_event_cb167,3804
spin_button_enter_notify_event_cb( GtkWidget *widget, GdkEventCrossing *event,spin_button_enter_notify_event_cb193,4414
spin_button_leave_notify_event_cb( GtkWidget *widget, GdkEventCrossing *event,spin_button_leave_notify_event_cb205,4677
spin_init( Spin *spin )spin_init217,4933
spin_get_type( void )spin_get_type247,6148
spin_new( void )spin_new270,6545

filesel.c,7612
	TIFF_COMPRESSION_NONE = 0,	/* No compression */TIFF_COMPRESSION_NONE40,1069
	TIFF_COMPRESSION_LZW,		/* Lempel-Ziv compression */TIFF_COMPRESSION_LZW41,1118
	TIFF_COMPRESSION_DEFLATE,	/* Zip (deflate) compression */TIFF_COMPRESSION_DEFLATE42,1171
	TIFF_COMPRESSION_PACKBITS,	/* Packbits compression */TIFF_COMPRESSION_PACKBITS43,1230
	TIFF_COMPRESSION_JPEG,		/* JPEG compression */TIFF_COMPRESSION_JPEG44,1285
	TIFF_COMPRESSION_CCITTFAX4	/* Fax compression */TIFF_COMPRESSION_CCITTFAX445,1333
} TiffCompression;TiffCompression46,1383
	TIFF_LAYOUT_STRIP = 0,		/* Strip TIFF */TIFF_LAYOUT_STRIP49,1418
	TIFF_LAYOUT_TILE		/* Tiled TIFF */TIFF_LAYOUT_TILE50,1460
} TiffLayout;TiffLayout51,1496
	TIFF_MULTIRES_FLAT = 0,		/* Flat file */TIFF_MULTIRES_FLAT54,1526
	TIFF_MULTIRES_PYRAMID		/* Pyramidal TIFF */TIFF_MULTIRES_PYRAMID55,1568
} TiffMultires;TiffMultires56,1613
	TIFF_FORMAT_MANYBIT = 0,	/* No bit reduction */TIFF_FORMAT_MANYBIT59,1645
	TIFF_FORMAT_ONEBIT		/* Reduce to 1 bit, where poss */TIFF_FORMAT_ONEBIT60,1694
} TiffFormat;TiffFormat61,1749
static GSList *filesel_all = NULL;filesel_all66,1860
static iDialogClass *parent_class = NULL;parent_class68,1896
static char *filesel_last_dir = NULL;filesel_last_dir73,2072
static const char *icc_suffs[] = { ".icc", ".icm", NULL };icc_suffs75,2111
static const char *workspace_suffs[] = { ".ws", NULL };workspace_suffs76,2170
static const char *rec_suffs[] = { ".rec", NULL };rec_suffs77,2226
static const char *mor_suffs[] = { ".mor", NULL };mor_suffs78,2277
static const char *con_suffs[] = { ".con", NULL };con_suffs79,2328
static const char *mat_suffs[] = { ".mat", NULL };mat_suffs80,2379
static const char *def_suffs[] = { ".def", NULL };def_suffs81,2430
static const char *all_suffs[] = { "", NULL };all_suffs82,2481
        filesel_wfile_type = filesel_wfile_type85,2545
        filesel_rfile_type = filesel_rfile_type87,2630
        filesel_mfile_type = filesel_mfile_type89,2721
        filesel_cfile_type = filesel_cfile_type91,2809
        filesel_xfile_type = filesel_xfile_type93,2898
        filesel_dfile_type = filesel_dfile_type95,2975
        filesel_ifile_type = filesel_ifile_type97,3056
        filesel_allfile_type = filesel_allfile_type99,3140
        *filesel_type_definition[] = { filesel_type_definition103,3229
        *filesel_type_workspace[] = { filesel_type_workspace106,3302
        *filesel_type_matrix[] = { filesel_type_matrix110,3375
        **filesel_type_image = NULL,filesel_type_image117,3540
        **filesel_type_mainw = NULL,filesel_type_mainw118,3577
        **filesel_type_any = NULL;filesel_type_any119,3614
build_vips_formats_sub( VipsFormatClass *format, GSList **types )build_vips_formats_sub122,3664
build_image_file_type( void )build_image_file_type160,4611
build_file_type_va( FileselFileType **first, ... )build_file_type_va177,4991
filesel_startup( void )filesel_startup212,5739
is_file_type( const FileselFileType *type, const char *filename )is_file_type224,6091
decode_tiff_compression( TiffCompression tc )decode_tiff_compression241,6412
decode_tiff_layout( TiffLayout tf )decode_tiff_layout257,6812
decode_tiff_multires( TiffMultires tm )decode_tiff_multires269,6986
decode_tiff_format( TiffFormat tm )decode_tiff_format281,7171
filesel_tiff_mode( char *out )filesel_tiff_mode295,7389
filesel_jpeg_mode( char *out )filesel_jpeg_mode329,8327
filesel_png_mode( char *out )filesel_png_mode376,9086
filesel_ppm_mode( char *out )filesel_ppm_mode384,9244
filesel_csv_mode( char *out )filesel_csv_mode400,9468
typedef void (*make_mode_fn)( char *buf );make_mode_fn411,9699
	const char *caption_filter;	/* nip2 column name for the format */caption_filter414,9760
	const char *name;		/* vips nickname for the format */name415,9827
	make_mode_fn mode_fn;		/* Build a mode string */mode_fn416,9882
} FileselMode;FileselMode417,9932
static FileselMode filesel_mode_table[] = {filesel_mode_table419,9948
filesel_get_mode( const char *filename )filesel_get_mode428,10207
filesel_add_mode( char *filename )filesel_add_mode450,10694
filesel_get_filter( const char *filename )filesel_get_filter464,10957
filesel_destroy( GtkObject *object )filesel_destroy475,11136
filesel_space_update( Filesel *filesel, const char *dirname )filesel_space_update493,11509
filesel_add_volume( const char *dir, Filesel *filesel )filesel_add_volume518,12096
filesel_suffix_to_glob( const char *suffix, VipsBuf *patt )filesel_suffix_to_glob533,12428
filesel_make_patt( FileselFileType *type, VipsBuf *patt )filesel_make_patt555,12876
filesel_get_dir( Filesel *filesel )filesel_get_dir576,13295
filesel_dir_enter( Filesel *filesel )filesel_dir_enter583,13438
filesel_current_folder_changed_cb( GtkWidget *widget, gpointer data )filesel_current_folder_changed_cb603,13826
filesel_info_update( Filesel *filesel, const char *name )filesel_info_update611,13985
filesel_get_filetype( Filesel *filesel )filesel_get_filetype623,14241
filesel_find_file_type( FileselFileType **type, const char *filename )filesel_find_file_type653,14791
filesel_set_filter( Filesel *filesel, GtkFileFilter *filter )filesel_set_filter666,15054
filesel_set_filetype_from_filename( Filesel *filesel, const char *name )filesel_set_filetype_from_filename679,15314
filesel_set_filename( Filesel *filesel, const char *name )filesel_set_filename708,16045
filesel_get_filename( Filesel *filesel )filesel_get_filename747,16963
filesel_map_filename_multi( Filesel *filesel,filesel_map_filename_multi774,17461
filesel_selection_changed_cb( GtkWidget *widget, gpointer data )filesel_selection_changed_cb798,17951
filesel_file_activated_cb( GtkWidget *widget, gpointer data )filesel_file_activated_cb820,18471
filesel_auto_incr_cb( GtkWidget *tog, Filesel *filesel )filesel_auto_incr_cb828,18628
filesel_update_preview_cb( GtkFileChooser *chooser, Filesel *filesel )filesel_update_preview_cb837,18831
file_filter_from_file_type( FileselFileType *type )file_filter_from_file_type849,19136
filesel_add_filter( Filesel *filesel, FileselFileType *type, int i )filesel_add_filter875,19713
filesel_build( GtkWidget *widget )filesel_build891,20137
filesel_class_init( FileselClass *class )filesel_class_init1008,23684
filesel_increment_filename( Filesel *filesel )filesel_increment_filename1023,24063
filesel_refresh( Filesel *filesel )filesel_refresh1039,24386
filesel_refresh_all( void )filesel_refresh_all1055,24719
filesel_init( Filesel *filesel )filesel_init1061,24841
filesel_get_type( void )filesel_get_type1098,25807
filesel_new( void )filesel_new1121,26225
filesel_set_done( Filesel *filesel, iWindowFn done_cb, void *client )filesel_set_done1129,26353
filesel_trigger2( void *sys, iWindowResult result )filesel_trigger21138,26568
filesel_trigger( Filesel *filesel, iWindow *iwnd, filesel_trigger1173,27309
filesel_prefs_ok_cb( iWindow *iwnd, void *client,filesel_prefs_ok_cb1192,27782
filesel_prefs( Filesel *filesel, iWindow *iwnd, filesel_prefs1206,28118
filesel_yesno_cb( iWindow *iwnd, void *client,filesel_yesno_cb1235,28950
filesel_done_cb( iWindow *iwnd, void *client, iWindowNotifyFn nfn, void *sys )filesel_done_cb1260,29517
filesel_set_flags( Filesel *filesel, gboolean imls, gboolean save )filesel_set_flags1296,30366
filesel_set_filetype( Filesel *filesel, filesel_set_filetype1306,30591
filesel_set_filetype_pref( Filesel *filesel, filesel_set_filetype_pref1320,30928
filesel_set_multi( Filesel *filesel, gboolean multi )filesel_set_multi1327,31042

vipsobject.h,0

workspace.h,2727
#define TYPE_WORKSPACE TYPE_WORKSPACE30,904
#define WORKSPACE(WORKSPACE31,950
#define WORKSPACE_CLASS(WORKSPACE_CLASS33,1043
#define IS_WORKSPACE(IS_WORKSPACE35,1147
#define IS_WORKSPACE_CLASS(IS_WORKSPACE_CLASS37,1232
#define WORKSPACE_GET_CLASS(WORKSPACE_GET_CLASS39,1324
	WORKSPACE_MODE_REGULAR, /* Vanilla! */WORKSPACE_MODE_REGULAR45,1490
	WORKSPACE_MODE_FORMULA, /* Show formula, not values */WORKSPACE_MODE_FORMULA46,1530
	WORKSPACE_MODE_NOEDIT	/* Shut down all edits */WORKSPACE_MODE_NOEDIT47,1586
} WorkspaceMode;WorkspaceMode48,1635
	WORKSPACE_LOAD_TOP,	/* Load as new workspace */WORKSPACE_LOAD_TOP53,1711
	WORKSPACE_LOAD_COLUMNS,	/* Merge columns into current workspace */WORKSPACE_LOAD_COLUMNS54,1760
	WORKSPACE_LOAD_ROWS	/* Merge rows into current column */WORKSPACE_LOAD_ROWS55,1828
} WorkspaceLoadType;WorkspaceLoadType56,1886
	WORKSPACE_SAVE_ALL,	/* Save all rows */WORKSPACE_SAVE_ALL61,2005
	WORKSPACE_SAVE_SELECTED	/* Only save selected rows */WORKSPACE_SAVE_SELECTED62,2046
} WorkspaceSaveType;WorkspaceSaveType63,2101
struct _Workspace {_Workspace67,2143
	Filemodel parent_object;parent_object68,2163
	Symbol *sym;sym72,2233
	Toolkitgroup *kitg;kitg76,2292
	int next;		/* Index for next column name */next80,2330
	Column *current;	/* Current column */current81,2375
	GSList *selected;	/* Rows selected in this workspace */selected82,2414
	GSList *errors;		/* Rows with errors */errors83,2471
        WorkspaceMode mode;	/* Display mode */mode84,2512
	gboolean compat_78;	/* In 7.8.x compatibility mode */compat_7889,2661
	int compat_major;compat_major94,2824
	int compat_minor;compat_minor95,2843
	WorkspaceLoadType load_type;load_type99,2903
	WorkspaceSaveType save_type;save_type100,2933
	Rect area;		/* Rect enclosing the set of columns */area102,2964
	Rect vp;		/* Viewport hint ... set by views */vp103,3017
	int window_width;	/* Enclosing window size ... set by views */window_width104,3065
	int window_height;window_height105,3129
	gboolean lpane_open;	/* Pane model */lpane_open106,3149
	int lpane_position;	lpane_position107,3188
	gboolean rpane_open;rpane_open108,3210
	int rpane_position;rpane_position109,3232
	guint auto_save_timeout;/* Timeout for next autosave */auto_save_timeout111,3254
	char *status;		/* Status message */status113,3312
	iWindow *iwnd;iwnd119,3516
	double scale;scale123,3578
	double offset;offset124,3593
	char *local_defs;local_defs129,3704
	Toolkitgroup *local_kitg;local_kitg130,3723
	Toolkit *local_kit;local_kit131,3750
typedef struct _WorkspaceClass {_WorkspaceClass134,3775
	FilemodelClass parent_class;parent_class135,3808
} WorkspaceClass;WorkspaceClass139,3857

toolkitview.c,767
#define TOOLKITVIEW_MENU_OFFSET TOOLKITVIEW_MENU_OFFSET39,1070
static ViewClass *parent_class = NULL;parent_class41,1105
toolkitview_destroy( GtkObject *object )toolkitview_destroy44,1158
toolkitview_finalize( GObject *gobject )toolkitview_finalize64,1549
toolkitview_destroy_cb( GtkWidget *widget, Toolkitview *kview )toolkitview_destroy_cb76,1799
toolkitview_refresh( vObject *vobject )toolkitview_refresh86,1971
toolkitview_link( View *view, Model *model, View *parent )toolkitview_link144,3564
toolkitview_class_init( ToolkitviewClass *class )toolkitview_class_init160,3939
toolkitview_init( Toolkitview *kview )toolkitview_init183,4504
toolkitview_get_type( void )toolkitview_get_type191,4644
toolkitview_new( void )toolkitview_new214,5114

log.c,451
static iWindowClass *parent_class = NULL;parent_class40,1036
log_build( GtkWidget *widget ) log_build43,1091
log_class_init( LogClass *class )log_class_init95,2719
log_init( Log *log )log_init113,3111
log_get_type( void )log_get_type118,3145
log_clear_action_cb( GtkAction *action, Log *log )log_clear_action_cb141,3532
log_text( Log *log, const char *buf )log_text150,3766
log_textf( Log *log, const char *fmt, ... )log_textf169,4310

iimage.c,1238
static ClassmodelClass *parent_class = NULL;parent_class36,950
iimage_dispose( GObject *gobject )iimage_dispose39,1008
iimage_finalize( GObject *gobject )iimage_finalize60,1438
iimage_generate_caption( iObject *iobject ) iimage_generate_caption83,1908
iimage_info( iObject *iobject, VipsBuf *buf )iimage_info102,2289
iimage_view_new( Model *model, View *parent )iimage_view_new123,2760
iimage_edit( GtkWidget *parent, Model *model )iimage_edit129,2852
iimage_save( Model *model, xmlNode *xnode )iimage_save141,3051
iimage_load( Model *model, iimage_load173,4120
iimage_update_heap( Heapmodel *heapmodel )iimage_update_heap200,5197
iimage_class_get( Classmodel *classmodel, PElement *root )iimage_class_get238,6229
iimage_class_new( Classmodel *classmodel, PElement *fn, PElement *out )iimage_class_new284,7288
iimage_graphic_save( Classmodel *classmodel, iimage_graphic_save310,7829
iimage_replace( iImage *iimage, const char *filename )iimage_replace348,8600
iimage_graphic_replace( Classmodel *classmodel, iimage_graphic_replace371,9235
iimage_class_init( iImageClass *class )iimage_class_init378,9405
iimage_init( iImage *iimage )iimage_init421,10623
iimage_get_type( void )iimage_get_type449,11198

group.c,498
static ValueClass *parent_class = NULL;parent_class36,948
group_finalize( GObject *gobject )group_finalize39,1001
group_save_item( PElement *item, char *filename )group_save_item64,1463
group_save_list( PElement *list, char *filename )group_save_list136,3017
group_graphic_save( Classmodel *classmodel, group_graphic_save156,3355
group_class_init( GroupClass *class )group_class_init176,3830
group_init( Group *group )group_init194,4232
group_get_type( void )group_get_type200,4323
